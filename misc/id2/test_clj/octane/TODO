###############################################################################
#
###############################################################################
	+ 2/15/2009	Berlin Brown
		* Test cases, documentation
		* Keystrokes
		* Add system properties definition
		* USE JAVA NIO for large files
		
		FEATURES NOT COMPLETE, first release:
			1. Scripts (X)
			2. Web documentation (X)
			3. Web server / app server (X)
			4. Better code generation (add junit, clojure test, etc)

		FEATURES MUST COMPLETE:
			1. Keystrokes      (+)
			2. Finish search   (+)
				- Find Box
				- Finish Regex Search
			3. Analytics       (!)
			4. Doc - XML -> XSL (? later)
			5. Open Jars (+), Open Zip Files
			6. Open large files (?) - might limit opening large files, java nio
				Possible max of 28MB
			7. Log4j (very careful) ??
			8. Timeout/Alarm long running processes
			9. Dynamic Styled Text (?) 
			10. Install Tool
			11. (optional Classpath Tool) 
			12. New find file (!)
			13. Script  (+)
			14. Search Statistics (+)
			15. Swap Buffers (+)

	+ 2/14/2009	Berlin Brown	
		* Output data to text buffer
			E.g. that will be used with chart.

			- Keyword Exception search
			- Data related every two minutes
				- Or different granuluar

				- (1) SystemOut
					Sec Log Serv
					Exception			
				- (2) SystemErr
				- (3) Garbage Collection
					- After free, total
				- (3b) Time between garbage collection
				- (4) RequestLog
				- (5) SQL Errors
				- (6) DB2 Query

	+ 2/12/2009     Berlin Brown
		* Big file split, possibly with Java tool
		* Jetty Server or simple server for
			simple application.

	+ 2/8/2009	Berlin Brown
		* Avoid the following shortcuts:
			http://en.wikipedia.org/wiki/Table_of_keyboard_shortcuts

			- Shortcut - Quick search
			
			- Shortcut - add to notes
			- Shortcut - Open explorer
			- Shortcut - Open database view

		* Add 'Run' Tools menu option,
		  where the 'server' tools are found
		* Add 'Graphs' sections
		* Add 'Analytics' menu option
		* Possibly add a 'command line' interface to the app
		* Add quick keys (emacs based)
		* Open explorer on current working directory 
		* Database viewer, search and replace at command line
		* NOTE taker (new tab)

		rsdev01 , rstest01 ; napol1 , naubm01
			
	+ 2/7/2009 	Berlin Brown
		* JETTY web server
		* PDF Creator Tool
		
	+ 2/2/2009 	Berlin Brown
		* Logger package manager (put widgets dev)
		* Convert XHTML/HTML to PDF
		* Add quick search tools, etc
			- Quick Find in Files/Grep
			- Quick Find in Files/Grep - last 15 minutes
			- Quick Find in Files/Grep - last 2 hours
			- Quick Find Java Files/Grep
			- Quick Find Log Files/Grep

		* Code gen  java / unit tests

	find . -mtime 0   # find files modified between now and 1 day ago
       	# (i.e., within the past 24 hours)

	+ 1/31/2009 	Berlin Brown
		* Web browser tools (view source)
		* Possibly audit the tool

	+ 1/29/2009 	Berlin Brown
		* Sticky Notes?  Graphics that have text at random places

	+ 1/23/2009 	Berlin Brown	berlin dot brown at gmail.com
		* Add web proxy
		* Add 'ant search' tool as an external launch application.
		* Add vocabulary
			- Set = directory
			- Database Viewer = virtual system for viewing files or sets
			- Command = #<command>:<args>: ... etc
				#script:: (load it or something)
				#regex:1: (Blah) 
		* Add memory				
		
		* Advanced database viewer
		* Search arrow up and down for history
		* Grep/Find tools for directories, E.g. quick access to common html/sql directories
		* Database viewer for html sql directories
		* Diff tool for prod, test, etc.
	
		* Search in 'Files' tool
			- Open directory will print a list of all the files to the main directory
			- Then use 'find in directory' dialog box
				Also have the option for 'grep' in directory
		* Launch scripts from the edit box search field with the command interface 				
	
	+ 1/21/2009 Berlin Brown	berlin dot brown at gmail.com
		* Shared key bindings with emacs
		* Have different font sizes, properties
		* Open a socket and listen and when an existing octane log	
			view application is opened...etc, like gnuserv/client
		* Runtime dialog box (see Eclipse)
		* Powerful 'search' keywords
			#date_logs:  9 am (show me all logs at 9am)
			#date_logs_between: 9am 10am
			#filter: Exception (only show me lines with exception
			#only_lines: 1 2  (show me lines 1 to 2
			#tokenize_line: **** add these characters to a line
			#tokenize_clear:
			#tokenize_search:  ((( ))) dogs
			
			Might run these through the scriplet (octane scripts)
			
		* Paging of long buffers?
	
	+ 1/20/2009 Berlin Brown	berlin dot brown at gmail.com
		* With the standalone win32 tools, have it launch
			standard linux tools: 'ls', 'find', 'grep', 'sed', 'awk', 'diff' 
				(change the names, no conflicts)
					
		* Add left column line number
		* Hex Editor Mode
		* Draw graphics on the text editor screen
		* (bug-fix) Escape 'regex' characters		
		* Add date/log highlighters.  Possibly WSAD log syntax highlighting.
		* Possible SQL parser
		* Search tool
		* Regex builder,  new screen
		* Search Menu has the following items
			1. Find 
			2. Regex Search Tool
			3. Goto Line
		* Possible EDIT options and
			1. Change Case all upper or all lower
		* Possible Project Manager View
		* Visible Spaces
		* Document Properties Dialog Box
		* Preferences Screen with Editable Table
		* End of File Detection with graphic (line?)

		* Documentation - User Manual, Features/Requirements, Technical Spec
		* Script tool, ability to add search scripts
				Could be used for:
					1. Loading a file (agents?) and searching all the lines and see if the text appears in the
						document.
					2. Normal search (search "stuff")
					3.  (open file) (seach "stuff")
					4. Highlight with different colors, etc.
					
		* Canned regex queries. @@@@
		* Canned scripts		
		* The regex screen will include: @@@@
			1. Editor Screen
			2. Example text, example log file
			3. canned queries  <deprecated>
				(optional), Regex code generator.  					

	+ 1/18/2009 Berlin Brown	berlin dot brown at gmail.com
		* With the database viewer, add ability to pair up files.
			For example, System Out and System Err could
			be paired together. 
		* Add database file in simple XML parse file, 
			and then 'jar' zip the file.
		* Add JAR file viewer, with package management, etc.
		* Jar viewer and ASM class viewer.
		* Add file/text file database. @@@@		
			-------------
			File Database for Dialog
			-------------
			name, end of path, group, server, short description.
			
		* Add analytics tools for data mining and collective intelligence.
		* Regex helper tool with possible incremental search. @@@@
		* Emacs like key bindings.
		* Grep like functionality to search only the active buffers in the 
			information database.			
			
	+ 1/5/2009 Berlin Brown (initial coding)
# End of File
