//
// Copyright (c) 1997, 2010, Oracle and/or its affiliates. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License version 2 only, as
// published by the Free Software Foundation.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// You should have received a copy of the GNU General Public License version
// 2 along with this work; if not, write to the Free Software Foundation,
// Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
//
// Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
// or visit www.oracle.com if you need additional information or have any
// questions.
//
//

// Machine Generated File.  Do Not Edit!


#include "incls/_precompiled.incl"
#include "incls/_dfa_x86_32.cpp.incl"


//------------------------- Source -----------------------------------------

//------------------------- Attributes -------------------------------------

// AttributeForm 
static const int op_cost = 0;

// AttributeForm 
static const int ins_cost = 100;

// AttributeForm 
static const int ins_size = 8;

// AttributeForm 
static const int ins_pc_relative = 0;

// AttributeForm 
static const int ins_short_branch = 0;

// AttributeForm 
static const int ins_alignment = 1;

//------------------------- Macros -----------------------------------------
#define DFA_PRODUCTION(result, rule, cost)\
  _cost[ (result) ] = cost; _rule[ (result) ] = rule;

#define DFA_PRODUCTION__SET_VALID(result, rule, cost)\
  DFA_PRODUCTION( (result), (rule), (cost) ); STATE__SET_VALID( (result) );

//------------------------- DFA --------------------------------------------
// DFA is a large switch with case statements for each ideal opcode encountered
// in any match rule in the ad file.  Each case has a series of if's to handle
// the match or fail decisions.  The matches test the cost function of that
// rule, and prune any cases which are higher cost for the same reduction.
// In order to generate the DFA we walk the table of ideal opcode/MatchList
// pairs generated by the ADLC front end to build the contents of the case
// statements (a series of if statements).


void  State::_sub_Op_RegI(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(NCXREGI, ncxRegI_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(NADXREGI, nadxRegI_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(NAXREGI, naxRegI_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(EREGI, eRegI_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, xRegI_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, eAXRegI_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, eBXRegI_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, eCXRegI_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, eDXRegI_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, eDIRegI_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, eSIRegI_rule, c)
    }
}
void  State::_sub_Op_RegP(const Node *n){
    {
      unsigned int c = 100;
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, load_long_RegP_rule, c)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, load_long_indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(EBPREGP, eBPRegP_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(PREGP, pRegP_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(NABXREGP, nabxRegP_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(NAXREGP, naxRegP_rule, c)
    }
    {
      unsigned int c = 100;
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, eRegP_no_EBP_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, indirect_win95_safe_rule, c+100)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(EREGP, eRegP_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(ANYREGP, anyRegP_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGP, eAXRegP_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGP, eBXRegP_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGP, eCXRegP_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGP, eSIRegP_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGP, eDIRegP_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c)
    }
    {
      unsigned int c = 0;
    }
}
void  State::_sub_Op_RegF(const Node *n){
    if(         
#line 5331 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE>=1 
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(REGX, regX_rule, c)
    }
    if(         
#line 5312 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE < 2 
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(REGF, regF_rule, c)
        DFA_PRODUCTION__SET_VALID(REGFPR1, regFPR1_rule, c)
    }
}
void  State::_sub_Op_RegD(const Node *n){
    if(         
#line 5283 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE>=2 
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(REGXD, regXD_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, regXD6_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, regXD7_rule, c)
    }
    if(         
#line 5248 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE < 2 
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(REGD, regD_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR1, regDPR1_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR2, regDPR2_rule, c)
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, regnotDPR1_rule, c)
    }
}
void  State::_sub_Op_RegL(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(EADXREGL_LOW_ONLY, eADXRegL_low_only_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(EREGL, eRegL_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
        DFA_PRODUCTION__SET_VALID(EADXREGL, eADXRegL_rule, c)
        DFA_PRODUCTION__SET_VALID(EBCXREGL, eBCXRegL_rule, c)
    }
}
void  State::_sub_Op_RegFlags(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(FLAGSREG_LONG_LEGT, flagsReg_long_LEGT_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(FLAGSREG_LONG_EQNE, flagsReg_long_EQNE_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(FLAGSREG_LONG_LTGE, flagsReg_long_LTGE_rule, c)
    }
    if(         
#line 5220 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
false
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(EFLAGSREGUCF, eFlagsRegUCF_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(EFLAGSREGU, eFlagsRegU_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(EFLAGSREG, eFlagsReg_rule, c)
    }
}
void  State::_sub_Op_AbsD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGXD) &&
        (
#line 10076 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+100;
        DFA_PRODUCTION__SET_VALID(REGXD, absXD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, absXD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, absXD_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGDPR1) &&
        (
#line 10066 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGDPR1]+100;
        DFA_PRODUCTION__SET_VALID(REGDPR1, absD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGD, absD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR2, absD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, absD_reg_rule, c)
    }
}
void  State::_sub_Op_AbsF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGX) &&
        (
#line 11217 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+100;
        DFA_PRODUCTION__SET_VALID(REGX, absX_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGFPR1) &&
        (
#line 11207 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGFPR1]+100;
        DFA_PRODUCTION__SET_VALID(REGFPR1, absF_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGF, absF_reg_rule, c)
    }
}
void  State::_sub_Op_AddD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], _MULD_REGD_REGD) &&
        (
#line 10388 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE<=1 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[_MULD_REGD_REGD]+250;
        DFA_PRODUCTION__SET_VALID(REGD, addD_mulD_reg_0_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR1, addD_mulD_reg_0_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR2, addD_mulD_reg_0_rule, c)
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, addD_mulD_reg_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _MULD_REGD_REGD) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 10388 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE<=1 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_MULD_REGD_REGD]+_kids[1]->_cost[REGD]+250;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, addD_mulD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR1) || _cost[REGDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR1, addD_mulD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR2) || _cost[REGDPR2] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR2, addD_mulD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGNOTDPR1) || _cost[REGNOTDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, addD_mulD_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADD_MEMORY_) && STATE__VALID_CHILD(_kids[1], REGXD) &&
        (
#line 10218 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_LOADD_MEMORY_]+_kids[1]->_cost[REGXD]+100;
        DFA_PRODUCTION__SET_VALID(REGXD, addXD_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, addXD_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, addXD_mem_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGXD) && STATE__VALID_CHILD(_kids[1], _LOADD_MEMORY_) &&
        (
#line 10218 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+_kids[1]->_cost[_LOADD_MEMORY_]+100;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, addXD_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, addXD_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, addXD_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGXD) && STATE__VALID_CHILD(_kids[1], IMMXD) &&
        (
#line 10210 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+_kids[1]->_cost[IMMXD]+100;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, addXD_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, addXD_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, addXD_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGXD) && STATE__VALID_CHILD(_kids[1], REGXD) &&
        (
#line 10202 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+_kids[1]->_cost[REGXD]+100;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, addXD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, addXD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, addXD_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], IMMD) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[IMMD];
        DFA_PRODUCTION__SET_VALID(_ADDD_REGD_IMMD, _AddD_regD_immD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], IMMD) &&
        (
#line 10176 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1 && _kids[1]->_leaf->getd() != 0.0 && _kids[1]->_leaf->getd() != 1.0 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[IMMD]+200;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, addD_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR1) || _cost[REGDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR1, addD_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR2) || _cost[REGDPR2] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR2, addD_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGNOTDPR1) || _cost[REGNOTDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, addD_reg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], IMMD1) &&
        (
#line 10164 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[IMMD1]+125;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, addD_reg_imm1_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR1) || _cost[REGDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR1, addD_reg_imm1_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR2) || _cost[REGDPR2] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR2, addD_reg_imm1_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGNOTDPR1) || _cost[REGNOTDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, addD_reg_imm1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], _LOADD_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[_LOADD_MEMORY_];
        DFA_PRODUCTION__SET_VALID(_ADDD_REGD__LOADD_MEMORY_, _AddD_regD__LoadD_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADD_MEMORY_) && STATE__VALID_CHILD(_kids[1], REGD) ) {
      unsigned int c = _kids[0]->_cost[_LOADD_MEMORY_]+_kids[1]->_cost[REGD];
        DFA_PRODUCTION__SET_VALID(_ADDD__LOADD_MEMORY__REGD, _AddD__LoadD_memory__regD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADD_MEMORY_) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 10134 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_LOADD_MEMORY_]+_kids[1]->_cost[REGD]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, addD_reg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR1) || _cost[REGDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR1, addD_reg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR2) || _cost[REGDPR2] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR2, addD_reg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGNOTDPR1) || _cost[REGNOTDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, addD_reg_mem_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], _LOADD_MEMORY_) &&
        (
#line 10134 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[_LOADD_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, addD_reg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR1) || _cost[REGDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR1, addD_reg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR2) || _cost[REGDPR2] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR2, addD_reg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGNOTDPR1) || _cost[REGNOTDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, addD_reg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD];
        DFA_PRODUCTION__SET_VALID(_ADDD_REGD_REGD, _AddD_regD_regD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 10105 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, addD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR1) || _cost[REGDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR1, addD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR2) || _cost[REGDPR2] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR2, addD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGNOTDPR1) || _cost[REGNOTDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, addD_reg_rule, c)
      }
    }
}
void  State::_sub_Op_AddF(const Node *n){
    bool Compile__current____select_24_bit_instr__ = Compile::current()->select_24_bit_instr();
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], _MULF_REGF_REGF) &&
        (
#line 11487 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && !Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[_MULF_REGF_REGF]+100;
        DFA_PRODUCTION__SET_VALID(REGF, addF_mulF_reg_0_rule, c)
        DFA_PRODUCTION__SET_VALID(REGFPR1, addF_mulF_reg_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _MULF_REGF_REGF) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 11487 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && !Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_MULF_REGF_REGF]+_kids[1]->_cost[REGF]+100;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, addF_mulF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, addF_mulF_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], _MULF_REGF__LOADF_MEMORY_) &&
        (
#line 11465 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && !Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[_MULF_REGF__LOADF_MEMORY_]+95;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, addF_mulF_reg_load1_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, addF_mulF_reg_load1_2_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _MULF_REGF__LOADF_MEMORY_) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 11465 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && !Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_MULF_REGF__LOADF_MEMORY_]+_kids[1]->_cost[REGF]+95;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, addF_mulF_reg_load1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, addF_mulF_reg_load1_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], _MULF__LOADF_MEMORY__REGF) &&
        (
#line 11465 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && !Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[_MULF__LOADF_MEMORY__REGF]+95;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, addF_mulF_reg_load1_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, addF_mulF_reg_load1_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _MULF__LOADF_MEMORY__REGF) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 11465 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && !Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_MULF__LOADF_MEMORY__REGF]+_kids[1]->_cost[REGF]+95;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, addF_mulF_reg_load1_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, addF_mulF_reg_load1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], IMMF) &&
        (
#line 11331 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && !Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[IMMF]+100;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, addF_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, addF_reg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], IMMF) &&
        (
#line 11317 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[IMMF]+100;
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, addF24_reg_imm_rule, c)
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGF, loadSSF_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, loadSSF_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], MEMORY) &&
        (
#line 11302 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[MEMORY]+100;
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, addF24_mem_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGF, loadSSF_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, loadSSF_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADF_MEMORY_) && STATE__VALID_CHILD(_kids[1], MEMORY) &&
        (
#line 11288 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_LOADF_MEMORY_]+_kids[1]->_cost[MEMORY]+100;
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, addF24_mem_cisc_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGF, loadSSF_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, loadSSF_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _LOADF_MEMORY_) &&
        (
#line 11288 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_LOADF_MEMORY_]+100;
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, addF24_mem_cisc_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGF, loadSSF_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, loadSSF_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 11274 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[REGF]+100;
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, addF24_mem_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGF, loadSSF_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, loadSSF_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADF_MEMORY_) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 11261 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && !Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_LOADF_MEMORY_]+_kids[1]->_cost[REGF]+100;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, addF_reg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, addF_reg_mem_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], _LOADF_MEMORY_) &&
        (
#line 11261 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && !Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[_LOADF_MEMORY_]+100;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, addF_reg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, addF_reg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADF_MEMORY_) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 11245 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_LOADF_MEMORY_]+_kids[1]->_cost[REGF]+100;
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, addF24_reg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGF, loadSSF_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, loadSSF_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], _LOADF_MEMORY_) &&
        (
#line 11245 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[_LOADF_MEMORY_]+100;
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, addF24_reg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGF, loadSSF_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, loadSSF_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADF_MEMORY_) && STATE__VALID_CHILD(_kids[1], REGX) &&
        (
#line 11090 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_LOADF_MEMORY_]+_kids[1]->_cost[REGX]+100;
        DFA_PRODUCTION__SET_VALID(REGX, addX_mem_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGX) && STATE__VALID_CHILD(_kids[1], _LOADF_MEMORY_) &&
        (
#line 11090 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+_kids[1]->_cost[_LOADF_MEMORY_]+100;
      if (STATE__NOT_YET_VALID(REGX) || _cost[REGX] > c) {
        DFA_PRODUCTION__SET_VALID(REGX, addX_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGX) && STATE__VALID_CHILD(_kids[1], IMMXF) &&
        (
#line 11082 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+_kids[1]->_cost[IMMXF]+100;
      if (STATE__NOT_YET_VALID(REGX) || _cost[REGX] > c) {
        DFA_PRODUCTION__SET_VALID(REGX, addX_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGX) && STATE__VALID_CHILD(_kids[1], REGX) &&
        (
#line 11074 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+_kids[1]->_cost[REGX]+100;
      if (STATE__NOT_YET_VALID(REGX) || _cost[REGX] > c) {
        DFA_PRODUCTION__SET_VALID(REGX, addX_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 11061 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && !Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF]+100;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, addF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, addF_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 11048 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF]+100;
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, addF24_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGF, loadSSF_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, loadSSF_rule, c+125)
      }
    }
}
void  State::_sub_Op_AddI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _SUBI_NCXREGI_NCXREGI) && STATE__VALID_CHILD(_kids[1], _ANDI_NCXREGI__CMPLTMASK_NCXREGI_NCXREGI) &&
        /*p*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[1]->_kids[0]->_leaf) && /*q*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_SUBI_NCXREGI_NCXREGI]+_kids[1]->_cost[_ANDI_NCXREGI__CMPLTMASK_NCXREGI_NCXREGI]+400;
        DFA_PRODUCTION__SET_VALID(NCXREGI, cadd_cmpLTMask_2_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI_NCXREGI__CMPLTMASK_NCXREGI_NCXREGI) && STATE__VALID_CHILD(_kids[1], _SUBI_NCXREGI_NCXREGI) &&
        /*p*/(_kids[0]->_kids[1]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*q*/(_kids[0]->_kids[1]->_kids[1]->_leaf == _kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_ANDI_NCXREGI__CMPLTMASK_NCXREGI_NCXREGI]+_kids[1]->_cost[_SUBI_NCXREGI_NCXREGI]+400;
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, cadd_cmpLTMask_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _SUBI_NCXREGI_NCXREGI) && STATE__VALID_CHILD(_kids[1], _ANDI__CMPLTMASK_NCXREGI_NCXREGI_NCXREGI) &&
        /*p*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) && /*q*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_kids[0]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_SUBI_NCXREGI_NCXREGI]+_kids[1]->_cost[_ANDI__CMPLTMASK_NCXREGI_NCXREGI_NCXREGI]+400;
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, cadd_cmpLTMask_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI__CMPLTMASK_NCXREGI_NCXREGI_NCXREGI) && STATE__VALID_CHILD(_kids[1], _SUBI_NCXREGI_NCXREGI) &&
        /*p*/(_kids[0]->_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*q*/(_kids[0]->_kids[0]->_kids[1]->_leaf == _kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_ANDI__CMPLTMASK_NCXREGI_NCXREGI_NCXREGI]+_kids[1]->_cost[_SUBI_NCXREGI_NCXREGI]+400;
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, cadd_cmpLTMask_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI_M1];
        DFA_PRODUCTION__SET_VALID(_ADDI__LOADI_MEMORY__IMMI_M1, _AddI__LoadI_memory__immI_M1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI1) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI1];
        DFA_PRODUCTION__SET_VALID(_ADDI__LOADI_MEMORY__IMMI1, _AddI__LoadI_memory__immI1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI];
        DFA_PRODUCTION__SET_VALID(_ADDI__LOADI_MEMORY__IMMI, _AddI__LoadI_memory__immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[_LOADI_MEMORY_];
        DFA_PRODUCTION__SET_VALID(_ADDI_EREGI__LOADI_MEMORY_, _AddI_eRegI__LoadI_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[EREGI];
        DFA_PRODUCTION__SET_VALID(_ADDI__LOADI_MEMORY__EREGI, _AddI__LoadI_memory__eRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[EREGI]+125;
        DFA_PRODUCTION__SET_VALID(EREGI, addI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, addI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, addI_eReg_mem_0_rule, c)
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, addI_eReg_mem_0_rule, c)
      }
        DFA_PRODUCTION__SET_VALID(EBXREGI, addI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, addI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, addI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, addI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, addI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, addI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, addI_eReg_mem_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[_LOADI_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, addI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, addI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, addI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, addI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, addI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, addI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, addI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, addI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, addI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, addI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, addI_eReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI_M1) &&
        (
#line 8246 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseIncDec
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI_M1]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, decI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, decI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, decI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, decI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, decI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, decI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, decI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, decI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, decI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, decI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, decI_eReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI1) &&
        (
#line 8214 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseIncDec
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI1]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, incI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, incI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, incI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, incI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, incI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, incI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, incI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, incI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, incI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, incI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, incI_eReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, addI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, addI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, addI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, addI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, addI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, addI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, addI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, addI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, addI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, addI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, addI_eReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[EREGI]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, addI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, addI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, addI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, addI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, addI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, addI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, addI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, addI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, addI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, addI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, addI_eReg_rule, c)
      }
    }
}
void  State::_sub_Op_AddL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LOADL_LOAD_LONG_MEMORY_) && STATE__VALID_CHILD(_kids[1], EREGL) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_LOAD_LONG_MEMORY_]+_kids[1]->_cost[EREGL]+125;
        DFA_PRODUCTION__SET_VALID(EREGL, addL_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
        DFA_PRODUCTION__SET_VALID(EADXREGL, addL_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(EBCXREGL, addL_eReg_mem_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], _LOADL_LOAD_LONG_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[_LOADL_LOAD_LONG_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, addL_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, addL_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, addL_eReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], IMML) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[IMML]+100;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, addL_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, addL_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, addL_eReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], EREGL) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[EREGL]+200;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, addL_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, addL_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, addL_eReg_rule, c)
      }
    }
}
void  State::_sub_Op_AddP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGP) && STATE__VALID_CHILD(_kids[1], _SUBI_IMMI0_EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGP]+_kids[1]->_cost[_SUBI_IMMI0_EREGI]+100;
        DFA_PRODUCTION__SET_VALID(EREGP, subP_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(ANYREGP, subP_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGP, subP_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, subP_eReg_rule, c+100)
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, subP_eReg_rule, c+100+100)
        DFA_PRODUCTION__SET_VALID(EBXREGP, subP_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGP, subP_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(PREGP, subP_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGP, subP_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NABXREGP, subP_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGP, subP_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, subP_eReg_rule, c+100)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, subP_eReg_rule, c+100)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c+100)
        DFA_PRODUCTION__SET_VALID(EDIREGP, subP_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, subP_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGP) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGP]+_kids[1]->_cost[EREGI]+100;
      if (STATE__NOT_YET_VALID(EREGP) || _cost[EREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EREGP, addP_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(ANYREGP) || _cost[ANYREGP] > c) {
        DFA_PRODUCTION__SET_VALID(ANYREGP, addP_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGP) || _cost[EAXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGP, addP_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGP_NO_EBP) || _cost[EREGP_NO_EBP] > c+100) {
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, addP_eReg_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(INDIRECT_WIN95_SAFE) || _cost[INDIRECT_WIN95_SAFE] > c+100+100) {
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, addP_eReg_rule, c+100+100)
      }
      if (STATE__NOT_YET_VALID(EBXREGP) || _cost[EBXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGP, addP_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGP) || _cost[NAXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGP, addP_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(PREGP) || _cost[PREGP] > c) {
        DFA_PRODUCTION__SET_VALID(PREGP, addP_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGP) || _cost[ECXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGP, addP_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NABXREGP) || _cost[NABXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(NABXREGP, addP_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGP) || _cost[ESIREGP] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGP, addP_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_REGP) || _cost[LOAD_LONG_REGP] > c+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, addP_eReg_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_INDIRECT) || _cost[LOAD_LONG_INDIRECT] > c+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, addP_eReg_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_MEMORY) || _cost[LOAD_LONG_MEMORY] > c+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(EDIREGP) || _cost[EDIREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGP, addP_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, addP_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(LONG_MEMORY) || _cost[LONG_MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGP) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[EREGP]+_kids[1]->_cost[IMMI]+110;
      if (STATE__NOT_YET_VALID(EREGP) || _cost[EREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EREGP, leaP_eReg_immI_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(ANYREGP) || _cost[ANYREGP] > c) {
        DFA_PRODUCTION__SET_VALID(ANYREGP, leaP_eReg_immI_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGP) || _cost[EAXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGP, leaP_eReg_immI_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGP_NO_EBP) || _cost[EREGP_NO_EBP] > c+100) {
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, leaP_eReg_immI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(INDIRECT_WIN95_SAFE) || _cost[INDIRECT_WIN95_SAFE] > c+100+100) {
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, leaP_eReg_immI_rule, c+100+100)
      }
      if (STATE__NOT_YET_VALID(EBXREGP) || _cost[EBXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGP, leaP_eReg_immI_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGP) || _cost[NAXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGP, leaP_eReg_immI_rule, c)
      }
      if (STATE__NOT_YET_VALID(PREGP) || _cost[PREGP] > c) {
        DFA_PRODUCTION__SET_VALID(PREGP, leaP_eReg_immI_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGP) || _cost[ECXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGP, leaP_eReg_immI_rule, c)
      }
      if (STATE__NOT_YET_VALID(NABXREGP) || _cost[NABXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(NABXREGP, leaP_eReg_immI_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGP) || _cost[ESIREGP] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGP, leaP_eReg_immI_rule, c)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_REGP) || _cost[LOAD_LONG_REGP] > c+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, leaP_eReg_immI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_INDIRECT) || _cost[LOAD_LONG_INDIRECT] > c+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, leaP_eReg_immI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_MEMORY) || _cost[LOAD_LONG_MEMORY] > c+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(EDIREGP) || _cost[EDIREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGP, leaP_eReg_immI_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, leaP_eReg_immI_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(LONG_MEMORY) || _cost[LONG_MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ADDP_EREGP_NO_EBP__LSHIFTI_EREGI_IMMI2) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[_ADDP_EREGP_NO_EBP__LSHIFTI_EREGI_IMMI2]+_kids[1]->_cost[IMMI]+100;
        DFA_PRODUCTION__SET_VALID(INDINDEXSCALEOFFSET_WIN95_SAFE, indIndexScaleOffset_win95_safe_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGP_NO_EBP) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_EREGI_IMMI2) ) {
      unsigned int c = _kids[0]->_cost[EREGP_NO_EBP]+_kids[1]->_cost[_LSHIFTI_EREGI_IMMI2];
        DFA_PRODUCTION__SET_VALID(_ADDP_EREGP_NO_EBP__LSHIFTI_EREGI_IMMI2, _AddP_eRegP_no_EBP__LShiftI_eRegI_immI2_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGP_NO_EBP) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_EREGI_IMMI2) ) {
      unsigned int c = _kids[0]->_cost[EREGP_NO_EBP]+_kids[1]->_cost[_LSHIFTI_EREGI_IMMI2]+100;
        DFA_PRODUCTION__SET_VALID(INDINDEXSCALE_WIN95_SAFE, indIndexScale_win95_safe_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ADDP_EREGP_NO_EBP_EREGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[_ADDP_EREGP_NO_EBP_EREGI]+_kids[1]->_cost[IMMI]+100;
        DFA_PRODUCTION__SET_VALID(INDINDEXOFFSET_WIN95_SAFE, indIndexOffset_win95_safe_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGP_NO_EBP) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGP_NO_EBP]+_kids[1]->_cost[EREGI];
        DFA_PRODUCTION__SET_VALID(_ADDP_EREGP_NO_EBP_EREGI, _AddP_eRegP_no_EBP_eRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGP_NO_EBP) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[EREGP_NO_EBP]+_kids[1]->_cost[IMMI]+100;
        DFA_PRODUCTION__SET_VALID(INDOFFSET32_WIN95_SAFE, indOffset32_win95_safe_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGP_NO_EBP) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[EREGP_NO_EBP]+_kids[1]->_cost[IMMI8]+100;
        DFA_PRODUCTION__SET_VALID(INDOFFSET8_WIN95_SAFE, indOffset8_win95_safe_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], LOAD_LONG_REGP) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[LOAD_LONG_REGP]+_kids[1]->_cost[IMMI];
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDOFFSET32, load_long_indOffset32_rule, c)
      if (STATE__NOT_YET_VALID(LOAD_LONG_MEMORY) || _cost[LOAD_LONG_MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indOffset32_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ADDP_EREGP__LSHIFTI_EREGI_IMMI2) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[_ADDP_EREGP__LSHIFTI_EREGI_IMMI2]+_kids[1]->_cost[IMMI]+10;
        DFA_PRODUCTION__SET_VALID(INDINDEXSCALEOFFSET, indIndexScaleOffset_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indIndexScaleOffset_rule, c)
      }
      if (STATE__NOT_YET_VALID(LONG_MEMORY) || _cost[LONG_MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indIndexScaleOffset_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGP) || _cost[EREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(EREGP, leaPIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(ANYREGP) || _cost[ANYREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ANYREGP, leaPIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(EAXREGP) || _cost[EAXREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(EAXREGP, leaPIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(EREGP_NO_EBP) || _cost[EREGP_NO_EBP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, leaPIdxScaleOff_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(INDIRECT_WIN95_SAFE) || _cost[INDIRECT_WIN95_SAFE] > c+110+100+100) {
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, leaPIdxScaleOff_rule, c+110+100+100)
      }
      if (STATE__NOT_YET_VALID(EBXREGP) || _cost[EBXREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(EBXREGP, leaPIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NAXREGP) || _cost[NAXREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NAXREGP, leaPIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(PREGP) || _cost[PREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(PREGP, leaPIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(ECXREGP) || _cost[ECXREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ECXREGP, leaPIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NABXREGP) || _cost[NABXREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NABXREGP, leaPIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(ESIREGP) || _cost[ESIREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ESIREGP, leaPIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_REGP) || _cost[LOAD_LONG_REGP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, leaPIdxScaleOff_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_INDIRECT) || _cost[LOAD_LONG_INDIRECT] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, leaPIdxScaleOff_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_MEMORY) || _cost[LOAD_LONG_MEMORY] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(EDIREGP) || _cost[EDIREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(EDIREGP, leaPIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c+110) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, leaPIdxScaleOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c+110) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(LONG_MEMORY) || _cost[LONG_MEMORY] > c+110) {
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c+110)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGP) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_EREGI_IMMI2) ) {
      unsigned int c = _kids[0]->_cost[EREGP]+_kids[1]->_cost[_LSHIFTI_EREGI_IMMI2];
        DFA_PRODUCTION__SET_VALID(_ADDP_EREGP__LSHIFTI_EREGI_IMMI2, _AddP_eRegP__LShiftI_eRegI_immI2_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGP) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_EREGI_IMMI2) ) {
      unsigned int c = _kids[0]->_cost[EREGP]+_kids[1]->_cost[_LSHIFTI_EREGI_IMMI2]+10;
        DFA_PRODUCTION__SET_VALID(INDINDEXSCALE, indIndexScale_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indIndexScale_rule, c)
      }
      if (STATE__NOT_YET_VALID(LONG_MEMORY) || _cost[LONG_MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indIndexScale_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGP) || _cost[EREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(EREGP, leaPIdxScale_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(ANYREGP) || _cost[ANYREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ANYREGP, leaPIdxScale_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(EAXREGP) || _cost[EAXREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(EAXREGP, leaPIdxScale_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(EREGP_NO_EBP) || _cost[EREGP_NO_EBP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, leaPIdxScale_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(INDIRECT_WIN95_SAFE) || _cost[INDIRECT_WIN95_SAFE] > c+110+100+100) {
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, leaPIdxScale_rule, c+110+100+100)
      }
      if (STATE__NOT_YET_VALID(EBXREGP) || _cost[EBXREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(EBXREGP, leaPIdxScale_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NAXREGP) || _cost[NAXREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NAXREGP, leaPIdxScale_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(PREGP) || _cost[PREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(PREGP, leaPIdxScale_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(ECXREGP) || _cost[ECXREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ECXREGP, leaPIdxScale_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NABXREGP) || _cost[NABXREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NABXREGP, leaPIdxScale_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(ESIREGP) || _cost[ESIREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ESIREGP, leaPIdxScale_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_REGP) || _cost[LOAD_LONG_REGP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, leaPIdxScale_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_INDIRECT) || _cost[LOAD_LONG_INDIRECT] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, leaPIdxScale_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_MEMORY) || _cost[LOAD_LONG_MEMORY] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(EDIREGP) || _cost[EDIREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(EDIREGP, leaPIdxScale_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c+110) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, leaPIdxScale_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c+110) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(LONG_MEMORY) || _cost[LONG_MEMORY] > c+110) {
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c+110)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGP) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGP]+_kids[1]->_cost[EREGI]+10;
        DFA_PRODUCTION__SET_VALID(INDINDEX, indIndex_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indIndex_rule, c)
      }
      if (STATE__NOT_YET_VALID(LONG_MEMORY) || _cost[LONG_MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indIndex_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ADDP_EREGP_EREGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[_ADDP_EREGP_EREGI]+_kids[1]->_cost[IMMI]+10;
        DFA_PRODUCTION__SET_VALID(INDINDEXOFFSET, indIndexOffset_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indIndexOffset_rule, c)
      }
      if (STATE__NOT_YET_VALID(LONG_MEMORY) || _cost[LONG_MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indIndexOffset_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGP) || _cost[EREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(EREGP, leaPIdxOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(ANYREGP) || _cost[ANYREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ANYREGP, leaPIdxOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(EAXREGP) || _cost[EAXREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(EAXREGP, leaPIdxOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(EREGP_NO_EBP) || _cost[EREGP_NO_EBP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, leaPIdxOff_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(INDIRECT_WIN95_SAFE) || _cost[INDIRECT_WIN95_SAFE] > c+110+100+100) {
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, leaPIdxOff_rule, c+110+100+100)
      }
      if (STATE__NOT_YET_VALID(EBXREGP) || _cost[EBXREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(EBXREGP, leaPIdxOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NAXREGP) || _cost[NAXREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NAXREGP, leaPIdxOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(PREGP) || _cost[PREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(PREGP, leaPIdxOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(ECXREGP) || _cost[ECXREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ECXREGP, leaPIdxOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NABXREGP) || _cost[NABXREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NABXREGP, leaPIdxOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(ESIREGP) || _cost[ESIREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ESIREGP, leaPIdxOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_REGP) || _cost[LOAD_LONG_REGP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, leaPIdxOff_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_INDIRECT) || _cost[LOAD_LONG_INDIRECT] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, leaPIdxOff_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_MEMORY) || _cost[LOAD_LONG_MEMORY] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(EDIREGP) || _cost[EDIREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(EDIREGP, leaPIdxOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c+110) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, leaPIdxOff_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c+110) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(LONG_MEMORY) || _cost[LONG_MEMORY] > c+110) {
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c+110)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGP) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGP]+_kids[1]->_cost[EREGI];
        DFA_PRODUCTION__SET_VALID(_ADDP_EREGP_EREGI, _AddP_eRegP_eRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMP) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[IMMP]+_kids[1]->_cost[EREGI];
        DFA_PRODUCTION__SET_VALID(INDOFFSET32X, indOffset32X_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indOffset32X_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGP) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[EREGP]+_kids[1]->_cost[IMMI];
        DFA_PRODUCTION__SET_VALID(INDOFFSET32, indOffset32_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indOffset32_rule, c)
      }
      if (STATE__NOT_YET_VALID(LONG_MEMORY) || _cost[LONG_MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indOffset32_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGP) || _cost[EREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(EREGP, leaP32_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(ANYREGP) || _cost[ANYREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ANYREGP, leaP32_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(EAXREGP) || _cost[EAXREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(EAXREGP, leaP32_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(EREGP_NO_EBP) || _cost[EREGP_NO_EBP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, leaP32_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(INDIRECT_WIN95_SAFE) || _cost[INDIRECT_WIN95_SAFE] > c+110+100+100) {
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, leaP32_rule, c+110+100+100)
      }
      if (STATE__NOT_YET_VALID(EBXREGP) || _cost[EBXREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(EBXREGP, leaP32_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NAXREGP) || _cost[NAXREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NAXREGP, leaP32_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(PREGP) || _cost[PREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(PREGP, leaP32_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(ECXREGP) || _cost[ECXREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ECXREGP, leaP32_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NABXREGP) || _cost[NABXREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NABXREGP, leaP32_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(ESIREGP) || _cost[ESIREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ESIREGP, leaP32_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_REGP) || _cost[LOAD_LONG_REGP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, leaP32_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_INDIRECT) || _cost[LOAD_LONG_INDIRECT] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, leaP32_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_MEMORY) || _cost[LOAD_LONG_MEMORY] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(EDIREGP) || _cost[EDIREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(EDIREGP, leaP32_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c+110) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, leaP32_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c+110) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(LONG_MEMORY) || _cost[LONG_MEMORY] > c+110) {
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c+110)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGP) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[EREGP]+_kids[1]->_cost[IMMI8];
        DFA_PRODUCTION__SET_VALID(INDOFFSET8, indOffset8_rule, c)
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indOffset8_rule, c)
      }
      if (STATE__NOT_YET_VALID(LONG_MEMORY) || _cost[LONG_MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indOffset8_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGP) || _cost[EREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(EREGP, leaP8_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(ANYREGP) || _cost[ANYREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ANYREGP, leaP8_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(EAXREGP) || _cost[EAXREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(EAXREGP, leaP8_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(EREGP_NO_EBP) || _cost[EREGP_NO_EBP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, leaP8_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(INDIRECT_WIN95_SAFE) || _cost[INDIRECT_WIN95_SAFE] > c+110+100+100) {
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, leaP8_rule, c+110+100+100)
      }
      if (STATE__NOT_YET_VALID(EBXREGP) || _cost[EBXREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(EBXREGP, leaP8_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NAXREGP) || _cost[NAXREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NAXREGP, leaP8_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(PREGP) || _cost[PREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(PREGP, leaP8_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(ECXREGP) || _cost[ECXREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ECXREGP, leaP8_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(NABXREGP) || _cost[NABXREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(NABXREGP, leaP8_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(ESIREGP) || _cost[ESIREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(ESIREGP, leaP8_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_REGP) || _cost[LOAD_LONG_REGP] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, leaP8_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_INDIRECT) || _cost[LOAD_LONG_INDIRECT] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, leaP8_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_MEMORY) || _cost[LOAD_LONG_MEMORY] > c+110+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c+110+100)
      }
      if (STATE__NOT_YET_VALID(EDIREGP) || _cost[EDIREGP] > c+110) {
        DFA_PRODUCTION__SET_VALID(EDIREGP, leaP8_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c+110) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, leaP8_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c+110) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c+110)
      }
      if (STATE__NOT_YET_VALID(LONG_MEMORY) || _cost[LONG_MEMORY] > c+110) {
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c+110)
      }
    }
}
void  State::_sub_Op_AndI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[MEMORY];
        DFA_PRODUCTION__SET_VALID(_ANDI_EREGI_MEMORY, _AndI_eRegI_memory_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI];
        DFA_PRODUCTION__SET_VALID(_ANDI_EREGI_IMMI, _AndI_eRegI_immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], NCXREGI) && STATE__VALID_CHILD(_kids[1], _CMPLTMASK_NCXREGI_NCXREGI) ) {
      unsigned int c = _kids[0]->_cost[NCXREGI]+_kids[1]->_cost[_CMPLTMASK_NCXREGI_NCXREGI];
        DFA_PRODUCTION__SET_VALID(_ANDI_NCXREGI__CMPLTMASK_NCXREGI_NCXREGI, _AndI_ncxRegI__CmpLTMask_ncxRegI_ncxRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _CMPLTMASK_NCXREGI_NCXREGI) && STATE__VALID_CHILD(_kids[1], NCXREGI) ) {
      unsigned int c = _kids[0]->_cost[_CMPLTMASK_NCXREGI_NCXREGI]+_kids[1]->_cost[NCXREGI];
        DFA_PRODUCTION__SET_VALID(_ANDI__CMPLTMASK_NCXREGI_NCXREGI_NCXREGI, _AndI__CmpLTMask_ncxRegI_ncxRegI_ncxRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[_LOADI_MEMORY_];
        DFA_PRODUCTION__SET_VALID(_ANDI_EREGI__LOADI_MEMORY_, _AndI_eRegI__LoadI_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[EREGI];
        DFA_PRODUCTION__SET_VALID(_ANDI__LOADI_MEMORY__EREGI, _AndI__LoadI_memory__eRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[EREGI]+125;
        DFA_PRODUCTION__SET_VALID(EREGI, andI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, andI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, andI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, andI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, andI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, andI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, andI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, andI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, andI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, andI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, andI_eReg_mem_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[_LOADI_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, andI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, andI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, andI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, andI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, andI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, andI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, andI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, andI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, andI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, andI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, andI_eReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, andI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, andI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, andI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, andI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, andI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, andI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, andI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, andI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, andI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, andI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, andI_eReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[EREGI]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, andI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, andI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, andI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, andI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, andI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, andI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, andI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, andI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, andI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, andI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, andI_eReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI];
        DFA_PRODUCTION__SET_VALID(_ANDI__LOADI_MEMORY__IMMI, _AndI__LoadI_memory__immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI_65535) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI_65535];
        DFA_PRODUCTION__SET_VALID(_ANDI__LOADI_MEMORY__IMMI_65535, _AndI__LoadI_memory__immI_65535_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI_255) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI_255];
        DFA_PRODUCTION__SET_VALID(_ANDI__LOADI_MEMORY__IMMI_255, _AndI__LoadI_memory__immI_255_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI_65535) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI_65535]+125;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, loadI2US_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, loadI2US_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, loadI2US_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, loadI2US_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, loadI2US_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, loadI2US_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, loadI2US_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, loadI2US_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, loadI2US_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, loadI2US_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, loadI2US_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI_255) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI_255]+125;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, loadI2UB_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, loadI2UB_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, loadI2UB_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, loadI2UB_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, loadI2UB_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, loadI2UB_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, loadI2UB_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, loadI2UB_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, loadI2UB_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, loadI2UB_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, loadI2UB_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADUS_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI16) ) {
      unsigned int c = _kids[0]->_cost[_LOADUS_MEMORY_]+_kids[1]->_cost[IMMI16];
        DFA_PRODUCTION__SET_VALID(_ANDI__LOADUS_MEMORY__IMMI16, _AndI__LoadUS_memory__immI16_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADUS_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI_255) ) {
      unsigned int c = _kids[0]->_cost[_LOADUS_MEMORY_]+_kids[1]->_cost[IMMI_255];
        DFA_PRODUCTION__SET_VALID(_ANDI__LOADUS_MEMORY__IMMI_255, _AndI__LoadUS_memory__immI_255_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADUB_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[_LOADUB_MEMORY_]+_kids[1]->_cost[IMMI8];
        DFA_PRODUCTION__SET_VALID(_ANDI__LOADUB_MEMORY__IMMI8, _AndI__LoadUB_memory__immI8_rule, c)
    }
}
void  State::_sub_Op_AndL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], IMML_32BITS) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[IMML_32BITS]+250;
        DFA_PRODUCTION__SET_VALID(EREGL, zerox_long_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
        DFA_PRODUCTION__SET_VALID(EADXREGL, zerox_long_rule, c)
        DFA_PRODUCTION__SET_VALID(EBCXREGL, zerox_long_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVI2L_EREGI_) && STATE__VALID_CHILD(_kids[1], IMML_32BITS) ) {
      unsigned int c = _kids[0]->_cost[_CONVI2L_EREGI_]+_kids[1]->_cost[IMML_32BITS]+250;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, convI2L_reg_zex_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, convI2L_reg_zex_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, convI2L_reg_zex_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADL_LOAD_LONG_MEMORY_) && STATE__VALID_CHILD(_kids[1], EREGL) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_LOAD_LONG_MEMORY_]+_kids[1]->_cost[EREGL]+125;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, andL_eReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, andL_eReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, andL_eReg_mem_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], _LOADL_LOAD_LONG_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[_LOADL_LOAD_LONG_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, andL_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, andL_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, andL_eReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], IMML) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[IMML]+100;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, andL_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, andL_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, andL_eReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], EREGL) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[EREGL]+100;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, andL_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, andL_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, andL_eReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVI2L_NADXREGI_) && STATE__VALID_CHILD(_kids[1], IMML_32BITS) ) {
      unsigned int c = _kids[0]->_cost[_CONVI2L_NADXREGI_]+_kids[1]->_cost[IMML_32BITS];
        DFA_PRODUCTION__SET_VALID(_ANDL__CONVI2L_NADXREGI__IMML_32BITS, _AndL__ConvI2L_nadxRegI__immL_32bits_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVI2L_EAXREGI_) && STATE__VALID_CHILD(_kids[1], IMML_32BITS) ) {
      unsigned int c = _kids[0]->_cost[_CONVI2L_EAXREGI_]+_kids[1]->_cost[IMML_32BITS];
        DFA_PRODUCTION__SET_VALID(_ANDL__CONVI2L_EAXREGI__IMML_32BITS, _AndL__ConvI2L_eAXRegI__immL_32bits_rule, c)
    }
}
void  State::_sub_Op_AryEq(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EDIREGP) && STATE__VALID_CHILD(_kids[1], ESIREGP) ) {
      unsigned int c = _kids[0]->_cost[EDIREGP]+_kids[1]->_cost[ESIREGP]+100;
        DFA_PRODUCTION__SET_VALID(EAXREGI, array_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGI, array_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, array_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, array_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, array_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, array_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, array_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, array_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, array_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, array_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, array_equals_rule, c)
    }
}
void  State::_sub_Op_AtanD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGXD) && STATE__VALID_CHILD(_kids[1], REGXD) &&
        (
#line 10585 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+_kids[1]->_cost[REGXD]+100;
        DFA_PRODUCTION__SET_VALID(REGXD, atanXD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, atanXD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, atanXD_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 10575 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD]+100;
        DFA_PRODUCTION__SET_VALID(REGD, atanD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR1, atanD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR2, atanD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, atanD_reg_rule, c)
    }
}
void  State::_sub_Op_Binary(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], CMPOP_COMMUTE) && STATE__VALID_CHILD(_kids[1], FLAGSREG_LONG_LEGT) ) {
      unsigned int c = _kids[0]->_cost[CMPOP_COMMUTE]+_kids[1]->_cost[FLAGSREG_LONG_LEGT];
        DFA_PRODUCTION__SET_VALID(_BINARY_CMPOP_COMMUTE_FLAGSREG_LONG_LEGT, _Binary_cmpOp_commute_flagsReg_long_LEGT_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOP) && STATE__VALID_CHILD(_kids[1], FLAGSREG_LONG_EQNE) ) {
      unsigned int c = _kids[0]->_cost[CMPOP]+_kids[1]->_cost[FLAGSREG_LONG_EQNE];
        DFA_PRODUCTION__SET_VALID(_BINARY_CMPOP_FLAGSREG_LONG_EQNE, _Binary_cmpOp_flagsReg_long_EQNE_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], _LOADL_LOAD_LONG_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[_LOADL_LOAD_LONG_MEMORY_];
        DFA_PRODUCTION__SET_VALID(_BINARY_EREGL__LOADL_LOAD_LONG_MEMORY_, _Binary_eRegL__LoadL_load_long_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOP) && STATE__VALID_CHILD(_kids[1], FLAGSREG_LONG_LTGE) ) {
      unsigned int c = _kids[0]->_cost[CMPOP]+_kids[1]->_cost[FLAGSREG_LONG_LTGE];
        DFA_PRODUCTION__SET_VALID(_BINARY_CMPOP_FLAGSREG_LONG_LTGE, _Binary_cmpOp_flagsReg_long_LTGE_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], ESIREGP) && STATE__VALID_CHILD(_kids[1], EAXREGI) ) {
      unsigned int c = _kids[0]->_cost[ESIREGP]+_kids[1]->_cost[EAXREGI];
        DFA_PRODUCTION__SET_VALID(_BINARY_ESIREGP_EAXREGI, _Binary_eSIRegP_eAXRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EDIREGP) && STATE__VALID_CHILD(_kids[1], EDXREGI) ) {
      unsigned int c = _kids[0]->_cost[EDIREGP]+_kids[1]->_cost[EDXREGI];
        DFA_PRODUCTION__SET_VALID(_BINARY_EDIREGP_EDXREGI, _Binary_eDIRegP_eDXRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EDIREGP) && STATE__VALID_CHILD(_kids[1], ESIREGP) ) {
      unsigned int c = _kids[0]->_cost[EDIREGP]+_kids[1]->_cost[ESIREGP];
        DFA_PRODUCTION__SET_VALID(_BINARY_EDIREGP_ESIREGP, _Binary_eDIRegP_eSIRegP_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], ESIREGP) && STATE__VALID_CHILD(_kids[1], EBXREGI) ) {
      unsigned int c = _kids[0]->_cost[ESIREGP]+_kids[1]->_cost[EBXREGI];
        DFA_PRODUCTION__SET_VALID(_BINARY_ESIREGP_EBXREGI, _Binary_eSIRegP_eBXRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EDIREGP) && STATE__VALID_CHILD(_kids[1], ECXREGI) ) {
      unsigned int c = _kids[0]->_cost[EDIREGP]+_kids[1]->_cost[ECXREGI];
        DFA_PRODUCTION__SET_VALID(_BINARY_EDIREGP_ECXREGI, _Binary_eDIRegP_eCXRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EAXREGI) && STATE__VALID_CHILD(_kids[1], ECXREGI) ) {
      unsigned int c = _kids[0]->_cost[EAXREGI]+_kids[1]->_cost[ECXREGI];
        DFA_PRODUCTION__SET_VALID(_BINARY_EAXREGI_ECXREGI, _Binary_eAXRegI_eCXRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EAXREGP) && STATE__VALID_CHILD(_kids[1], ECXREGP) ) {
      unsigned int c = _kids[0]->_cost[EAXREGP]+_kids[1]->_cost[ECXREGP];
        DFA_PRODUCTION__SET_VALID(_BINARY_EAXREGP_ECXREGP, _Binary_eAXRegP_eCXRegP_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EADXREGL) && STATE__VALID_CHILD(_kids[1], EBCXREGL) ) {
      unsigned int c = _kids[0]->_cost[EADXREGL]+_kids[1]->_cost[EBCXREGL];
        DFA_PRODUCTION__SET_VALID(_BINARY_EADXREGL_EBCXREGL, _Binary_eADXRegL_eBCXRegL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EAXREGI) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EAXREGI]+_kids[1]->_cost[EREGI];
        DFA_PRODUCTION__SET_VALID(_BINARY_EAXREGI_EREGI, _Binary_eAXRegI_eRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EAXREGP) && STATE__VALID_CHILD(_kids[1], EREGP) ) {
      unsigned int c = _kids[0]->_cost[EAXREGP]+_kids[1]->_cost[EREGP];
        DFA_PRODUCTION__SET_VALID(_BINARY_EAXREGP_EREGP, _Binary_eAXRegP_eRegP_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], EREGL) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[EREGL];
        DFA_PRODUCTION__SET_VALID(_BINARY_EREGL_EREGL, _Binary_eRegL_eRegL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGXD) && STATE__VALID_CHILD(_kids[1], REGXD) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+_kids[1]->_cost[REGXD];
        DFA_PRODUCTION__SET_VALID(_BINARY_REGXD_REGXD, _Binary_regXD_regXD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGX) && STATE__VALID_CHILD(_kids[1], REGX) ) {
      unsigned int c = _kids[0]->_cost[REGX]+_kids[1]->_cost[REGX];
        DFA_PRODUCTION__SET_VALID(_BINARY_REGX_REGX, _Binary_regX_regX_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF];
        DFA_PRODUCTION__SET_VALID(_BINARY_REGF_REGF, _Binary_regF_regF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD];
        DFA_PRODUCTION__SET_VALID(_BINARY_REGD_REGD, _Binary_regD_regD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGFPR1) && STATE__VALID_CHILD(_kids[1], REGF) ) {
      unsigned int c = _kids[0]->_cost[REGFPR1]+_kids[1]->_cost[REGF];
        DFA_PRODUCTION__SET_VALID(_BINARY_REGFPR1_REGF, _Binary_regFPR1_regF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGDPR1) && STATE__VALID_CHILD(_kids[1], REGD) ) {
      unsigned int c = _kids[0]->_cost[REGDPR1]+_kids[1]->_cost[REGD];
        DFA_PRODUCTION__SET_VALID(_BINARY_REGDPR1_REGD, _Binary_regDPR1_regD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOP_FCMOV) && STATE__VALID_CHILD(_kids[1], EFLAGSREGU) ) {
      unsigned int c = _kids[0]->_cost[CMPOP_FCMOV]+_kids[1]->_cost[EFLAGSREGU];
        DFA_PRODUCTION__SET_VALID(_BINARY_CMPOP_FCMOV_EFLAGSREGU, _Binary_cmpOp_fcmov_eFlagsRegU_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGP) && STATE__VALID_CHILD(_kids[1], EREGP) ) {
      unsigned int c = _kids[0]->_cost[EREGP]+_kids[1]->_cost[EREGP];
        DFA_PRODUCTION__SET_VALID(_BINARY_EREGP_EREGP, _Binary_eRegP_eRegP_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[_LOADI_MEMORY_];
        DFA_PRODUCTION__SET_VALID(_BINARY_EREGI__LOADI_MEMORY_, _Binary_eRegI__LoadI_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOPUCF) && STATE__VALID_CHILD(_kids[1], EFLAGSREGUCF) ) {
      unsigned int c = _kids[0]->_cost[CMPOPUCF]+_kids[1]->_cost[EFLAGSREGUCF];
        DFA_PRODUCTION__SET_VALID(_BINARY_CMPOPUCF_EFLAGSREGUCF, _Binary_cmpOpUCF_eFlagsRegUCF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOPU) && STATE__VALID_CHILD(_kids[1], EFLAGSREGU) ) {
      unsigned int c = _kids[0]->_cost[CMPOPU]+_kids[1]->_cost[EFLAGSREGU];
        DFA_PRODUCTION__SET_VALID(_BINARY_CMPOPU_EFLAGSREGU, _Binary_cmpOpU_eFlagsRegU_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[EREGI];
        DFA_PRODUCTION__SET_VALID(_BINARY_EREGI_EREGI, _Binary_eRegI_eRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOP) && STATE__VALID_CHILD(_kids[1], EFLAGSREG) ) {
      unsigned int c = _kids[0]->_cost[CMPOP]+_kids[1]->_cost[EFLAGSREG];
        DFA_PRODUCTION__SET_VALID(_BINARY_CMPOP_EFLAGSREG, _Binary_cmpOp_eFlagsReg_rule, c)
    }
}
void  State::_sub_Op_Bool(const Node *n){
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(CMPOP_COMMUTE, cmpOp_commute_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(CMPOP_FCMOV, cmpOp_fcmov_rule, c)
    }
    if(         
#line 5751 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
n->as_Bool()->_test._test == BoolTest::ne ||
            n->as_Bool()->_test._test == BoolTest::eq
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(CMPOPUCF2, cmpOpUCF2_rule, c)
    }
    if(         
#line 5732 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
n->as_Bool()->_test._test == BoolTest::lt ||
            n->as_Bool()->_test._test == BoolTest::ge ||
            n->as_Bool()->_test._test == BoolTest::le ||
            n->as_Bool()->_test._test == BoolTest::gt
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(CMPOPUCF, cmpOpUCF_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(CMPOPU, cmpOpU_rule, c)
    }
    {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(CMPOP, cmpOp_rule, c)
    }
}
void  State::_sub_Op_ReverseBytesI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+100;
        DFA_PRODUCTION__SET_VALID(EREGI, bytes_reverse_int_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, bytes_reverse_int_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, bytes_reverse_int_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, bytes_reverse_int_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, bytes_reverse_int_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, bytes_reverse_int_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, bytes_reverse_int_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, bytes_reverse_int_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, bytes_reverse_int_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, bytes_reverse_int_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, bytes_reverse_int_rule, c)
    }
}
void  State::_sub_Op_ReverseBytesL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGL) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+125;
        DFA_PRODUCTION__SET_VALID(EREGL, bytes_reverse_long_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
        DFA_PRODUCTION__SET_VALID(EADXREGL, bytes_reverse_long_rule, c)
        DFA_PRODUCTION__SET_VALID(EBCXREGL, bytes_reverse_long_rule, c)
    }
}
void  State::_sub_Op_ReverseBytesUS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+100;
        DFA_PRODUCTION__SET_VALID(EREGI, bytes_reverse_unsigned_short_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, bytes_reverse_unsigned_short_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, bytes_reverse_unsigned_short_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, bytes_reverse_unsigned_short_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, bytes_reverse_unsigned_short_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, bytes_reverse_unsigned_short_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, bytes_reverse_unsigned_short_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, bytes_reverse_unsigned_short_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, bytes_reverse_unsigned_short_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, bytes_reverse_unsigned_short_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, bytes_reverse_unsigned_short_rule, c)
    }
}
void  State::_sub_Op_ReverseBytesS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+100;
        DFA_PRODUCTION__SET_VALID(EREGI, bytes_reverse_short_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, bytes_reverse_short_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, bytes_reverse_short_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, bytes_reverse_short_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, bytes_reverse_short_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, bytes_reverse_short_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, bytes_reverse_short_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, bytes_reverse_short_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, bytes_reverse_short_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, bytes_reverse_short_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, bytes_reverse_short_rule, c)
    }
}
void  State::_sub_Op_CallDynamicJava(const Node *n){
    {
      unsigned int c = 300;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, CallDynamicJavaDirect_rule, c)
    }
}
void  State::_sub_Op_CallLeaf(const Node *n){
    {
      unsigned int c = 300;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, CallLeafDirect_rule, c)
    }
}
void  State::_sub_Op_CallLeafNoFP(const Node *n){
    {
      unsigned int c = 300;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, CallLeafNoFPDirect_rule, c)
    }
}
void  State::_sub_Op_CallRuntime(const Node *n){
    {
      unsigned int c = 300;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, CallRuntimeDirect_rule, c)
    }
}
void  State::_sub_Op_CallStaticJava(const Node *n){
    if(         (
#line 13627 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
((CallStaticJavaNode*)n)->is_method_handle_invoke()
#line 999999
) ) {
      unsigned int c = 300;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, CallStaticJavaHandle_rule, c)
    }
    if(         (
#line 13607 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
! ((CallStaticJavaNode*)n)->is_method_handle_invoke()
#line 999999
) ) {
      unsigned int c = 300;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, CallStaticJavaDirect_rule, c)
      }
    }
}
void  State::_sub_Op_CastII(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGI];
        DFA_PRODUCTION__SET_VALID(EREGI, castII_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, castII_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, castII_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, castII_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, castII_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, castII_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, castII_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, castII_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, castII_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, castII_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, castII_rule, c)
    }
}
void  State::_sub_Op_CastX2P(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EAXREGI) ) {
      unsigned int c = _kids[0]->_cost[EAXREGI];
        DFA_PRODUCTION__SET_VALID(EAXREGP, castX2P_rule, c)
        DFA_PRODUCTION__SET_VALID(ANYREGP, castX2P_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGP, castX2P_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(EBXREGP, castX2P_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, castX2P_rule, c+100)
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, castX2P_rule, c+100+100)
        DFA_PRODUCTION__SET_VALID(NAXREGP, castX2P_rule, c)
        DFA_PRODUCTION__SET_VALID(PREGP, castX2P_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGP, castX2P_rule, c)
        DFA_PRODUCTION__SET_VALID(NABXREGP, castX2P_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGP, castX2P_rule, c)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, castX2P_rule, c+100)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, castX2P_rule, c+100)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c+100)
        DFA_PRODUCTION__SET_VALID(EDIREGP, castX2P_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, castX2P_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c)
    }
}
void  State::_sub_Op_CastP2X(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGP) ) {
      unsigned int c = _kids[0]->_cost[EREGP];
        DFA_PRODUCTION__SET_VALID(_CASTP2X_EREGP_, _CastP2X_eRegP__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGP) ) {
      unsigned int c = _kids[0]->_cost[EREGP]+50;
        DFA_PRODUCTION__SET_VALID(EREGI, castP2X_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, castP2X_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, castP2X_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, castP2X_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, castP2X_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, castP2X_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, castP2X_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, castP2X_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, castP2X_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, castP2X_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, castP2X_rule, c)
    }
}
void  State::_sub_Op_CastPP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGP) ) {
      unsigned int c = _kids[0]->_cost[EREGP]+100;
        DFA_PRODUCTION__SET_VALID(EREGP, castPP_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(ANYREGP, castPP_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGP, castPP_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, castPP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, castPP_rule, c+100+100)
        DFA_PRODUCTION__SET_VALID(EBXREGP, castPP_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGP, castPP_rule, c)
        DFA_PRODUCTION__SET_VALID(PREGP, castPP_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGP, castPP_rule, c)
        DFA_PRODUCTION__SET_VALID(NABXREGP, castPP_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGP, castPP_rule, c)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, castPP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, castPP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c+100)
        DFA_PRODUCTION__SET_VALID(EDIREGP, castPP_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, castPP_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c)
    }
}
void  State::_sub_Op_CheckCastPP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGP) ) {
      unsigned int c = _kids[0]->_cost[EREGP]+100;
        DFA_PRODUCTION__SET_VALID(EREGP, checkCastPP_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(ANYREGP, checkCastPP_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGP, checkCastPP_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, checkCastPP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, checkCastPP_rule, c+100+100)
        DFA_PRODUCTION__SET_VALID(EBXREGP, checkCastPP_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGP, checkCastPP_rule, c)
        DFA_PRODUCTION__SET_VALID(PREGP, checkCastPP_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGP, checkCastPP_rule, c)
        DFA_PRODUCTION__SET_VALID(NABXREGP, checkCastPP_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGP, checkCastPP_rule, c)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, checkCastPP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, checkCastPP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c+100)
        DFA_PRODUCTION__SET_VALID(EDIREGP, checkCastPP_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, checkCastPP_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c)
    }
}
void  State::_sub_Op_ClearArray(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], ECXREGI) && STATE__VALID_CHILD(_kids[1], EDIREGP) ) {
      unsigned int c = _kids[0]->_cost[ECXREGI]+_kids[1]->_cost[EDIREGP]+100;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, rep_stos_rule, c)
    }
}
void  State::_sub_Op_CMoveD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_COMMUTE_FLAGSREG_LONG_LEGT) && STATE__VALID_CHILD(_kids[1], _BINARY_REGXD_REGXD) &&
        (
#line 13572 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE>=2 && _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::le || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::gt 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_COMMUTE_FLAGSREG_LONG_LEGT]+_kids[1]->_cost[_BINARY_REGXD_REGXD]+200;
        DFA_PRODUCTION__SET_VALID(REGXD, cmovXDD_reg_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, cmovXDD_reg_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, cmovXDD_reg_LEGT_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_COMMUTE_FLAGSREG_LONG_LEGT) && STATE__VALID_CHILD(_kids[1], _BINARY_REGD_REGD) &&
        (
#line 13562 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE<=1 && _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::le || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::gt 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_COMMUTE_FLAGSREG_LONG_LEGT]+_kids[1]->_cost[_BINARY_REGD_REGD]+200;
        DFA_PRODUCTION__SET_VALID(REGD, cmovDD_reg_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR1, cmovDD_reg_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR2, cmovDD_reg_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, cmovDD_reg_LEGT_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_FLAGSREG_LONG_EQNE) && STATE__VALID_CHILD(_kids[1], _BINARY_REGXD_REGXD) &&
        (
#line 13439 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE>=2 && _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::eq || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ne 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_FLAGSREG_LONG_EQNE]+_kids[1]->_cost[_BINARY_REGXD_REGXD]+200;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, cmovXDD_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, cmovXDD_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, cmovXDD_reg_EQNE_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_FLAGSREG_LONG_EQNE) && STATE__VALID_CHILD(_kids[1], _BINARY_REGD_REGD) &&
        (
#line 13429 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE<=1 && _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::eq || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ne 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_FLAGSREG_LONG_EQNE]+_kids[1]->_cost[_BINARY_REGD_REGD]+200;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, cmovDD_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR1) || _cost[REGDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR1, cmovDD_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR2) || _cost[REGDPR2] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR2, cmovDD_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGNOTDPR1) || _cost[REGNOTDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, cmovDD_reg_EQNE_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_FLAGSREG_LONG_LTGE) && STATE__VALID_CHILD(_kids[1], _BINARY_REGXD_REGXD) &&
        (
#line 13311 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE>=2 && _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::lt || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ge 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_FLAGSREG_LONG_LTGE]+_kids[1]->_cost[_BINARY_REGXD_REGXD]+200;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, cmovXDD_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, cmovXDD_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, cmovXDD_reg_LTGE_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_FLAGSREG_LONG_LTGE) && STATE__VALID_CHILD(_kids[1], _BINARY_REGD_REGD) &&
        (
#line 13301 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE<=1 && _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::lt || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ge 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_FLAGSREG_LONG_LTGE]+_kids[1]->_cost[_BINARY_REGD_REGD]+200;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, cmovDD_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR1) || _cost[REGDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR1, cmovDD_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR2) || _cost[REGDPR2] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR2, cmovDD_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGNOTDPR1) || _cost[REGNOTDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, cmovDD_reg_LTGE_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPUCF_EFLAGSREGUCF) && STATE__VALID_CHILD(_kids[1], _BINARY_REGXD_REGXD) &&
        (
#line 8150 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPUCF_EFLAGSREGUCF]+_kids[1]->_cost[_BINARY_REGXD_REGXD]+200;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, fcmovXD_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, fcmovXD_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, fcmovXD_regUCF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_EFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_REGXD_REGXD) &&
        (
#line 8133 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_EFLAGSREGU]+_kids[1]->_cost[_BINARY_REGXD_REGXD]+200;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, fcmovXD_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, fcmovXD_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, fcmovXD_regU_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_EFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_REGXD_REGXD) &&
        (
#line 8088 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_EFLAGSREG]+_kids[1]->_cost[_BINARY_REGXD_REGXD]+200;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, fcmovXD_regS_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, fcmovXD_regS_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, fcmovXD_regS_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_EFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_REGD_REGD) &&
        (
#line 8044 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_EFLAGSREG]+_kids[1]->_cost[_BINARY_REGD_REGD]+200;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, fcmovD_regS_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR1) || _cost[REGDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR1, fcmovD_regS_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR2) || _cost[REGDPR2] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR2, fcmovD_regS_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGNOTDPR1) || _cost[REGNOTDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, fcmovD_regS_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_FCMOV_EFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_REGDPR1_REGD) &&
        (
#line 8022 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_FCMOV_EFLAGSREGU]+_kids[1]->_cost[_BINARY_REGDPR1_REGD]+200;
      if (STATE__NOT_YET_VALID(REGDPR1) || _cost[REGDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR1, fcmovD_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, fcmovD_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR2) || _cost[REGDPR2] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR2, fcmovD_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGNOTDPR1) || _cost[REGNOTDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, fcmovD_regU_rule, c)
      }
    }
}
void  State::_sub_Op_CMoveF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_COMMUTE_FLAGSREG_LONG_LEGT) && STATE__VALID_CHILD(_kids[1], _BINARY_REGX_REGX) &&
        (
#line 13591 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE>=1 && _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::le || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::gt 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_COMMUTE_FLAGSREG_LONG_LEGT]+_kids[1]->_cost[_BINARY_REGX_REGX]+200;
        DFA_PRODUCTION__SET_VALID(REGX, cmovXX_reg_LEGT_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_COMMUTE_FLAGSREG_LONG_LEGT) && STATE__VALID_CHILD(_kids[1], _BINARY_REGF_REGF) &&
        (
#line 13581 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE==0 && _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::le || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::gt 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_COMMUTE_FLAGSREG_LONG_LEGT]+_kids[1]->_cost[_BINARY_REGF_REGF]+200;
        DFA_PRODUCTION__SET_VALID(REGF, cmovFF_reg_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(REGFPR1, cmovFF_reg_LEGT_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_FLAGSREG_LONG_EQNE) && STATE__VALID_CHILD(_kids[1], _BINARY_REGX_REGX) &&
        (
#line 13457 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE>=1 && _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::eq || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ne 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_FLAGSREG_LONG_EQNE]+_kids[1]->_cost[_BINARY_REGX_REGX]+200;
      if (STATE__NOT_YET_VALID(REGX) || _cost[REGX] > c) {
        DFA_PRODUCTION__SET_VALID(REGX, cmovXX_reg_EQNE_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_FLAGSREG_LONG_EQNE) && STATE__VALID_CHILD(_kids[1], _BINARY_REGF_REGF) &&
        (
#line 13448 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE==0 && _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::eq || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ne 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_FLAGSREG_LONG_EQNE]+_kids[1]->_cost[_BINARY_REGF_REGF]+200;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, cmovFF_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, cmovFF_reg_EQNE_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_FLAGSREG_LONG_LTGE) && STATE__VALID_CHILD(_kids[1], _BINARY_REGX_REGX) &&
        (
#line 13329 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE>=1 && _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::lt || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ge 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_FLAGSREG_LONG_LTGE]+_kids[1]->_cost[_BINARY_REGX_REGX]+200;
      if (STATE__NOT_YET_VALID(REGX) || _cost[REGX] > c) {
        DFA_PRODUCTION__SET_VALID(REGX, cmovXX_reg_LTGE_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_FLAGSREG_LONG_LTGE) && STATE__VALID_CHILD(_kids[1], _BINARY_REGF_REGF) &&
        (
#line 13320 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE==0 && _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::lt || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ge 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_FLAGSREG_LONG_LTGE]+_kids[1]->_cost[_BINARY_REGF_REGF]+200;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, cmovFF_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, cmovFF_reg_LTGE_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPUCF_EFLAGSREGUCF) && STATE__VALID_CHILD(_kids[1], _BINARY_REGX_REGX) &&
        (
#line 8123 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPUCF_EFLAGSREGUCF]+_kids[1]->_cost[_BINARY_REGX_REGX]+200;
      if (STATE__NOT_YET_VALID(REGX) || _cost[REGX] > c) {
        DFA_PRODUCTION__SET_VALID(REGX, fcmovX_regUCF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_EFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_REGX_REGX) &&
        (
#line 8106 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_EFLAGSREGU]+_kids[1]->_cost[_BINARY_REGX_REGX]+200;
      if (STATE__NOT_YET_VALID(REGX) || _cost[REGX] > c) {
        DFA_PRODUCTION__SET_VALID(REGX, fcmovX_regU_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_EFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_REGX_REGX) &&
        (
#line 8070 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_EFLAGSREG]+_kids[1]->_cost[_BINARY_REGX_REGX]+200;
      if (STATE__NOT_YET_VALID(REGX) || _cost[REGX] > c) {
        DFA_PRODUCTION__SET_VALID(REGX, fcmovX_regS_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_EFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_REGF_REGF) &&
        (
#line 8057 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_EFLAGSREG]+_kids[1]->_cost[_BINARY_REGF_REGF]+200;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, fcmovF_regS_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, fcmovF_regS_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_FCMOV_EFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_REGFPR1_REGF) &&
        (
#line 8033 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_FCMOV_EFLAGSREGU]+_kids[1]->_cost[_BINARY_REGFPR1_REGF]+200;
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, fcmovF_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, fcmovF_regU_rule, c)
      }
    }
}
void  State::_sub_Op_CMoveI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_COMMUTE_FLAGSREG_LONG_LEGT) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGI__LOADI_MEMORY_) &&
        (
#line 13540 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() && ( _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::le || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::gt )
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_COMMUTE_FLAGSREG_LONG_LEGT]+_kids[1]->_cost[_BINARY_EREGI__LOADI_MEMORY_]+250;
        DFA_PRODUCTION__SET_VALID(EREGI, cmovII_mem_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, cmovII_mem_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, cmovII_mem_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, cmovII_mem_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, cmovII_mem_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, cmovII_mem_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, cmovII_mem_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, cmovII_mem_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, cmovII_mem_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, cmovII_mem_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, cmovII_mem_LEGT_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_COMMUTE_FLAGSREG_LONG_LEGT) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGI_EREGI) &&
        (
#line 13530 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() && ( _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::le || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::gt )
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_COMMUTE_FLAGSREG_LONG_LEGT]+_kids[1]->_cost[_BINARY_EREGI_EREGI]+200;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, cmovII_reg_LEGT_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, cmovII_reg_LEGT_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, cmovII_reg_LEGT_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, cmovII_reg_LEGT_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, cmovII_reg_LEGT_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, cmovII_reg_LEGT_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, cmovII_reg_LEGT_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, cmovII_reg_LEGT_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, cmovII_reg_LEGT_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, cmovII_reg_LEGT_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, cmovII_reg_LEGT_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_FLAGSREG_LONG_EQNE) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGI__LOADI_MEMORY_) &&
        (
#line 13407 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() && ( _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::eq || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ne )
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_FLAGSREG_LONG_EQNE]+_kids[1]->_cost[_BINARY_EREGI__LOADI_MEMORY_]+250;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, cmovII_mem_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, cmovII_mem_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, cmovII_mem_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, cmovII_mem_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, cmovII_mem_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, cmovII_mem_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, cmovII_mem_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, cmovII_mem_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, cmovII_mem_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, cmovII_mem_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, cmovII_mem_EQNE_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_FLAGSREG_LONG_EQNE) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGI_EREGI) &&
        (
#line 13397 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() && ( _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::eq || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ne )
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_FLAGSREG_LONG_EQNE]+_kids[1]->_cost[_BINARY_EREGI_EREGI]+200;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, cmovII_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, cmovII_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, cmovII_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, cmovII_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, cmovII_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, cmovII_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, cmovII_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, cmovII_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, cmovII_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, cmovII_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, cmovII_reg_EQNE_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_FLAGSREG_LONG_LTGE) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGI__LOADI_MEMORY_) &&
        (
#line 13279 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() && ( _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::lt || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ge )
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_FLAGSREG_LONG_LTGE]+_kids[1]->_cost[_BINARY_EREGI__LOADI_MEMORY_]+250;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, cmovII_mem_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, cmovII_mem_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, cmovII_mem_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, cmovII_mem_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, cmovII_mem_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, cmovII_mem_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, cmovII_mem_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, cmovII_mem_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, cmovII_mem_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, cmovII_mem_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, cmovII_mem_LTGE_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_FLAGSREG_LONG_LTGE) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGI_EREGI) &&
        (
#line 13269 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() && ( _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::lt || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ge )
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_FLAGSREG_LONG_LTGE]+_kids[1]->_cost[_BINARY_EREGI_EREGI]+200;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, cmovII_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, cmovII_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, cmovII_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, cmovII_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, cmovII_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, cmovII_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, cmovII_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, cmovII_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, cmovII_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, cmovII_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, cmovII_reg_LTGE_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPUCF_EFLAGSREGUCF) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGI__LOADI_MEMORY_) &&
        (
#line 7939 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPUCF_EFLAGSREGUCF]+_kids[1]->_cost[_BINARY_EREGI__LOADI_MEMORY_]+250;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, cmovI_memUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, cmovI_memUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, cmovI_memUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, cmovI_memUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, cmovI_memUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, cmovI_memUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, cmovI_memUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, cmovI_memUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, cmovI_memUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, cmovI_memUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, cmovI_memUCF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_EFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGI__LOADI_MEMORY_) &&
        (
#line 7929 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_EFLAGSREGU]+_kids[1]->_cost[_BINARY_EREGI__LOADI_MEMORY_]+250;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, cmovI_memU_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, cmovI_memU_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, cmovI_memU_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, cmovI_memU_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, cmovI_memU_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, cmovI_memU_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, cmovI_memU_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, cmovI_memU_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, cmovI_memU_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, cmovI_memU_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, cmovI_memU_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_EFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGI__LOADI_MEMORY_) &&
        (
#line 7918 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_EFLAGSREG]+_kids[1]->_cost[_BINARY_EREGI__LOADI_MEMORY_]+250;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, cmovI_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, cmovI_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, cmovI_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, cmovI_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, cmovI_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, cmovI_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, cmovI_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, cmovI_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, cmovI_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, cmovI_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, cmovI_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPUCF_EFLAGSREGUCF) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGI_EREGI) &&
        (
#line 7908 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPUCF_EFLAGSREGUCF]+_kids[1]->_cost[_BINARY_EREGI_EREGI]+200;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, cmovI_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, cmovI_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, cmovI_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, cmovI_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, cmovI_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, cmovI_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, cmovI_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, cmovI_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, cmovI_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, cmovI_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, cmovI_regUCF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_EFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGI_EREGI) &&
        (
#line 7898 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_EFLAGSREGU]+_kids[1]->_cost[_BINARY_EREGI_EREGI]+200;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, cmovI_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, cmovI_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, cmovI_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, cmovI_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, cmovI_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, cmovI_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, cmovI_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, cmovI_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, cmovI_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, cmovI_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, cmovI_regU_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_EFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGI_EREGI) &&
        (
#line 7888 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_EFLAGSREG]+_kids[1]->_cost[_BINARY_EREGI_EREGI]+200;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, cmovI_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, cmovI_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, cmovI_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, cmovI_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, cmovI_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, cmovI_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, cmovI_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, cmovI_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, cmovI_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, cmovI_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, cmovI_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CMoveL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_COMMUTE_FLAGSREG_LONG_LEGT) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGL__LOADL_LOAD_LONG_MEMORY_) &&
        (
#line 13519 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() && ( _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::le || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::gt )
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_COMMUTE_FLAGSREG_LONG_LEGT]+_kids[1]->_cost[_BINARY_EREGL__LOADL_LOAD_LONG_MEMORY_]+500;
        DFA_PRODUCTION__SET_VALID(EREGL, cmovLL_mem_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
        DFA_PRODUCTION__SET_VALID(EADXREGL, cmovLL_mem_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(EBCXREGL, cmovLL_mem_LEGT_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_COMMUTE_FLAGSREG_LONG_LEGT) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGL_EREGL) &&
        (
#line 13508 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() && ( _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::le || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::gt )
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_COMMUTE_FLAGSREG_LONG_LEGT]+_kids[1]->_cost[_BINARY_EREGL_EREGL]+400;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, cmovLL_reg_LEGT_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, cmovLL_reg_LEGT_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, cmovLL_reg_LEGT_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_FLAGSREG_LONG_EQNE) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGL__LOADL_LOAD_LONG_MEMORY_) &&
        (
#line 13386 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() && ( _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::eq || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ne )
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_FLAGSREG_LONG_EQNE]+_kids[1]->_cost[_BINARY_EREGL__LOADL_LOAD_LONG_MEMORY_]+500;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, cmovLL_mem_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, cmovLL_mem_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, cmovLL_mem_EQNE_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_FLAGSREG_LONG_EQNE) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGL_EREGL) &&
        (
#line 13375 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() && ( _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::eq || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ne )
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_FLAGSREG_LONG_EQNE]+_kids[1]->_cost[_BINARY_EREGL_EREGL]+400;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, cmovLL_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, cmovLL_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, cmovLL_reg_EQNE_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_FLAGSREG_LONG_LTGE) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGL__LOADL_LOAD_LONG_MEMORY_) &&
        (
#line 13258 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() && ( _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::lt || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ge )
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_FLAGSREG_LONG_LTGE]+_kids[1]->_cost[_BINARY_EREGL__LOADL_LOAD_LONG_MEMORY_]+500;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, cmovLL_mem_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, cmovLL_mem_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, cmovLL_mem_LTGE_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_FLAGSREG_LONG_LTGE) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGL_EREGL) &&
        (
#line 13247 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() && ( _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::lt || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ge )
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_FLAGSREG_LONG_LTGE]+_kids[1]->_cost[_BINARY_EREGL_EREGL]+400;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, cmovLL_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, cmovLL_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, cmovLL_reg_LTGE_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPUCF_EFLAGSREGUCF) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGL_EREGL) &&
        (
#line 8181 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPUCF_EFLAGSREGUCF]+_kids[1]->_cost[_BINARY_EREGL_EREGL]+200;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, cmovL_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, cmovL_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, cmovL_regUCF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_EFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGL_EREGL) &&
        (
#line 8170 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_EFLAGSREGU]+_kids[1]->_cost[_BINARY_EREGL_EREGL]+200;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, cmovL_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, cmovL_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, cmovL_regU_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_EFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGL_EREGL) &&
        (
#line 8159 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_EFLAGSREG]+_kids[1]->_cost[_BINARY_EREGL_EREGL]+200;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, cmovL_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, cmovL_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, cmovL_reg_rule, c)
      }
    }
}
void  State::_sub_Op_CMoveP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_COMMUTE_FLAGSREG_LONG_LEGT) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGP_EREGP) &&
        (
#line 13551 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() && ( _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::le || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::gt )
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_COMMUTE_FLAGSREG_LONG_LEGT]+_kids[1]->_cost[_BINARY_EREGP_EREGP]+200;
        DFA_PRODUCTION__SET_VALID(EREGP, cmovPP_reg_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(ANYREGP, cmovPP_reg_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGP, cmovPP_reg_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, cmovPP_reg_LEGT_rule, c+100)
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, cmovPP_reg_LEGT_rule, c+100+100)
        DFA_PRODUCTION__SET_VALID(EBXREGP, cmovPP_reg_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGP, cmovPP_reg_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(PREGP, cmovPP_reg_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGP, cmovPP_reg_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(NABXREGP, cmovPP_reg_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGP, cmovPP_reg_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, cmovPP_reg_LEGT_rule, c+100)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, cmovPP_reg_LEGT_rule, c+100)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c+100)
        DFA_PRODUCTION__SET_VALID(EDIREGP, cmovPP_reg_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, cmovPP_reg_LEGT_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_FLAGSREG_LONG_EQNE) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGP_EREGP) &&
        (
#line 13418 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() && ( _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::eq || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ne )
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_FLAGSREG_LONG_EQNE]+_kids[1]->_cost[_BINARY_EREGP_EREGP]+200;
      if (STATE__NOT_YET_VALID(EREGP) || _cost[EREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EREGP, cmovPP_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(ANYREGP) || _cost[ANYREGP] > c) {
        DFA_PRODUCTION__SET_VALID(ANYREGP, cmovPP_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGP) || _cost[EAXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGP, cmovPP_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGP_NO_EBP) || _cost[EREGP_NO_EBP] > c+100) {
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, cmovPP_reg_EQNE_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(INDIRECT_WIN95_SAFE) || _cost[INDIRECT_WIN95_SAFE] > c+100+100) {
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, cmovPP_reg_EQNE_rule, c+100+100)
      }
      if (STATE__NOT_YET_VALID(EBXREGP) || _cost[EBXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGP, cmovPP_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGP) || _cost[NAXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGP, cmovPP_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(PREGP) || _cost[PREGP] > c) {
        DFA_PRODUCTION__SET_VALID(PREGP, cmovPP_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGP) || _cost[ECXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGP, cmovPP_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(NABXREGP) || _cost[NABXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(NABXREGP, cmovPP_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGP) || _cost[ESIREGP] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGP, cmovPP_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_REGP) || _cost[LOAD_LONG_REGP] > c+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, cmovPP_reg_EQNE_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_INDIRECT) || _cost[LOAD_LONG_INDIRECT] > c+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, cmovPP_reg_EQNE_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_MEMORY) || _cost[LOAD_LONG_MEMORY] > c+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(EDIREGP) || _cost[EDIREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGP, cmovPP_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, cmovPP_reg_EQNE_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(LONG_MEMORY) || _cost[LONG_MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_FLAGSREG_LONG_LTGE) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGP_EREGP) &&
        (
#line 13290 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() && ( _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::lt || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ge )
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_FLAGSREG_LONG_LTGE]+_kids[1]->_cost[_BINARY_EREGP_EREGP]+200;
      if (STATE__NOT_YET_VALID(EREGP) || _cost[EREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EREGP, cmovPP_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(ANYREGP) || _cost[ANYREGP] > c) {
        DFA_PRODUCTION__SET_VALID(ANYREGP, cmovPP_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGP) || _cost[EAXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGP, cmovPP_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGP_NO_EBP) || _cost[EREGP_NO_EBP] > c+100) {
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, cmovPP_reg_LTGE_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(INDIRECT_WIN95_SAFE) || _cost[INDIRECT_WIN95_SAFE] > c+100+100) {
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, cmovPP_reg_LTGE_rule, c+100+100)
      }
      if (STATE__NOT_YET_VALID(EBXREGP) || _cost[EBXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGP, cmovPP_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGP) || _cost[NAXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGP, cmovPP_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(PREGP) || _cost[PREGP] > c) {
        DFA_PRODUCTION__SET_VALID(PREGP, cmovPP_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGP) || _cost[ECXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGP, cmovPP_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(NABXREGP) || _cost[NABXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(NABXREGP, cmovPP_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGP) || _cost[ESIREGP] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGP, cmovPP_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_REGP) || _cost[LOAD_LONG_REGP] > c+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, cmovPP_reg_LTGE_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_INDIRECT) || _cost[LOAD_LONG_INDIRECT] > c+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, cmovPP_reg_LTGE_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_MEMORY) || _cost[LOAD_LONG_MEMORY] > c+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(EDIREGP) || _cost[EDIREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGP, cmovPP_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, cmovPP_reg_LTGE_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(LONG_MEMORY) || _cost[LONG_MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPUCF_EFLAGSREGUCF) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGP_EREGP) &&
        (
#line 7985 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPUCF_EFLAGSREGUCF]+_kids[1]->_cost[_BINARY_EREGP_EREGP]+200;
      if (STATE__NOT_YET_VALID(EREGP) || _cost[EREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EREGP, cmovP_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(ANYREGP) || _cost[ANYREGP] > c) {
        DFA_PRODUCTION__SET_VALID(ANYREGP, cmovP_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGP) || _cost[EAXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGP, cmovP_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGP_NO_EBP) || _cost[EREGP_NO_EBP] > c+100) {
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, cmovP_regUCF_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(INDIRECT_WIN95_SAFE) || _cost[INDIRECT_WIN95_SAFE] > c+100+100) {
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, cmovP_regUCF_rule, c+100+100)
      }
      if (STATE__NOT_YET_VALID(EBXREGP) || _cost[EBXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGP, cmovP_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGP) || _cost[NAXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGP, cmovP_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(PREGP) || _cost[PREGP] > c) {
        DFA_PRODUCTION__SET_VALID(PREGP, cmovP_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGP) || _cost[ECXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGP, cmovP_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(NABXREGP) || _cost[NABXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(NABXREGP, cmovP_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGP) || _cost[ESIREGP] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGP, cmovP_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_REGP) || _cost[LOAD_LONG_REGP] > c+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, cmovP_regUCF_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_INDIRECT) || _cost[LOAD_LONG_INDIRECT] > c+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, cmovP_regUCF_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_MEMORY) || _cost[LOAD_LONG_MEMORY] > c+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(EDIREGP) || _cost[EDIREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGP, cmovP_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, cmovP_regUCF_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(LONG_MEMORY) || _cost[LONG_MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOPU_EFLAGSREGU) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGP_EREGP) &&
        (
#line 7975 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOPU_EFLAGSREGU]+_kids[1]->_cost[_BINARY_EREGP_EREGP]+200;
      if (STATE__NOT_YET_VALID(EREGP) || _cost[EREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EREGP, cmovP_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(ANYREGP) || _cost[ANYREGP] > c) {
        DFA_PRODUCTION__SET_VALID(ANYREGP, cmovP_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGP) || _cost[EAXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGP, cmovP_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGP_NO_EBP) || _cost[EREGP_NO_EBP] > c+100) {
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, cmovP_regU_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(INDIRECT_WIN95_SAFE) || _cost[INDIRECT_WIN95_SAFE] > c+100+100) {
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, cmovP_regU_rule, c+100+100)
      }
      if (STATE__NOT_YET_VALID(EBXREGP) || _cost[EBXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGP, cmovP_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGP) || _cost[NAXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGP, cmovP_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(PREGP) || _cost[PREGP] > c) {
        DFA_PRODUCTION__SET_VALID(PREGP, cmovP_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGP) || _cost[ECXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGP, cmovP_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(NABXREGP) || _cost[NABXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(NABXREGP, cmovP_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGP) || _cost[ESIREGP] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGP, cmovP_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_REGP) || _cost[LOAD_LONG_REGP] > c+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, cmovP_regU_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_INDIRECT) || _cost[LOAD_LONG_INDIRECT] > c+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, cmovP_regU_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_MEMORY) || _cost[LOAD_LONG_MEMORY] > c+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(EDIREGP) || _cost[EDIREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGP, cmovP_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, cmovP_regU_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(LONG_MEMORY) || _cost[LONG_MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_EFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGP_EREGP) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_EFLAGSREG]+_kids[1]->_cost[_BINARY_EREGP_EREGP]+300;
      if (STATE__NOT_YET_VALID(EREGP) || _cost[EREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EREGP, cmovP_reg_nonP6_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(ANYREGP) || _cost[ANYREGP] > c) {
        DFA_PRODUCTION__SET_VALID(ANYREGP, cmovP_reg_nonP6_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGP) || _cost[EAXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGP, cmovP_reg_nonP6_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGP_NO_EBP) || _cost[EREGP_NO_EBP] > c+100) {
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, cmovP_reg_nonP6_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(INDIRECT_WIN95_SAFE) || _cost[INDIRECT_WIN95_SAFE] > c+100+100) {
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, cmovP_reg_nonP6_rule, c+100+100)
      }
      if (STATE__NOT_YET_VALID(EBXREGP) || _cost[EBXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGP, cmovP_reg_nonP6_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGP) || _cost[NAXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGP, cmovP_reg_nonP6_rule, c)
      }
      if (STATE__NOT_YET_VALID(PREGP) || _cost[PREGP] > c) {
        DFA_PRODUCTION__SET_VALID(PREGP, cmovP_reg_nonP6_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGP) || _cost[ECXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGP, cmovP_reg_nonP6_rule, c)
      }
      if (STATE__NOT_YET_VALID(NABXREGP) || _cost[NABXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(NABXREGP, cmovP_reg_nonP6_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGP) || _cost[ESIREGP] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGP, cmovP_reg_nonP6_rule, c)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_REGP) || _cost[LOAD_LONG_REGP] > c+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, cmovP_reg_nonP6_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_INDIRECT) || _cost[LOAD_LONG_INDIRECT] > c+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, cmovP_reg_nonP6_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_MEMORY) || _cost[LOAD_LONG_MEMORY] > c+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(EDIREGP) || _cost[EDIREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGP, cmovP_reg_nonP6_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, cmovP_reg_nonP6_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(LONG_MEMORY) || _cost[LONG_MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _BINARY_CMPOP_EFLAGSREG) && STATE__VALID_CHILD(_kids[1], _BINARY_EREGP_EREGP) &&
        (
#line 7949 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_CMPOP_EFLAGSREG]+_kids[1]->_cost[_BINARY_EREGP_EREGP]+200;
      if (STATE__NOT_YET_VALID(EREGP) || _cost[EREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EREGP, cmovP_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTP) || _cost[STACKSLOTP] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(ANYREGP) || _cost[ANYREGP] > c) {
        DFA_PRODUCTION__SET_VALID(ANYREGP, cmovP_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGP) || _cost[EAXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGP, cmovP_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGP_NO_EBP) || _cost[EREGP_NO_EBP] > c+100) {
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, cmovP_reg_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(INDIRECT_WIN95_SAFE) || _cost[INDIRECT_WIN95_SAFE] > c+100+100) {
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, cmovP_reg_rule, c+100+100)
      }
      if (STATE__NOT_YET_VALID(EBXREGP) || _cost[EBXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGP, cmovP_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGP) || _cost[NAXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGP, cmovP_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(PREGP) || _cost[PREGP] > c) {
        DFA_PRODUCTION__SET_VALID(PREGP, cmovP_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGP) || _cost[ECXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGP, cmovP_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NABXREGP) || _cost[NABXREGP] > c) {
        DFA_PRODUCTION__SET_VALID(NABXREGP, cmovP_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGP) || _cost[ESIREGP] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGP, cmovP_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_REGP) || _cost[LOAD_LONG_REGP] > c+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, cmovP_reg_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_INDIRECT) || _cost[LOAD_LONG_INDIRECT] > c+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, cmovP_reg_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(LOAD_LONG_MEMORY) || _cost[LOAD_LONG_MEMORY] > c+100) {
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(EDIREGP) || _cost[EDIREGP] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGP, cmovP_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(INDIRECT) || _cost[INDIRECT] > c) {
        DFA_PRODUCTION__SET_VALID(INDIRECT, cmovP_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(MEMORY) || _cost[MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
      }
      if (STATE__NOT_YET_VALID(LONG_MEMORY) || _cost[LONG_MEMORY] > c) {
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c)
      }
    }
}
void  State::_sub_Op_CmpD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGXD) && STATE__VALID_CHILD(_kids[1], _LOADD_MEMORY_) &&
        (
#line 9970 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+_kids[1]->_cost[_LOADD_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(EFLAGSREGUCF, cmpXD_ccmemCF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGXD) && STATE__VALID_CHILD(_kids[1], _LOADD_MEMORY_) &&
        (
#line 9955 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+_kids[1]->_cost[_LOADD_MEMORY_]+145;
        DFA_PRODUCTION__SET_VALID(EFLAGSREGU, cmpXD_ccmem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGXD) && STATE__VALID_CHILD(_kids[1], REGXD) &&
        (
#line 9944 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+_kids[1]->_cost[REGXD]+100;
      if (STATE__NOT_YET_VALID(EFLAGSREGUCF) || _cost[EFLAGSREGUCF] > c) {
        DFA_PRODUCTION__SET_VALID(EFLAGSREGUCF, cmpXD_ccCF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGXD) && STATE__VALID_CHILD(_kids[1], REGXD) &&
        (
#line 9929 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+_kids[1]->_cost[REGXD]+125;
      if (STATE__NOT_YET_VALID(EFLAGSREGU) || _cost[EFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(EFLAGSREGU, cmpXD_cc_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 9881 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD]+200;
      if (STATE__NOT_YET_VALID(EFLAGSREGU) || _cost[EFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(EFLAGSREGU, cmpD_cc_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 9868 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() && UseSSE <=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD]+150;
      if (STATE__NOT_YET_VALID(EFLAGSREGUCF) || _cost[EFLAGSREGUCF] > c) {
        DFA_PRODUCTION__SET_VALID(EFLAGSREGUCF, cmpD_cc_P6CF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 9850 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() && UseSSE <=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD]+150;
      if (STATE__NOT_YET_VALID(EFLAGSREGU) || _cost[EFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(EFLAGSREGU, cmpD_cc_P6_rule, c)
      }
    }
}
void  State::_sub_Op_CmpD3(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGXD) && STATE__VALID_CHILD(_kids[1], _LOADD_MEMORY_) &&
        (
#line 10003 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+_kids[1]->_cost[_LOADD_MEMORY_]+275;
        DFA_PRODUCTION__SET_VALID(EREGI, cmpXD_regmem_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, cmpXD_regmem_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, cmpXD_regmem_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, cmpXD_regmem_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, cmpXD_regmem_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, cmpXD_regmem_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, cmpXD_regmem_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, cmpXD_regmem_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, cmpXD_regmem_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, cmpXD_regmem_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, cmpXD_regmem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGXD) && STATE__VALID_CHILD(_kids[1], REGXD) &&
        (
#line 9981 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+_kids[1]->_cost[REGXD]+255;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, cmpXD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, cmpXD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, cmpXD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, cmpXD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, cmpXD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, cmpXD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, cmpXD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, cmpXD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, cmpXD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, cmpXD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, cmpXD_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 9915 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD]+300;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, cmpD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, cmpD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, cmpD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, cmpD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, cmpD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, cmpD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, cmpD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, cmpD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, cmpD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, cmpD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, cmpD_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], IMMD0) &&
        (
#line 9901 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[IMMD0]+280;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, cmpD_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, cmpD_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, cmpD_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, cmpD_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, cmpD_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, cmpD_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, cmpD_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, cmpD_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, cmpD_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, cmpD_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, cmpD_0_rule, c)
      }
    }
}
void  State::_sub_Op_CmpF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGX) && STATE__VALID_CHILD(_kids[1], _LOADF_MEMORY_) &&
        (
#line 10970 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+_kids[1]->_cost[_LOADF_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(EFLAGSREGUCF, cmpX_ccmemCF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGX) && STATE__VALID_CHILD(_kids[1], _LOADF_MEMORY_) &&
        (
#line 10955 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+_kids[1]->_cost[_LOADF_MEMORY_]+165;
        DFA_PRODUCTION__SET_VALID(EFLAGSREGU, cmpX_ccmem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGX) && STATE__VALID_CHILD(_kids[1], REGX) &&
        (
#line 10944 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+_kids[1]->_cost[REGX]+100;
      if (STATE__NOT_YET_VALID(EFLAGSREGUCF) || _cost[EFLAGSREGUCF] > c) {
        DFA_PRODUCTION__SET_VALID(EFLAGSREGUCF, cmpX_ccCF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGX) && STATE__VALID_CHILD(_kids[1], REGX) &&
        (
#line 10929 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+_kids[1]->_cost[REGX]+145;
      if (STATE__NOT_YET_VALID(EFLAGSREGU) || _cost[EFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(EFLAGSREGU, cmpX_cc_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 10881 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE == 0
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF]+200;
      if (STATE__NOT_YET_VALID(EFLAGSREGU) || _cost[EFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(EFLAGSREGU, cmpF_cc_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 10867 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() && UseSSE == 0
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF]+100;
      if (STATE__NOT_YET_VALID(EFLAGSREGUCF) || _cost[EFLAGSREGUCF] > c) {
        DFA_PRODUCTION__SET_VALID(EFLAGSREGUCF, cmpF_cc_P6CF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 10849 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
VM_Version::supports_cmov() && UseSSE == 0
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF]+150;
      if (STATE__NOT_YET_VALID(EFLAGSREGU) || _cost[EFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(EFLAGSREGU, cmpF_cc_P6_rule, c)
      }
    }
}
void  State::_sub_Op_CmpF3(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGX) && STATE__VALID_CHILD(_kids[1], _LOADF_MEMORY_) &&
        (
#line 11002 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+_kids[1]->_cost[_LOADF_MEMORY_]+275;
        DFA_PRODUCTION__SET_VALID(EREGI, cmpX_regmem_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, cmpX_regmem_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, cmpX_regmem_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, cmpX_regmem_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, cmpX_regmem_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, cmpX_regmem_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, cmpX_regmem_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, cmpX_regmem_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, cmpX_regmem_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, cmpX_regmem_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, cmpX_regmem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGX) && STATE__VALID_CHILD(_kids[1], REGX) &&
        (
#line 10981 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+_kids[1]->_cost[REGX]+255;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, cmpX_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, cmpX_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, cmpX_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, cmpX_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, cmpX_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, cmpX_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, cmpX_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, cmpX_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, cmpX_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, cmpX_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, cmpX_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 10915 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE == 0
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF]+300;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, cmpF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, cmpF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, cmpF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, cmpF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, cmpF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, cmpF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, cmpF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, cmpF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, cmpF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, cmpF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, cmpF_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], IMMF0) &&
        (
#line 10901 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE == 0
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[IMMF0]+280;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, cmpF_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, cmpF_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, cmpF_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, cmpF_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, cmpF_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, cmpF_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, cmpF_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, cmpF_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, cmpF_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, cmpF_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, cmpF_0_rule, c)
      }
    }
}
void  State::_sub_Op_CmpI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _ANDI_EREGI_MEMORY) && STATE__VALID_CHILD(_kids[1], IMMI0) ) {
      unsigned int c = _kids[0]->_cost[_ANDI_EREGI_MEMORY]+_kids[1]->_cost[IMMI0]+100;
        DFA_PRODUCTION__SET_VALID(EFLAGSREG, testI_reg_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI_EREGI_IMMI) && STATE__VALID_CHILD(_kids[1], IMMI0) ) {
      unsigned int c = _kids[0]->_cost[_ANDI_EREGI_IMMI]+_kids[1]->_cost[IMMI0]+100;
      if (STATE__NOT_YET_VALID(EFLAGSREG) || _cost[EFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(EFLAGSREG, testI_reg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI0) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI0]+100;
      if (STATE__NOT_YET_VALID(EFLAGSREG) || _cost[EFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(EFLAGSREG, testI_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[_LOADI_MEMORY_]+500;
      if (STATE__NOT_YET_VALID(EFLAGSREG) || _cost[EFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(EFLAGSREG, compI_eReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(EFLAGSREG) || _cost[EFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(EFLAGSREG, compI_eReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[EREGI]+100;
      if (STATE__NOT_YET_VALID(EFLAGSREG) || _cost[EFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(EFLAGSREG, compI_eReg_rule, c)
      }
    }
}
void  State::_sub_Op_CmpL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], EREGL) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[EREGL]+300;
        DFA_PRODUCTION__SET_VALID(FLAGSREG_LONG_LEGT, cmpL_reg_flags_LEGT_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], IMML0) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[IMML0]+300;
      if (STATE__NOT_YET_VALID(FLAGSREG_LONG_LEGT) || _cost[FLAGSREG_LONG_LEGT] > c) {
        DFA_PRODUCTION__SET_VALID(FLAGSREG_LONG_LEGT, cmpL_zero_flags_LEGT_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], EREGL) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[EREGL]+200+300;
        DFA_PRODUCTION__SET_VALID(FLAGSREG_LONG_EQNE, cmpL_reg_flags_EQNE_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], IMML0) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[IMML0]+200;
      if (STATE__NOT_YET_VALID(FLAGSREG_LONG_EQNE) || _cost[FLAGSREG_LONG_EQNE] > c) {
        DFA_PRODUCTION__SET_VALID(FLAGSREG_LONG_EQNE, cmpL_zero_flags_EQNE_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], EREGL) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[EREGL]+300;
        DFA_PRODUCTION__SET_VALID(FLAGSREG_LONG_LTGE, cmpL_reg_flags_LTGE_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], IMML0) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[IMML0]+100;
      if (STATE__NOT_YET_VALID(FLAGSREG_LONG_LTGE) || _cost[FLAGSREG_LONG_LTGE] > c) {
        DFA_PRODUCTION__SET_VALID(FLAGSREG_LONG_LTGE, cmpL_zero_flags_LTGE_rule, c)
      }
    }
}
void  State::_sub_Op_CmpL3(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], EREGL) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[EREGL]+1000;
        DFA_PRODUCTION__SET_VALID(ESIREGI, cmpL3_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGI, cmpL3_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, cmpL3_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, cmpL3_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, cmpL3_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, cmpL3_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, cmpL3_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, cmpL3_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, cmpL3_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, cmpL3_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, cmpL3_reg_reg_rule, c)
    }
}
void  State::_sub_Op_CmpLTMask(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], NCXREGI) && STATE__VALID_CHILD(_kids[1], NCXREGI) ) {
      unsigned int c = _kids[0]->_cost[NCXREGI]+_kids[1]->_cost[NCXREGI];
        DFA_PRODUCTION__SET_VALID(_CMPLTMASK_NCXREGI_NCXREGI, _CmpLTMask_ncxRegI_ncxRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI0) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI0]+100;
        DFA_PRODUCTION__SET_VALID(EREGI, cmpLTMask0_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, cmpLTMask0_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, cmpLTMask0_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, cmpLTMask0_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, cmpLTMask0_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, cmpLTMask0_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, cmpLTMask0_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, cmpLTMask0_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, cmpLTMask0_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, cmpLTMask0_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, cmpLTMask0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], NCXREGI) && STATE__VALID_CHILD(_kids[1], NCXREGI) ) {
      unsigned int c = _kids[0]->_cost[NCXREGI]+_kids[1]->_cost[NCXREGI]+400;
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, cmpLTMask_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, cmpLTMask_rule, c)
      }
    }
}
void  State::_sub_Op_CmpP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _PARTIALSUBTYPECHECK_ESIREGP_EAXREGP) && STATE__VALID_CHILD(_kids[1], IMMP0) ) {
      unsigned int c = _kids[0]->_cost[_PARTIALSUBTYPECHECK_ESIREGP_EAXREGP]+_kids[1]->_cost[IMMP0]+1000;
        DFA_PRODUCTION__SET_VALID(EFLAGSREG, partialSubtypeCheck_vs_Zero_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADP_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI0) ) {
      unsigned int c = _kids[0]->_cost[_LOADP_MEMORY_]+_kids[1]->_cost[IMMI0]+500;
      if (STATE__NOT_YET_VALID(EFLAGSREG) || _cost[EFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(EFLAGSREG, testP_Reg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGP) && STATE__VALID_CHILD(_kids[1], IMMP0) ) {
      unsigned int c = _kids[0]->_cost[EREGP]+_kids[1]->_cost[IMMP0]+100;
      if (STATE__NOT_YET_VALID(EFLAGSREG) || _cost[EFLAGSREG] > c) {
        DFA_PRODUCTION__SET_VALID(EFLAGSREG, testP_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGP) && STATE__VALID_CHILD(_kids[1], _LOADP_MEMORY_) &&
        (
#line 12682 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 !n->in(2)->in(2)->bottom_type()->isa_oop_ptr() 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EREGP]+_kids[1]->_cost[_LOADP_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(EFLAGSREGU, compP_mem_eReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGP) && STATE__VALID_CHILD(_kids[1], _LOADP_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[EREGP]+_kids[1]->_cost[_LOADP_MEMORY_]+500;
      if (STATE__NOT_YET_VALID(EFLAGSREGU) || _cost[EFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(EFLAGSREGU, compP_eReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGP) && STATE__VALID_CHILD(_kids[1], IMMP) ) {
      unsigned int c = _kids[0]->_cost[EREGP]+_kids[1]->_cost[IMMP]+100;
      if (STATE__NOT_YET_VALID(EFLAGSREGU) || _cost[EFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(EFLAGSREGU, compP_eReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGP) && STATE__VALID_CHILD(_kids[1], EREGP) ) {
      unsigned int c = _kids[0]->_cost[EREGP]+_kids[1]->_cost[EREGP]+100;
      if (STATE__NOT_YET_VALID(EFLAGSREGU) || _cost[EFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(EFLAGSREGU, compP_eReg_rule, c)
      }
    }
}
void  State::_sub_Op_CmpU(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI0) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI0]+100;
        DFA_PRODUCTION__SET_VALID(EFLAGSREGU, testU_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[_LOADI_MEMORY_]+500;
      if (STATE__NOT_YET_VALID(EFLAGSREGU) || _cost[EFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(EFLAGSREGU, compU_eReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(EFLAGSREGU) || _cost[EFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(EFLAGSREGU, compU_eReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[EREGI]+100;
      if (STATE__NOT_YET_VALID(EFLAGSREGU) || _cost[EFLAGSREGU] > c) {
        DFA_PRODUCTION__SET_VALID(EFLAGSREGU, compU_eReg_rule, c)
      }
    }
}
void  State::_sub_Op_CompareAndSwapI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], PREGP) && STATE__VALID_CHILD(_kids[1], _BINARY_EAXREGI_ECXREGI) ) {
      unsigned int c = _kids[0]->_cost[PREGP]+_kids[1]->_cost[_BINARY_EAXREGI_ECXREGI]+100;
        DFA_PRODUCTION__SET_VALID(EREGI, compareAndSwapI_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, compareAndSwapI_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, compareAndSwapI_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, compareAndSwapI_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, compareAndSwapI_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, compareAndSwapI_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, compareAndSwapI_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, compareAndSwapI_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, compareAndSwapI_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, compareAndSwapI_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, compareAndSwapI_rule, c)
    }
}
void  State::_sub_Op_CompareAndSwapL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], ESIREGP) && STATE__VALID_CHILD(_kids[1], _BINARY_EADXREGL_EBCXREGL) ) {
      unsigned int c = _kids[0]->_cost[ESIREGP]+_kids[1]->_cost[_BINARY_EADXREGL_EBCXREGL]+100;
        DFA_PRODUCTION__SET_VALID(EREGI, compareAndSwapL_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, compareAndSwapL_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, compareAndSwapL_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, compareAndSwapL_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, compareAndSwapL_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, compareAndSwapL_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, compareAndSwapL_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, compareAndSwapL_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, compareAndSwapL_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, compareAndSwapL_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, compareAndSwapL_rule, c)
    }
}
void  State::_sub_Op_CompareAndSwapP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], PREGP) && STATE__VALID_CHILD(_kids[1], _BINARY_EAXREGP_ECXREGP) ) {
      unsigned int c = _kids[0]->_cost[PREGP]+_kids[1]->_cost[_BINARY_EAXREGP_ECXREGP]+100;
        DFA_PRODUCTION__SET_VALID(EREGI, compareAndSwapP_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, compareAndSwapP_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, compareAndSwapP_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, compareAndSwapP_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, compareAndSwapP_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, compareAndSwapP_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, compareAndSwapP_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, compareAndSwapP_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, compareAndSwapP_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, compareAndSwapP_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, compareAndSwapP_rule, c)
    }
}
void  State::_sub_Op_ConD(const Node *n){
    if(         
#line 4833 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE>=2 && jlong_cast(n->getd()) == 0 
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMXD0, immXD0_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD, loadConXD0_rule, c+100)
        DFA_PRODUCTION__SET_VALID(REGXD6, loadConXD0_rule, c+100)
        DFA_PRODUCTION__SET_VALID(REGXD7, loadConXD0_rule, c+100)
    }
    if(         
#line 4820 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
 ) {
      unsigned int c = 5;
        DFA_PRODUCTION__SET_VALID(IMMXD, immXD_rule, c)
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGXD, loadConXD_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGXD6, loadConXD_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGXD7, loadConXD_rule, c+125)
      }
    }
    if(         
#line 4811 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
 ) {
      unsigned int c = 5;
        DFA_PRODUCTION__SET_VALID(IMMD, immD_rule, c)
        DFA_PRODUCTION__SET_VALID(REGD, loadConD_rule, c+125)
        DFA_PRODUCTION__SET_VALID(REGDPR1, loadConD_rule, c+125)
        DFA_PRODUCTION__SET_VALID(REGDPR2, loadConD_rule, c+125)
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, loadConD_rule, c+125)
    }
    if(         
#line 4801 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE<=1 && n->getd() == 1.0 
#line 999999
 ) {
      unsigned int c = 5;
        DFA_PRODUCTION__SET_VALID(IMMD1, immD1_rule, c)
    }
    if(         
#line 4791 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE<=1 && n->getd() == 0.0 && !g_isnan(n->getd()) 
#line 999999
 ) {
      unsigned int c = 5;
        DFA_PRODUCTION__SET_VALID(IMMD0, immD0_rule, c)
    }
}
void  State::_sub_Op_ConF(const Node *n){
    if(         
#line 4872 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE >= 1 && jint_cast(n->getf()) == 0 
#line 999999
 ) {
      unsigned int c = 5;
        DFA_PRODUCTION__SET_VALID(IMMXF0, immXF0_rule, c)
        DFA_PRODUCTION__SET_VALID(REGX, loadConX0_rule, c+100)
    }
    if(         
#line 4862 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE >= 1
#line 999999
 ) {
      unsigned int c = 5;
        DFA_PRODUCTION__SET_VALID(IMMXF, immXF_rule, c)
      if (STATE__NOT_YET_VALID(REGX) || _cost[REGX] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGX, loadConX_rule, c+125)
      }
    }
    if(         
#line 4852 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE == 0 
#line 999999
 ) {
      unsigned int c = 5;
        DFA_PRODUCTION__SET_VALID(IMMF, immF_rule, c)
        DFA_PRODUCTION__SET_VALID(REGF, loadConF_rule, c+125)
        DFA_PRODUCTION__SET_VALID(REGFPR1, loadConF_rule, c+125)
    }
    if(         
#line 4842 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE == 0 && n->getf() == 0.0 
#line 999999
 ) {
      unsigned int c = 5;
        DFA_PRODUCTION__SET_VALID(IMMF0, immF0_rule, c)
    }
}
void  State::_sub_Op_ConI(const Node *n){
    int _n_get_int__ = n->get_int();
    if(         
#line 4910 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
_n_get_int__ == 65535
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMI_65535, immI_65535_rule, c)
    }
    if(         
#line 4901 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 _n_get_int__ == 255 
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMI_255, immI_255_rule, c)
    }
    if(         
#line 4892 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 _n_get_int__ == 24 
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMI_24, immI_24_rule, c)
    }
    if(         
#line 4884 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 _n_get_int__ == 16 
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMI_16, immI_16_rule, c)
    }
    if(         
#line 4700 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 _n_get_int__ == 3 
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMI_3, immI_3_rule, c)
    }
    if(         
#line 4691 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 _n_get_int__ == 2 
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMI_2, immI_2_rule, c)
    }
    if(         
#line 4682 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 _n_get_int__ == 1 
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMI_1, immI_1_rule, c)
    }
    if(         
#line 4673 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 _n_get_int__ >= 32 && _n_get_int__ <= 63 
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMI_32_63, immI_32_63_rule, c)
    }
    if(         
#line 4664 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 _n_get_int__ >= 1 && _n_get_int__ <= 31 
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMI_1_31, immI_1_31_rule, c)
    }
    if(         
#line 4655 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 _n_get_int__ == 32 
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMI_32, immI_32_rule, c)
    }
    if(         
#line 4645 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
(-32768 <= _n_get_int__) && (_n_get_int__ <= 32767)
#line 999999
 ) {
      unsigned int c = 10;
        DFA_PRODUCTION__SET_VALID(IMMI16, immI16_rule, c)
    }
    if(         
#line 4636 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
(-128 <= _n_get_int__) && (_n_get_int__ <= 127)
#line 999999
 ) {
      unsigned int c = 5;
        DFA_PRODUCTION__SET_VALID(IMMI8, immI8_rule, c)
    }
    if(         
#line 4628 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
0 <= _n_get_int__ && (_n_get_int__ <= 3)
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMI2, immI2_rule, c)
    }
    if(         
#line 4618 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
_n_get_int__ == -1
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMI_M1, immI_M1_rule, c)
    }
    if(         
#line 4608 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
_n_get_int__ == 1
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMI1, immI1_rule, c)
    }
    if(         
#line 4598 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
_n_get_int__ == 0
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMI0, immI0_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGI, loadConI0_rule, c+50)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+50+100)
        DFA_PRODUCTION__SET_VALID(XREGI, loadConI0_rule, c+50)
        DFA_PRODUCTION__SET_VALID(EAXREGI, loadConI0_rule, c+50)
        DFA_PRODUCTION__SET_VALID(NCXREGI, loadConI0_rule, c+50)
        DFA_PRODUCTION__SET_VALID(EBXREGI, loadConI0_rule, c+50)
        DFA_PRODUCTION__SET_VALID(NADXREGI, loadConI0_rule, c+50)
        DFA_PRODUCTION__SET_VALID(ECXREGI, loadConI0_rule, c+50)
        DFA_PRODUCTION__SET_VALID(NAXREGI, loadConI0_rule, c+50)
        DFA_PRODUCTION__SET_VALID(EDXREGI, loadConI0_rule, c+50)
        DFA_PRODUCTION__SET_VALID(EDIREGI, loadConI0_rule, c+50)
        DFA_PRODUCTION__SET_VALID(ESIREGI, loadConI0_rule, c+50)
    }
    {
      unsigned int c = 10;
        DFA_PRODUCTION__SET_VALID(IMMI, immI_rule, c)
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c+100) {
        DFA_PRODUCTION__SET_VALID(EREGI, loadConI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c+100) {
        DFA_PRODUCTION__SET_VALID(XREGI, loadConI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c+100) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, loadConI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c+100) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, loadConI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c+100) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, loadConI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c+100) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, loadConI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c+100) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, loadConI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c+100) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, loadConI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c+100) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, loadConI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c+100) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, loadConI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c+100) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, loadConI_rule, c+100)
      }
    }
   if ( /* EREGI KNOWN_VALID || */ _cost[EREGI] > 100) {
     DFA_PRODUCTION(EREGI, loadConI_rule, 100)
   }
   if ( /* STACKSLOTI KNOWN_VALID || */ _cost[STACKSLOTI] > 100+100) {
     DFA_PRODUCTION(STACKSLOTI, storeSSI_rule, 100+100)
   }
   if ( /* XREGI KNOWN_VALID || */ _cost[XREGI] > 100) {
     DFA_PRODUCTION(XREGI, loadConI_rule, 100)
   }
   if ( /* EAXREGI KNOWN_VALID || */ _cost[EAXREGI] > 100) {
     DFA_PRODUCTION(EAXREGI, loadConI_rule, 100)
   }
   if ( /* NCXREGI KNOWN_VALID || */ _cost[NCXREGI] > 100) {
     DFA_PRODUCTION(NCXREGI, loadConI_rule, 100)
   }
   if ( /* EBXREGI KNOWN_VALID || */ _cost[EBXREGI] > 100) {
     DFA_PRODUCTION(EBXREGI, loadConI_rule, 100)
   }
   if ( /* NADXREGI KNOWN_VALID || */ _cost[NADXREGI] > 100) {
     DFA_PRODUCTION(NADXREGI, loadConI_rule, 100)
   }
   if ( /* ECXREGI KNOWN_VALID || */ _cost[ECXREGI] > 100) {
     DFA_PRODUCTION(ECXREGI, loadConI_rule, 100)
   }
   if ( /* NAXREGI KNOWN_VALID || */ _cost[NAXREGI] > 100) {
     DFA_PRODUCTION(NAXREGI, loadConI_rule, 100)
   }
   if ( /* EDXREGI KNOWN_VALID || */ _cost[EDXREGI] > 100) {
     DFA_PRODUCTION(EDXREGI, loadConI_rule, 100)
   }
   if ( /* EDIREGI KNOWN_VALID || */ _cost[EDIREGI] > 100) {
     DFA_PRODUCTION(EDIREGI, loadConI_rule, 100)
   }
   if ( /* ESIREGI KNOWN_VALID || */ _cost[ESIREGI] > 100) {
     DFA_PRODUCTION(ESIREGI, loadConI_rule, 100)
   }
}
void  State::_sub_Op_ConL(const Node *n){
    jlong _n_get_long__ = n->get_long();
    if(         
#line 4779 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
_n_get_long__ == (int)(_n_get_long__)
#line 999999
 ) {
      unsigned int c = 20;
        DFA_PRODUCTION__SET_VALID(IMML32, immL32_rule, c)
        DFA_PRODUCTION__SET_VALID(EADXREGL_LOW_ONLY, loadConL_low_only_rule, c+250)
    }
    if(         
#line 4769 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
_n_get_long__ == 0xFFFFFFFFL
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMML_32BITS, immL_32bits_rule, c)
    }
    if(         
#line 4759 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
(0 <= _n_get_long__) && (_n_get_long__ <= 127)
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMML_127, immL_127_rule, c)
    }
    if(         
#line 4748 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 _n_get_long__ == -1L 
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMML_M1, immL_M1_rule, c)
    }
    if(         
#line 4738 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 _n_get_long__ == 0L 
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMML0, immL0_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGL, loadConL0_rule, c+150)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+150+200)
        DFA_PRODUCTION__SET_VALID(EADXREGL, loadConL0_rule, c+150)
        DFA_PRODUCTION__SET_VALID(EBCXREGL, loadConL0_rule, c+150)
    }
    {
      unsigned int c = 20;
        DFA_PRODUCTION__SET_VALID(IMML, immL_rule, c)
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c+200) {
        DFA_PRODUCTION__SET_VALID(EREGL, loadConL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c+200) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, loadConL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c+200) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, loadConL_rule, c+200)
      }
    }
   if ( /* EREGL KNOWN_VALID || */ _cost[EREGL] > 200) {
     DFA_PRODUCTION(EREGL, loadConL_rule, 200)
   }
   if ( /* STACKSLOTL KNOWN_VALID || */ _cost[STACKSLOTL] > 200+200) {
     DFA_PRODUCTION(STACKSLOTL, storeSSL_rule, 200+200)
   }
   if ( /* EADXREGL KNOWN_VALID || */ _cost[EADXREGL] > 200) {
     DFA_PRODUCTION(EADXREGL, loadConL_rule, 200)
   }
   if ( /* EBCXREGL KNOWN_VALID || */ _cost[EBCXREGL] > 200) {
     DFA_PRODUCTION(EBCXREGL, loadConL_rule, 200)
   }
}
void  State::_sub_Op_ConP(const Node *n){
    if(         
#line 4719 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 n->get_ptr() == 0 
#line 999999
 ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(IMMP0, immP0_rule, c)
    }
    {
      unsigned int c = 10;
        DFA_PRODUCTION__SET_VALID(IMMP, immP_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGP, loadConP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100+100)
        DFA_PRODUCTION__SET_VALID(ANYREGP, loadConP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(EAXREGP, loadConP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, loadConP_rule, c+100+100)
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, loadConP_rule, c+100+100+100)
        DFA_PRODUCTION__SET_VALID(EBXREGP, loadConP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(NAXREGP, loadConP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(PREGP, loadConP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(ECXREGP, loadConP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(NABXREGP, loadConP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(ESIREGP, loadConP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, loadConP_rule, c+100+100)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, loadConP_rule, c+100+100)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c+100+100)
        DFA_PRODUCTION__SET_VALID(EDIREGP, loadConP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(INDIRECT, loadConP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c+100)
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c+100)
        DFA_PRODUCTION__SET_VALID(DIRECT, direct_rule, c)
        DFA_PRODUCTION(MEMORY, direct_rule, c)	  // overwrites higher cost rule
        DFA_PRODUCTION(LONG_MEMORY, direct_rule, c)	  // overwrites higher cost rule
    }
     DFA_PRODUCTION(EREGP, loadConP_rule, 100)	  // overwrites higher cost rule
     DFA_PRODUCTION(STACKSLOTP, storeSSP_rule, 100+100)	  // overwrites higher cost rule
     DFA_PRODUCTION(ANYREGP, loadConP_rule, 100)	  // overwrites higher cost rule
     DFA_PRODUCTION(EAXREGP, loadConP_rule, 100)	  // overwrites higher cost rule
     DFA_PRODUCTION(EREGP_NO_EBP, loadConP_rule, 100+100)	  // overwrites higher cost rule
     DFA_PRODUCTION(INDIRECT_WIN95_SAFE, loadConP_rule, 100+100+100)	  // overwrites higher cost rule
     DFA_PRODUCTION(EBXREGP, loadConP_rule, 100)	  // overwrites higher cost rule
     DFA_PRODUCTION(NAXREGP, loadConP_rule, 100)	  // overwrites higher cost rule
     DFA_PRODUCTION(PREGP, loadConP_rule, 100)	  // overwrites higher cost rule
     DFA_PRODUCTION(ECXREGP, loadConP_rule, 100)	  // overwrites higher cost rule
     DFA_PRODUCTION(NABXREGP, loadConP_rule, 100)	  // overwrites higher cost rule
     DFA_PRODUCTION(ESIREGP, loadConP_rule, 100)	  // overwrites higher cost rule
     DFA_PRODUCTION(LOAD_LONG_REGP, loadConP_rule, 100+100)	  // overwrites higher cost rule
     DFA_PRODUCTION(LOAD_LONG_INDIRECT, loadConP_rule, 100+100)	  // overwrites higher cost rule
     DFA_PRODUCTION(LOAD_LONG_MEMORY, load_long_indirect_rule, 100+100)	  // overwrites higher cost rule
     DFA_PRODUCTION(EDIREGP, loadConP_rule, 100)	  // overwrites higher cost rule
     DFA_PRODUCTION(INDIRECT, loadConP_rule, 100)	  // overwrites higher cost rule
}
void  State::_sub_Op_Conv2B(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGP) ) {
      unsigned int c = _kids[0]->_cost[EREGP]+100;
        DFA_PRODUCTION__SET_VALID(EREGI, convP2B_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, convP2B_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, convP2B_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, convP2B_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, convP2B_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, convP2B_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, convP2B_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, convP2B_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, convP2B_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, convP2B_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, convP2B_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, convI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, convI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, convI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, convI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, convI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, convI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, convI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, convI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, convI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, convI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, convI2B_rule, c)
      }
    }
}
void  State::_sub_Op_ConvD2F(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGXD) &&
        (
#line 11642 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+100;
        DFA_PRODUCTION__SET_VALID(REGX, convXD2X_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) &&
        (
#line 11629 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+100;
      if (STATE__NOT_YET_VALID(REGX) || _cost[REGX] > c) {
        DFA_PRODUCTION__SET_VALID(REGX, convD2X_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) &&
        (
#line 11619 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+100;
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, convD2F_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGF, loadSSF_rule, c+125)
        DFA_PRODUCTION__SET_VALID(REGFPR1, loadSSF_rule, c+125)
    }
    if( STATE__VALID_CHILD(_kids[0], _SQRTD__CONVF2D__LOADF_MEMORY___) &&
        (
#line 11182 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_SQRTD__CONVF2D__LOADF_MEMORY___]+100;
      if (STATE__NOT_YET_VALID(REGX) || _cost[REGX] > c) {
        DFA_PRODUCTION__SET_VALID(REGX, sqrtX_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _SQRTD__CONVF2D_REGX__) &&
        (
#line 11174 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_SQRTD__CONVF2D_REGX__]+100;
      if (STATE__NOT_YET_VALID(REGX) || _cost[REGX] > c) {
        DFA_PRODUCTION__SET_VALID(REGX, sqrtX_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGDPR1) ) {
      unsigned int c = _kids[0]->_cost[REGDPR1];
        DFA_PRODUCTION__SET_VALID(_CONVD2F_REGDPR1_, _ConvD2F_regDPR1__rule, c)
    }
}
void  State::_sub_Op_ConvD2I(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGXD) &&
        (
#line 11711 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+100;
        DFA_PRODUCTION__SET_VALID(EAXREGI, convXD2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGI, convXD2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, convXD2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, convXD2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, convXD2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, convXD2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, convXD2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, convXD2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, convXD2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, convXD2I_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, convXD2I_reg_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) &&
        (
#line 11691 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+100;
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, convD2I_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, convD2I_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, convD2I_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, convD2I_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, convD2I_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, convD2I_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, convD2I_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, convD2I_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, convD2I_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, convD2I_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, convD2I_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_ConvD2L(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGXD) &&
        (
#line 11752 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+100;
        DFA_PRODUCTION__SET_VALID(EADXREGL, convXD2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGL, convXD2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
        DFA_PRODUCTION__SET_VALID(EBCXREGL, convXD2L_reg_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) &&
        (
#line 11729 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+100;
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, convD2L_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, convD2L_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, convD2L_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_ConvF2D(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGX) &&
        (
#line 11681 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+100;
        DFA_PRODUCTION__SET_VALID(REGXD, convX2XD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, convX2XD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, convX2XD_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGX) &&
        (
#line 11668 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+100;
        DFA_PRODUCTION__SET_VALID(REGD, convX2D_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR1, convX2D_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR2, convX2D_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, convX2D_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) &&
        (
#line 11659 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+100;
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, convF2D_reg_rule, c)
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGD, loadSSD_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGDPR1) || _cost[REGDPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGDPR1, loadSSD_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGDPR2) || _cost[REGDPR2] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGDPR2, loadSSD_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGNOTDPR1) || _cost[REGNOTDPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, loadSSD_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) &&
        (
#line 11651 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+100;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, convF2D_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR1) || _cost[REGDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR1, convF2D_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR2) || _cost[REGDPR2] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR2, convF2D_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGNOTDPR1) || _cost[REGNOTDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, convF2D_reg_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADF_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_LOADF_MEMORY_];
        DFA_PRODUCTION__SET_VALID(_CONVF2D__LOADF_MEMORY__, _ConvF2D__LoadF_memory___rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGX) ) {
      unsigned int c = _kids[0]->_cost[REGX];
        DFA_PRODUCTION__SET_VALID(_CONVF2D_REGX_, _ConvF2D_regX__rule, c)
    }
}
void  State::_sub_Op_ConvF2I(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGX) &&
        (
#line 11804 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+100;
        DFA_PRODUCTION__SET_VALID(EAXREGI, convX2I_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGI, convX2I_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, convX2I_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, convX2I_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, convX2I_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, convX2I_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, convX2I_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, convX2I_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, convX2I_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, convX2I_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, convX2I_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) &&
        (
#line 11783 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+100;
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, convF2I_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, convF2I_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, convF2I_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, convF2I_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, convF2I_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, convF2I_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, convF2I_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, convF2I_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, convF2I_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, convF2I_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, convF2I_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_ConvF2L(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGX) &&
        (
#line 11846 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+100;
        DFA_PRODUCTION__SET_VALID(EADXREGL, convX2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGL, convX2L_reg_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
        DFA_PRODUCTION__SET_VALID(EBCXREGL, convX2L_reg_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) &&
        (
#line 11822 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+100;
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, convF2L_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, convF2L_reg_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, convF2L_reg_reg_rule, c)
      }
    }
}
void  State::_sub_Op_ConvI2D(const Node *n){
    bool Compile__current____select_24_bit_instr__ = Compile::current()->select_24_bit_instr();
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) &&
        (
#line 11914 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE<=1 && !Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(REGD, convI2D_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR1, convI2D_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR2, convI2D_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, convI2D_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) &&
        (
#line 11901 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE>=2 && UseXmmI2D 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+100;
        DFA_PRODUCTION__SET_VALID(REGXD, convXI2XD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, convXI2XD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, convXI2XD_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) &&
        (
#line 11891 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE>=2 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+100;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, convI2XD_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, convI2XD_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, convI2XD_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) &&
        (
#line 11882 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE>=2 && !UseXmmI2D 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+100;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, convI2XD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, convI2XD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, convI2XD_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], STACKSLOTI) &&
        (
#line 11872 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE<=1 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[STACKSLOTI]+100;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, convI2D_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR1) || _cost[REGDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR1, convI2D_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR2) || _cost[REGDPR2] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR2, convI2D_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGNOTDPR1) || _cost[REGNOTDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, convI2D_reg_rule, c)
      }
    }
}
void  State::_sub_Op_ConvI2F(const Node *n){
    bool Compile__current____select_24_bit_instr__ = Compile::current()->select_24_bit_instr();
    if( STATE__VALID_CHILD(_kids[0], EREGI) &&
        (
#line 11999 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE>=2 && UseXmmI2F 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+100;
        DFA_PRODUCTION__SET_VALID(REGX, convXI2X_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) &&
        (
#line 11988 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE==1 || UseSSE>=2 && !UseXmmI2F 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+100;
      if (STATE__NOT_YET_VALID(REGX) || _cost[REGX] > c) {
        DFA_PRODUCTION__SET_VALID(REGX, convI2X_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) &&
        (
#line 11976 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE==0 && !Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(REGF, convI2F_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(REGFPR1, convI2F_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], STACKSLOTI) &&
        (
#line 11964 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE==0 && !Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[STACKSLOTI]+100;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, convI2F_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, convI2F_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) &&
        (
#line 11951 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE==0 && Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+200;
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, convI2F_SSF_mem_rule, c)
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGF, loadSSF_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, loadSSF_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], STACKSLOTI) &&
        (
#line 11938 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE==0 && Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[STACKSLOTI]+200;
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, convI2F_SSF_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGF, loadSSF_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, loadSSF_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], STACKSLOTI) &&
        (
#line 11926 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE==0 && n->in(1)->Opcode() == Op_AndI && n->in(1)->in(2)->is_Con() && n->in(1)->in(2)->get_int() == 255 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[STACKSLOTI]+100;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, conv24I2F_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, conv24I2F_reg_rule, c)
      }
    }
}
void  State::_sub_Op_ConvI2L(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGI];
        DFA_PRODUCTION__SET_VALID(_CONVI2L_EREGI_, _ConvI2L_eRegI__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+375;
        DFA_PRODUCTION__SET_VALID(EREGL, convI2L_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
        DFA_PRODUCTION__SET_VALID(EADXREGL, convI2L_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(EBCXREGL, convI2L_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EAXREGI) ) {
      unsigned int c = _kids[0]->_cost[EAXREGI];
        DFA_PRODUCTION__SET_VALID(_CONVI2L_EAXREGI_, _ConvI2L_eAXRegI__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], NADXREGI) ) {
      unsigned int c = _kids[0]->_cost[NADXREGI];
        DFA_PRODUCTION__SET_VALID(_CONVI2L_NADXREGI_, _ConvI2L_nadxRegI__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI__LOADI_MEMORY__IMMI) ) {
      unsigned int c = _kids[0]->_cost[_ANDI__LOADI_MEMORY__IMMI]+100;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, loadI2L_immI_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, loadI2L_immI_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, loadI2L_immI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI__LOADI_MEMORY__IMMI_65535) ) {
      unsigned int c = _kids[0]->_cost[_ANDI__LOADI_MEMORY__IMMI_65535]+100;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, loadI2L_immI_65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, loadI2L_immI_65535_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, loadI2L_immI_65535_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI__LOADI_MEMORY__IMMI_255) ) {
      unsigned int c = _kids[0]->_cost[_ANDI__LOADI_MEMORY__IMMI_255]+100;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, loadI2L_immI_255_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, loadI2L_immI_255_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, loadI2L_immI_255_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+375;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, loadI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, loadI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, loadI2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI__LOADUS_MEMORY__IMMI16) ) {
      unsigned int c = _kids[0]->_cost[_ANDI__LOADUS_MEMORY__IMMI16]+100;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, loadUS2L_immI16_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, loadUS2L_immI16_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, loadUS2L_immI16_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI__LOADUS_MEMORY__IMMI_255) ) {
      unsigned int c = _kids[0]->_cost[_ANDI__LOADUS_MEMORY__IMMI_255]+100;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, loadUS2L_immI_255_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, loadUS2L_immI_255_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, loadUS2L_immI_255_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADUS_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_LOADUS_MEMORY_]+250;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, loadUS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, loadUS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, loadUS2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADS_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_LOADS_MEMORY_]+375;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, loadS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, loadS2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, loadS2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDI__LOADUB_MEMORY__IMMI8) ) {
      unsigned int c = _kids[0]->_cost[_ANDI__LOADUB_MEMORY__IMMI8]+100;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, loadUB2L_immI8_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, loadUB2L_immI8_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, loadUB2L_immI8_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADUB_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_LOADUB_MEMORY_]+250;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, loadUB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, loadUB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, loadUB2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADB_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_LOADB_MEMORY_]+375;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, loadB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, loadB2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, loadB2L_rule, c)
      }
    }
}
void  State::_sub_Op_ConvL2D(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGL) &&
        (
#line 12061 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+100;
        DFA_PRODUCTION__SET_VALID(REGXD, convL2XD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, convL2XD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, convL2XD_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) &&
        (
#line 12047 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+100;
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, convL2D_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGD, loadSSD_rule, c+125)
        DFA_PRODUCTION__SET_VALID(REGDPR1, loadSSD_rule, c+125)
        DFA_PRODUCTION__SET_VALID(REGDPR2, loadSSD_rule, c+125)
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, loadSSD_rule, c+125)
    }
}
void  State::_sub_Op_ConvL2F(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGL) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+100;
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, convL2F_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGF, loadSSF_rule, c+125)
        DFA_PRODUCTION__SET_VALID(REGFPR1, loadSSF_rule, c+125)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) &&
        (
#line 12076 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+100;
        DFA_PRODUCTION__SET_VALID(REGX, convL2X_reg_rule, c)
    }
}
void  State::_sub_Op_ConvL2I(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGL) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+100;
        DFA_PRODUCTION__SET_VALID(EREGI, convL2I_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, convL2I_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, convL2I_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, convL2I_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, convL2I_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, convL2I_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, convL2I_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, convL2I_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, convL2I_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, convL2I_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, convL2I_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTL__MULL_EADXREGL_LOW_ONLY__CONVI2L_NADXREGI__IMMI_32_63) &&
        (
#line 8620 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 _kids[0]->_kids[0]->_kids[1]->_leaf->Opcode() == Op_ConL &&
             _kids[0]->_kids[0]->_kids[1]->_leaf->as_Type()->type()->is_long()->get_con() >= min_jint &&
             _kids[0]->_kids[0]->_kids[1]->_leaf->as_Type()->type()->is_long()->get_con() <= max_jint 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTL__MULL_EADXREGL_LOW_ONLY__CONVI2L_NADXREGI__IMMI_32_63]+1*100 + 1*400 - 150;
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, mulI_imm_RShift_high_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, mulI_imm_RShift_high_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, mulI_imm_RShift_high_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, mulI_imm_RShift_high_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, mulI_imm_RShift_high_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, mulI_imm_RShift_high_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, mulI_imm_RShift_high_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, mulI_imm_RShift_high_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, mulI_imm_RShift_high_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, mulI_imm_RShift_high_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, mulI_imm_RShift_high_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTL__MULL__CONVI2L_NADXREGI__EADXREGL_LOW_ONLY_IMMI_32_63) &&
        (
#line 8620 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 _kids[0]->_kids[0]->_kids[1]->_leaf->Opcode() == Op_ConL &&
             _kids[0]->_kids[0]->_kids[1]->_leaf->as_Type()->type()->is_long()->get_con() >= min_jint &&
             _kids[0]->_kids[0]->_kids[1]->_leaf->as_Type()->type()->is_long()->get_con() <= max_jint 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTL__MULL__CONVI2L_NADXREGI__EADXREGL_LOW_ONLY_IMMI_32_63]+1*100 + 1*400 - 150;
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, mulI_imm_RShift_high_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, mulI_imm_RShift_high_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, mulI_imm_RShift_high_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, mulI_imm_RShift_high_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, mulI_imm_RShift_high_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, mulI_imm_RShift_high_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, mulI_imm_RShift_high_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, mulI_imm_RShift_high_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, mulI_imm_RShift_high_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, mulI_imm_RShift_high_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, mulI_imm_RShift_high_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTL__MULL_EADXREGL_LOW_ONLY__CONVI2L_NADXREGI__IMMI_32) &&
        (
#line 8605 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 _kids[0]->_kids[0]->_kids[1]->_leaf->Opcode() == Op_ConL &&
             _kids[0]->_kids[0]->_kids[1]->_leaf->as_Type()->type()->is_long()->get_con() >= min_jint &&
             _kids[0]->_kids[0]->_kids[1]->_leaf->as_Type()->type()->is_long()->get_con() <= max_jint 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTL__MULL_EADXREGL_LOW_ONLY__CONVI2L_NADXREGI__IMMI_32]+0*100 + 1*400 - 150;
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, mulI_imm_high_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, mulI_imm_high_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, mulI_imm_high_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, mulI_imm_high_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, mulI_imm_high_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, mulI_imm_high_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, mulI_imm_high_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, mulI_imm_high_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, mulI_imm_high_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, mulI_imm_high_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, mulI_imm_high_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _RSHIFTL__MULL__CONVI2L_NADXREGI__EADXREGL_LOW_ONLY_IMMI_32) &&
        (
#line 8605 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 _kids[0]->_kids[0]->_kids[1]->_leaf->Opcode() == Op_ConL &&
             _kids[0]->_kids[0]->_kids[1]->_leaf->as_Type()->type()->is_long()->get_con() >= min_jint &&
             _kids[0]->_kids[0]->_kids[1]->_leaf->as_Type()->type()->is_long()->get_con() <= max_jint 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_RSHIFTL__MULL__CONVI2L_NADXREGI__EADXREGL_LOW_ONLY_IMMI_32]+0*100 + 1*400 - 150;
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, mulI_imm_high_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, mulI_imm_high_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, mulI_imm_high_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, mulI_imm_high_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, mulI_imm_high_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, mulI_imm_high_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, mulI_imm_high_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, mulI_imm_high_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, mulI_imm_high_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, mulI_imm_high_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, mulI_imm_high_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) ) {
      unsigned int c = _kids[0]->_cost[EREGL];
        DFA_PRODUCTION__SET_VALID(_CONVL2I_EREGL_, _ConvL2I_eRegL__rule, c)
    }
}
void  State::_sub_Op_CosD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGXD) &&
        (
#line 10543 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+1800;
        DFA_PRODUCTION__SET_VALID(REGXD, cosXD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, cosXD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, cosXD_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGDPR1) &&
        (
#line 10533 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGDPR1]+1800;
        DFA_PRODUCTION__SET_VALID(REGDPR1, cosD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGD, cosD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR2, cosD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, cosD_reg_rule, c)
    }
}
void  State::_sub_Op_CountedLoopEnd(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], CMPOPUCF) && STATE__VALID_CHILD(_kids[1], EFLAGSREGUCF) ) {
      unsigned int c = _kids[0]->_cost[CMPOPUCF]+_kids[1]->_cost[EFLAGSREGUCF]+200;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, jmpLoopEndUCF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOPU) && STATE__VALID_CHILD(_kids[1], EFLAGSREGU) ) {
      unsigned int c = _kids[0]->_cost[CMPOPU]+_kids[1]->_cost[EFLAGSREGU]+300;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, jmpLoopEndU_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOP) && STATE__VALID_CHILD(_kids[1], EFLAGSREG) ) {
      unsigned int c = _kids[0]->_cost[CMPOP]+_kids[1]->_cost[EFLAGSREG]+300;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, jmpLoopEnd_rule, c)
      }
    }
}
void  State::_sub_Op_CountLeadingZerosI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGI) &&
        (
#line 6367 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
!UseCountLeadingZerosInstruction
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+100;
        DFA_PRODUCTION__SET_VALID(EREGI, countLeadingZerosI_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, countLeadingZerosI_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, countLeadingZerosI_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, countLeadingZerosI_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, countLeadingZerosI_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, countLeadingZerosI_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, countLeadingZerosI_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, countLeadingZerosI_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, countLeadingZerosI_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, countLeadingZerosI_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, countLeadingZerosI_bsr_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) &&
        (
#line 6355 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseCountLeadingZerosInstruction
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, countLeadingZerosI_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, countLeadingZerosI_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, countLeadingZerosI_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, countLeadingZerosI_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, countLeadingZerosI_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, countLeadingZerosI_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, countLeadingZerosI_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, countLeadingZerosI_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, countLeadingZerosI_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, countLeadingZerosI_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, countLeadingZerosI_rule, c)
      }
    }
}
void  State::_sub_Op_CountLeadingZerosL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGL) &&
        (
#line 6415 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
!UseCountLeadingZerosInstruction
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+100;
        DFA_PRODUCTION__SET_VALID(EREGI, countLeadingZerosL_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, countLeadingZerosL_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, countLeadingZerosL_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, countLeadingZerosL_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, countLeadingZerosL_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, countLeadingZerosL_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, countLeadingZerosL_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, countLeadingZerosL_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, countLeadingZerosL_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, countLeadingZerosL_bsr_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, countLeadingZerosL_bsr_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) &&
        (
#line 6392 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseCountLeadingZerosInstruction
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, countLeadingZerosL_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, countLeadingZerosL_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, countLeadingZerosL_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, countLeadingZerosL_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, countLeadingZerosL_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, countLeadingZerosL_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, countLeadingZerosL_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, countLeadingZerosL_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, countLeadingZerosL_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, countLeadingZerosL_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, countLeadingZerosL_rule, c)
      }
    }
}
void  State::_sub_Op_CountTrailingZerosI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+100;
        DFA_PRODUCTION__SET_VALID(EREGI, countTrailingZerosI_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, countTrailingZerosI_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, countTrailingZerosI_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, countTrailingZerosI_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, countTrailingZerosI_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, countTrailingZerosI_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, countTrailingZerosI_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, countTrailingZerosI_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, countTrailingZerosI_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, countTrailingZerosI_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, countTrailingZerosI_rule, c)
    }
}
void  State::_sub_Op_CountTrailingZerosL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGL) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+100;
        DFA_PRODUCTION__SET_VALID(EREGI, countTrailingZerosL_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, countTrailingZerosL_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, countTrailingZerosL_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, countTrailingZerosL_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, countTrailingZerosL_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, countTrailingZerosL_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, countTrailingZerosL_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, countTrailingZerosL_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, countTrailingZerosL_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, countTrailingZerosL_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, countTrailingZerosL_rule, c)
    }
}
void  State::_sub_Op_CreateEx(const Node *n){
    {
      unsigned int c = 100;
        DFA_PRODUCTION__SET_VALID(EAXREGP, CreateException_rule, c)
        DFA_PRODUCTION__SET_VALID(ANYREGP, CreateException_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGP, CreateException_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(EBXREGP, CreateException_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, CreateException_rule, c+100)
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, CreateException_rule, c+100+100)
        DFA_PRODUCTION__SET_VALID(NAXREGP, CreateException_rule, c)
        DFA_PRODUCTION__SET_VALID(PREGP, CreateException_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGP, CreateException_rule, c)
        DFA_PRODUCTION__SET_VALID(NABXREGP, CreateException_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGP, CreateException_rule, c)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, CreateException_rule, c+100)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, CreateException_rule, c+100)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c+100)
        DFA_PRODUCTION__SET_VALID(EDIREGP, CreateException_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, CreateException_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c)
    }
}
void  State::_sub_Op_DivD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD];
        DFA_PRODUCTION__SET_VALID(_DIVD_REGD_REGD, _DivD_regD_regD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGDPR1) && STATE__VALID_CHILD(_kids[1], REGNOTDPR1) &&
        (
#line 10441 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE<=1 && Compile::current()->has_method() && Compile::current()->method()->is_strict() 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGDPR1]+_kids[1]->_cost[REGNOTDPR1]+01;
        DFA_PRODUCTION__SET_VALID(REGDPR1, strictfp_divD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGD, strictfp_divD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR2, strictfp_divD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, strictfp_divD_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 10418 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE<=1 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, divD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR1) || _cost[REGDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR1, divD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR2) || _cost[REGDPR2] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR2, divD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGNOTDPR1) || _cost[REGNOTDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, divD_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGXD) && STATE__VALID_CHILD(_kids[1], _LOADD_MEMORY_) &&
        (
#line 10294 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+_kids[1]->_cost[_LOADD_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(REGXD, divXD_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, divXD_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, divXD_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGXD) && STATE__VALID_CHILD(_kids[1], IMMXD) &&
        (
#line 10286 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+_kids[1]->_cost[IMMXD]+100;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, divXD_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, divXD_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, divXD_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGXD) && STATE__VALID_CHILD(_kids[1], REGXD) &&
        (
#line 10277 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+_kids[1]->_cost[REGXD]+100;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, divXD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, divXD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, divXD_reg_rule, c)
      }
    }
}
void  State::_sub_Op_DivF(const Node *n){
    bool Compile__current____select_24_bit_instr__ = Compile::current()->select_24_bit_instr();
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 11532 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && !Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF]+100;
        DFA_PRODUCTION__SET_VALID(REGF, divF_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGFPR1, divF_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 11519 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF]+100;
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, divF24_reg_rule, c)
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGF, loadSSF_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, loadSSF_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _SUBF_REGF_REGF) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 11503 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && !Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_SUBF_REGF_REGF]+_kids[1]->_cost[REGF]+100;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, subF_divF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, subF_divF_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGX) && STATE__VALID_CHILD(_kids[1], _LOADF_MEMORY_) &&
        (
#line 11165 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+_kids[1]->_cost[_LOADF_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(REGX, divX_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGX) && STATE__VALID_CHILD(_kids[1], IMMXF) &&
        (
#line 11157 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+_kids[1]->_cost[IMMXF]+100;
      if (STATE__NOT_YET_VALID(REGX) || _cost[REGX] > c) {
        DFA_PRODUCTION__SET_VALID(REGX, divX_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGX) && STATE__VALID_CHILD(_kids[1], REGX) &&
        (
#line 11149 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+_kids[1]->_cost[REGX]+100;
      if (STATE__NOT_YET_VALID(REGX) || _cost[REGX] > c) {
        DFA_PRODUCTION__SET_VALID(REGX, divX_reg_rule, c)
      }
    }
}
void  State::_sub_Op_DivI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EAXREGI) && STATE__VALID_CHILD(_kids[1], ECXREGI) ) {
      unsigned int c = _kids[0]->_cost[EAXREGI]+_kids[1]->_cost[ECXREGI]+30*100+10*100;
        DFA_PRODUCTION__SET_VALID(EAXREGI, divI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGI, divI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, divI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, divI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, divI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, divI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, divI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, divI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, divI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, divI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, divI_eReg_rule, c)
    }
}
void  State::_sub_Op_DivL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], EREGL) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[EREGL]+10000;
        DFA_PRODUCTION__SET_VALID(EADXREGL, divL_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGL, divL_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
        DFA_PRODUCTION__SET_VALID(EBCXREGL, divL_eReg_rule, c)
    }
}
void  State::_sub_Op_DivModI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EAXREGI) && STATE__VALID_CHILD(_kids[1], ECXREGI) ) {
      unsigned int c = _kids[0]->_cost[EAXREGI]+_kids[1]->_cost[ECXREGI]+30*100+10*100;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, divModI_eReg_divmod_rule, c)
    }
}
void  State::_sub_Op_ExpD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGXD) &&
        (
#line 10721 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+100;
        DFA_PRODUCTION__SET_VALID(REGXD, expXD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, expXD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, expXD_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGDPR1) &&
        (
#line 10685 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGDPR1]+100;
        DFA_PRODUCTION__SET_VALID(REGDPR1, expD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGD, expD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR2, expD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, expD_reg_rule, c)
    }
}
void  State::_sub_Op_FastLock(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGP) && STATE__VALID_CHILD(_kids[1], EREGP) ) {
      unsigned int c = _kids[0]->_cost[EREGP]+_kids[1]->_cost[EREGP]+300;
        DFA_PRODUCTION__SET_VALID(EFLAGSREG, cmpFastLock_rule, c)
    }
}
void  State::_sub_Op_FastUnlock(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGP) && STATE__VALID_CHILD(_kids[1], EAXREGP) ) {
      unsigned int c = _kids[0]->_cost[EREGP]+_kids[1]->_cost[EAXREGP]+300;
        DFA_PRODUCTION__SET_VALID(EFLAGSREG, cmpFastUnlock_rule, c)
    }
}
void  State::_sub_Op_Goto(const Node *n){
    {
      unsigned int c = 300;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, jmpDir_rule, c)
    }
}
void  State::_sub_Op_Halt(const Node *n){
    {
      unsigned int c = 100;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, ShouldNotReachHere_rule, c)
    }
}
void  State::_sub_Op_If(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], CMPOP_COMMUTE) && STATE__VALID_CHILD(_kids[1], FLAGSREG_LONG_LEGT) &&
        (
#line 13498 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 _kids[0]->_leaf->as_Bool()->_test._test == BoolTest::gt || _kids[0]->_leaf->as_Bool()->_test._test == BoolTest::le 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[CMPOP_COMMUTE]+_kids[1]->_cost[FLAGSREG_LONG_LEGT]+300;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, cmpL_LEGT_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOP) && STATE__VALID_CHILD(_kids[1], FLAGSREG_LONG_EQNE) &&
        (
#line 13366 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 _kids[0]->_leaf->as_Bool()->_test._test == BoolTest::eq || _kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ne 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[CMPOP]+_kids[1]->_cost[FLAGSREG_LONG_EQNE]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, cmpL_EQNE_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOP) && STATE__VALID_CHILD(_kids[1], FLAGSREG_LONG_LTGE) &&
        (
#line 13238 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 _kids[0]->_leaf->as_Bool()->_test._test == BoolTest::lt || _kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ge 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[CMPOP]+_kids[1]->_cost[FLAGSREG_LONG_LTGE]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, cmpL_LTGE_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOPUCF2) && STATE__VALID_CHILD(_kids[1], EFLAGSREGUCF) ) {
      unsigned int c = _kids[0]->_cost[CMPOPUCF2]+_kids[1]->_cost[EFLAGSREGUCF]+200;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, jmpConUCF2_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOPUCF) && STATE__VALID_CHILD(_kids[1], EFLAGSREGUCF) ) {
      unsigned int c = _kids[0]->_cost[CMPOPUCF]+_kids[1]->_cost[EFLAGSREGUCF]+200;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, jmpConUCF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOPU) && STATE__VALID_CHILD(_kids[1], EFLAGSREGU) ) {
      unsigned int c = _kids[0]->_cost[CMPOPU]+_kids[1]->_cost[EFLAGSREGU]+300;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, jmpConU_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], CMPOP) && STATE__VALID_CHILD(_kids[1], EFLAGSREG) ) {
      unsigned int c = _kids[0]->_cost[CMPOP]+_kids[1]->_cost[EFLAGSREG]+300;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, jmpCon_rule, c)
      }
    }
}
void  State::_sub_Op_Jump(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+350;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, jumpXtnd_rule, c)
    }
}
void  State::_sub_Op_LShiftI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], NCXREGI) && STATE__VALID_CHILD(_kids[1], _SUBI_IMMI_32_ECXREGI) ) {
      unsigned int c = _kids[0]->_cost[NCXREGI]+_kids[1]->_cost[_SUBI_IMMI_32_ECXREGI];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI_NCXREGI__SUBI_IMMI_32_ECXREGI, _LShiftI_ncxRegI__SubI_immI_32_eCXRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], NCXREGI) && STATE__VALID_CHILD(_kids[1], _SUBI_IMMI0_ECXREGI) ) {
      unsigned int c = _kids[0]->_cost[NCXREGI]+_kids[1]->_cost[_SUBI_IMMI0_ECXREGI];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI_NCXREGI__SUBI_IMMI0_ECXREGI, _LShiftI_ncxRegI__SubI_immI0_eCXRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI_M1];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI_EREGI_IMMI_M1, _LShiftI_eRegI_immI_M1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], NCXREGI) && STATE__VALID_CHILD(_kids[1], ECXREGI) ) {
      unsigned int c = _kids[0]->_cost[NCXREGI]+_kids[1]->_cost[ECXREGI];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI_NCXREGI_ECXREGI, _LShiftI_ncxRegI_eCXRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI8];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI_EREGI_IMMI8, _LShiftI_eRegI_immI8_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI1) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI1];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI_EREGI_IMMI1, _LShiftI_eRegI_immI1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], XREGI) && STATE__VALID_CHILD(_kids[1], IMMI_16) ) {
      unsigned int c = _kids[0]->_cost[XREGI]+_kids[1]->_cost[IMMI_16];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI_XREGI_IMMI_16, _LShiftI_xRegI_immI_16_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], XREGI) && STATE__VALID_CHILD(_kids[1], IMMI_24) ) {
      unsigned int c = _kids[0]->_cost[XREGI]+_kids[1]->_cost[IMMI_24];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI_XREGI_IMMI_24, _LShiftI_xRegI_immI_24_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], ECXREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[ECXREGI]+100;
        DFA_PRODUCTION__SET_VALID(EREGI, salI_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, salI_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, salI_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, salI_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, salI_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, salI_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, salI_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, salI_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, salI_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, salI_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, salI_eReg_CL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, salI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, salI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, salI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, salI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, salI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, salI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, salI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, salI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, salI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, salI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, salI_eReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI1) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI1]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, shlI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, shlI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, shlI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, shlI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, shlI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, shlI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, shlI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, shlI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, shlI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, shlI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, shlI_eReg_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI_16) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI_16];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI__LOADI_MEMORY__IMMI_16, _LShiftI__LoadI_memory__immI_16_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI_24) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI_24];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI__LOADI_MEMORY__IMMI_24, _LShiftI__LoadI_memory__immI_24_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADUS_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI_24) ) {
      unsigned int c = _kids[0]->_cost[_LOADUS_MEMORY_]+_kids[1]->_cost[IMMI_24];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI__LOADUS_MEMORY__IMMI_24, _LShiftI__LoadUS_memory__immI_24_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADS_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI_24) ) {
      unsigned int c = _kids[0]->_cost[_LOADS_MEMORY_]+_kids[1]->_cost[IMMI_24];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI__LOADS_MEMORY__IMMI_24, _LShiftI__LoadS_memory__immI_24_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI2) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI2];
        DFA_PRODUCTION__SET_VALID(_LSHIFTI_EREGI_IMMI2, _LShiftI_eRegI_immI2_rule, c)
    }
}
void  State::_sub_Op_LShiftL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], ECXREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[ECXREGI]+500+200;
        DFA_PRODUCTION__SET_VALID(EREGL, salL_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
        DFA_PRODUCTION__SET_VALID(EADXREGL, salL_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(EBCXREGL, salL_eReg_CL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], IMMI_32_63) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[IMMI_32_63]+300;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, shlL_eReg_32_63_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, shlL_eReg_32_63_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, shlL_eReg_32_63_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], IMMI_1_31) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[IMMI_1_31]+200;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, shlL_eReg_1_31_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, shlL_eReg_1_31_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, shlL_eReg_1_31_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], IMMI_3) &&
        (
#line 9698 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseNewLongLShift
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[IMMI_3]+100;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, shlL_eReg_3_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, shlL_eReg_3_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, shlL_eReg_3_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], IMMI_2) &&
        (
#line 9679 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseNewLongLShift
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[IMMI_2]+100;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, shlL_eReg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, shlL_eReg_2_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, shlL_eReg_2_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], IMMI_1) &&
        (
#line 9664 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseNewLongLShift
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[IMMI_1]+100;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, shlL_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, shlL_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, shlL_eReg_1_rule, c)
      }
    }
}
void  State::_sub_Op_LoadB(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY];
        DFA_PRODUCTION__SET_VALID(_LOADB_MEMORY_, _LoadB_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(XREGI, loadB_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGI, loadB_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(EAXREGI, loadB_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, loadB_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, loadB_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, loadB_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, loadB_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, loadB_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, loadB_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, loadB_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, loadB_rule, c)
    }
}
void  State::_sub_Op_LoadUB(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY];
        DFA_PRODUCTION__SET_VALID(_LOADUB_MEMORY_, _LoadUB_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(XREGI, loadUB_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGI, loadUB_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(EAXREGI, loadUB_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, loadUB_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, loadUB_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, loadUB_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, loadUB_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, loadUB_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, loadUB_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, loadUB_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, loadUB_rule, c)
    }
}
void  State::_sub_Op_LoadUS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY];
        DFA_PRODUCTION__SET_VALID(_LOADUS_MEMORY_, _LoadUS_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(EREGI, loadUS_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, loadUS_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, loadUS_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, loadUS_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, loadUS_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, loadUS_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, loadUS_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, loadUS_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, loadUS_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, loadUS_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, loadUS_rule, c)
    }
}
void  State::_sub_Op_LoadD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY];
        DFA_PRODUCTION__SET_VALID(_LOADD_MEMORY_, _LoadD_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 7026 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2 && !UseXmmLoadAndClearUpper
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+145;
        DFA_PRODUCTION__SET_VALID(REGXD, loadXD_partial_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, loadXD_partial_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, loadXD_partial_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 7017 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2 && UseXmmLoadAndClearUpper
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+145;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, loadXD_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, loadXD_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, loadXD_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 7003 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+150;
        DFA_PRODUCTION__SET_VALID(REGD, loadD_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR1, loadD_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR2, loadD_rule, c)
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, loadD_rule, c)
    }
}
void  State::_sub_Op_LoadF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY];
        DFA_PRODUCTION__SET_VALID(_LOADF_MEMORY_, _LoadF_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 7047 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+150;
        DFA_PRODUCTION__SET_VALID(REGF, loadF_rule, c)
        DFA_PRODUCTION__SET_VALID(REGFPR1, loadF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 7037 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+145;
        DFA_PRODUCTION__SET_VALID(REGX, loadX_rule, c)
    }
}
void  State::_sub_Op_LoadI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(EREGI, loadI_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, loadI_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, loadI_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, loadI_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, loadI_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, loadI_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, loadI_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, loadI_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, loadI_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, loadI_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, loadI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY];
        DFA_PRODUCTION__SET_VALID(_LOADI_MEMORY_, _LoadI_memory__rule, c)
    }
}
void  State::_sub_Op_LoadUI2L(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+250;
        DFA_PRODUCTION__SET_VALID(EREGL, loadUI2L_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
        DFA_PRODUCTION__SET_VALID(EADXREGL, loadUI2L_rule, c)
        DFA_PRODUCTION__SET_VALID(EBCXREGL, loadUI2L_rule, c)
    }
}
void  State::_sub_Op_LoadKlass(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(EREGP, loadKlass_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(ANYREGP, loadKlass_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGP, loadKlass_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, loadKlass_rule, c+100)
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, loadKlass_rule, c+100+100)
        DFA_PRODUCTION__SET_VALID(EBXREGP, loadKlass_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGP, loadKlass_rule, c)
        DFA_PRODUCTION__SET_VALID(PREGP, loadKlass_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGP, loadKlass_rule, c)
        DFA_PRODUCTION__SET_VALID(NABXREGP, loadKlass_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGP, loadKlass_rule, c)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, loadKlass_rule, c+100)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, loadKlass_rule, c+100)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c+100)
        DFA_PRODUCTION__SET_VALID(EDIREGP, loadKlass_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, loadKlass_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c)
    }
}
void  State::_sub_Op_LoadL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], LOAD_LONG_MEMORY) ) {
      unsigned int c = _kids[0]->_cost[LOAD_LONG_MEMORY];
        DFA_PRODUCTION__SET_VALID(_LOADL_LOAD_LONG_MEMORY_, _LoadL_load_long_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 6955 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2 && ((LoadLNode*)n)->require_atomic_access()
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+160;
        DFA_PRODUCTION__SET_VALID(EREGL, loadLX_reg_volatile_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
        DFA_PRODUCTION__SET_VALID(EADXREGL, loadLX_reg_volatile_rule, c)
        DFA_PRODUCTION__SET_VALID(EBCXREGL, loadLX_reg_volatile_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 6944 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2 && ((LoadLNode*)n)->require_atomic_access()
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+180;
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, loadLX_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c+200) {
        DFA_PRODUCTION__SET_VALID(EREGL, loadSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c+200) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, loadSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c+200) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, loadSSL_rule, c+200)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 6933 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1 && ((LoadLNode*)n)->require_atomic_access()
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+200;
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, loadL_volatile_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c+200) {
        DFA_PRODUCTION__SET_VALID(EREGL, loadSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c+200) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, loadSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c+200) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, loadSSL_rule, c+200)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], LOAD_LONG_MEMORY) &&
        (
#line 6912 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
!((LoadLNode*)n)->require_atomic_access()
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[LOAD_LONG_MEMORY]+250;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, loadL_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, loadL_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, loadL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY];
        DFA_PRODUCTION__SET_VALID(_LOADL_MEMORY_, _LoadL_memory__rule, c)
    }
}
void  State::_sub_Op_LoadPLocked(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(EREGP, loadPLocked_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(ANYREGP, loadPLocked_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGP, loadPLocked_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, loadPLocked_rule, c+100)
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, loadPLocked_rule, c+100+100)
        DFA_PRODUCTION__SET_VALID(EBXREGP, loadPLocked_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGP, loadPLocked_rule, c)
        DFA_PRODUCTION__SET_VALID(PREGP, loadPLocked_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGP, loadPLocked_rule, c)
        DFA_PRODUCTION__SET_VALID(NABXREGP, loadPLocked_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGP, loadPLocked_rule, c)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, loadPLocked_rule, c+100)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, loadPLocked_rule, c+100)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c+100)
        DFA_PRODUCTION__SET_VALID(EDIREGP, loadPLocked_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, loadPLocked_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c)
    }
}
void  State::_sub_Op_LoadLLocked(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], LOAD_LONG_MEMORY) &&
        (
#line 8396 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[LOAD_LONG_MEMORY]+160;
        DFA_PRODUCTION__SET_VALID(EREGL, loadLX_reg_Locked_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
        DFA_PRODUCTION__SET_VALID(EADXREGL, loadLX_reg_Locked_rule, c)
        DFA_PRODUCTION__SET_VALID(EBCXREGL, loadLX_reg_Locked_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], LOAD_LONG_MEMORY) &&
        (
#line 8385 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[LOAD_LONG_MEMORY]+180;
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, loadLX_Locked_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c+200) {
        DFA_PRODUCTION__SET_VALID(EREGL, loadSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c+200) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, loadSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c+200) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, loadSSL_rule, c+200)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], LOAD_LONG_MEMORY) &&
        (
#line 8374 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[LOAD_LONG_MEMORY]+200;
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, loadLLocked_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c+200) {
        DFA_PRODUCTION__SET_VALID(EREGL, loadSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c+200) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, loadSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c+200) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, loadSSL_rule, c+200)
      }
    }
}
void  State::_sub_Op_LoadP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY];
        DFA_PRODUCTION__SET_VALID(_LOADP_MEMORY_, _LoadP_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(EREGP, loadP_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(ANYREGP, loadP_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGP, loadP_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, loadP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, loadP_rule, c+100+100)
        DFA_PRODUCTION__SET_VALID(EBXREGP, loadP_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGP, loadP_rule, c)
        DFA_PRODUCTION__SET_VALID(PREGP, loadP_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGP, loadP_rule, c)
        DFA_PRODUCTION__SET_VALID(NABXREGP, loadP_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGP, loadP_rule, c)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, loadP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, loadP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c+100)
        DFA_PRODUCTION__SET_VALID(EDIREGP, loadP_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, loadP_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c)
    }
}
void  State::_sub_Op_LoadRange(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(EREGI, loadRange_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, loadRange_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, loadRange_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, loadRange_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, loadRange_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, loadRange_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, loadRange_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, loadRange_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, loadRange_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, loadRange_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, loadRange_rule, c)
    }
}
void  State::_sub_Op_LoadS(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY];
        DFA_PRODUCTION__SET_VALID(_LOADS_MEMORY_, _LoadS_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(EREGI, loadS_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, loadS_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, loadS_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, loadS_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, loadS_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, loadS_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, loadS_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, loadS_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, loadS_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, loadS_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, loadS_rule, c)
    }
}
void  State::_sub_Op_LogD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGXD) &&
        (
#line 10815 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+100;
        DFA_PRODUCTION__SET_VALID(REGXD, logXD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, logXD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, logXD_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGDPR1) &&
        (
#line 10797 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGDPR1]+100;
        DFA_PRODUCTION__SET_VALID(REGDPR1, logD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGD, logD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR2, logD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, logD_reg_rule, c)
    }
}
void  State::_sub_Op_Log10D(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGXD) &&
        (
#line 10780 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+100;
        DFA_PRODUCTION__SET_VALID(REGXD, log10XD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, log10XD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, log10XD_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGDPR1) &&
        (
#line 10762 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGDPR1]+100;
        DFA_PRODUCTION__SET_VALID(REGDPR1, log10D_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGD, log10D_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR2, log10D_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, log10D_reg_rule, c)
    }
}
void  State::_sub_Op_MaxI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[EREGI]+300;
        DFA_PRODUCTION__SET_VALID(EREGI, maxI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, maxI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, maxI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, maxI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, maxI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, maxI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, maxI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, maxI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, maxI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, maxI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, maxI_eReg_rule, c)
    }
}
void  State::_sub_Op_MemBarAcquire(const Node *n){
    if(         (
#line 7808 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
Matcher::prior_fast_lock(n)
#line 999999
) ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, membar_acquire_lock_rule, c)
    }
    {
      unsigned int c = 400;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, membar_acquire_rule, c)
      }
    }
}
void  State::_sub_Op_MemBarRelease(const Node *n){
    if(         (
#line 7829 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
Matcher::post_fast_unlock(n)
#line 999999
) ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, membar_release_lock_rule, c)
    }
    {
      unsigned int c = 400;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, membar_release_rule, c)
      }
    }
}
void  State::_sub_Op_MemBarVolatile(const Node *n){
    if(         (
#line 7859 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
Matcher::post_store_load_barrier(n)
#line 999999
) ) {
      unsigned int c = 0;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, unnecessary_membar_volatile_rule, c)
    }
    {
      unsigned int c = 400;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, membar_volatile_rule, c)
      }
    }
}
void  State::_sub_Op_MinI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[EREGI]+300;
        DFA_PRODUCTION__SET_VALID(EREGI, minI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, minI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, minI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, minI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, minI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, minI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, minI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, minI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, minI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, minI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, minI_eReg_rule, c)
    }
}
void  State::_sub_Op_ModD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGXD) && STATE__VALID_CHILD(_kids[1], REGXD) &&
        (
#line 10487 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+_kids[1]->_cost[REGXD]+250;
        DFA_PRODUCTION__SET_VALID(REGXD, modXD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, modXD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, modXD_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 10473 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD]+250;
        DFA_PRODUCTION__SET_VALID(REGD, modD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR1, modD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR2, modD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, modD_reg_rule, c)
    }
}
void  State::_sub_Op_ModF(const Node *n){
    bool Compile__current____select_24_bit_instr__ = Compile::current()->select_24_bit_instr();
    if( STATE__VALID_CHILD(_kids[0], REGX) && STATE__VALID_CHILD(_kids[1], REGX) &&
        (
#line 11572 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+_kids[1]->_cost[REGX]+250;
        DFA_PRODUCTION__SET_VALID(REGX, modX_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 11559 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE==0 && !Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF]+100;
        DFA_PRODUCTION__SET_VALID(REGF, modF_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGFPR1, modF_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 11545 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE==0 && Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF]+100;
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, modF24_reg_rule, c)
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGF, loadSSF_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, loadSSF_rule, c+125)
      }
    }
}
void  State::_sub_Op_ModI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EAXREGI) && STATE__VALID_CHILD(_kids[1], ECXREGI) ) {
      unsigned int c = _kids[0]->_cost[EAXREGI]+_kids[1]->_cost[ECXREGI]+300;
        DFA_PRODUCTION__SET_VALID(EDXREGI, modI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGI, modI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, modI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, modI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, modI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, modI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, modI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, modI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, modI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, modI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, modI_eReg_rule, c)
    }
}
void  State::_sub_Op_ModL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], EREGL) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[EREGL]+10000;
        DFA_PRODUCTION__SET_VALID(EADXREGL, modL_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGL, modL_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
        DFA_PRODUCTION__SET_VALID(EBCXREGL, modL_eReg_rule, c)
    }
}
void  State::_sub_Op_MoveI2F(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGI) &&
        (
#line 12192 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+85;
        DFA_PRODUCTION__SET_VALID(REGX, MoveI2F_reg_reg_sse_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], STACKSLOTI) &&
        (
#line 12181 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[STACKSLOTI]+95;
      if (STATE__NOT_YET_VALID(REGX) || _cost[REGX] > c) {
        DFA_PRODUCTION__SET_VALID(REGX, MoveI2F_stack_reg_sse_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], STACKSLOTI) &&
        (
#line 12167 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[STACKSLOTI]+125;
        DFA_PRODUCTION__SET_VALID(REGF, MoveI2F_stack_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGFPR1, MoveI2F_stack_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+100;
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, MoveI2F_reg_stack_rule, c)
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGF, loadSSF_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, loadSSF_rule, c+125)
      }
    }
}
void  State::_sub_Op_MoveF2I(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGX) &&
        (
#line 12145 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+85;
        DFA_PRODUCTION__SET_VALID(EREGI, MoveF2I_reg_reg_sse_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, MoveF2I_reg_reg_sse_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, MoveF2I_reg_reg_sse_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, MoveF2I_reg_reg_sse_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, MoveF2I_reg_reg_sse_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, MoveF2I_reg_reg_sse_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, MoveF2I_reg_reg_sse_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, MoveF2I_reg_reg_sse_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, MoveF2I_reg_reg_sse_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, MoveF2I_reg_reg_sse_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, MoveF2I_reg_reg_sse_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGX) &&
        (
#line 12134 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+95;
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, MoveF2I_reg_stack_sse_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(EREGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(XREGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, loadSSI_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) &&
        (
#line 12123 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+125;
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, MoveF2I_reg_stack_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(EREGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(XREGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, loadSSI_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c+125) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, loadSSI_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], STACKSLOTF) ) {
      unsigned int c = _kids[0]->_cost[STACKSLOTF]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, MoveF2I_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, MoveF2I_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, MoveF2I_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, MoveF2I_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, MoveF2I_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, MoveF2I_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, MoveF2I_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, MoveF2I_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, MoveF2I_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, MoveF2I_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, MoveF2I_stack_reg_rule, c)
      }
    }
}
void  State::_sub_Op_MoveL2D(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGL) &&
        (
#line 12299 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+85;
        DFA_PRODUCTION__SET_VALID(REGXD, MoveL2D_reg_reg_sse_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, MoveL2D_reg_reg_sse_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, MoveL2D_reg_reg_sse_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], STACKSLOTL) &&
        (
#line 12288 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2 && !UseXmmLoadAndClearUpper
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[STACKSLOTL]+95;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, MoveL2D_stack_reg_sse_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, MoveL2D_stack_reg_sse_partial_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, MoveL2D_stack_reg_sse_partial_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], STACKSLOTL) &&
        (
#line 12277 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2 && UseXmmLoadAndClearUpper
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[STACKSLOTL]+95;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, MoveL2D_stack_reg_sse_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, MoveL2D_stack_reg_sse_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, MoveL2D_stack_reg_sse_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], STACKSLOTL) &&
        (
#line 12262 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[STACKSLOTL]+125;
        DFA_PRODUCTION__SET_VALID(REGD, MoveL2D_stack_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR1, MoveL2D_stack_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR2, MoveL2D_stack_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, MoveL2D_stack_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+200;
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, MoveL2D_reg_stack_rule, c)
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGD, loadSSD_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGDPR1) || _cost[REGDPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGDPR1, loadSSD_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGDPR2) || _cost[REGDPR2] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGDPR2, loadSSD_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGNOTDPR1) || _cost[REGNOTDPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, loadSSD_rule, c+125)
      }
    }
}
void  State::_sub_Op_MoveD2L(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGXD) &&
        (
#line 12237 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+85;
        DFA_PRODUCTION__SET_VALID(EREGL, MoveD2L_reg_reg_sse_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
        DFA_PRODUCTION__SET_VALID(EADXREGL, MoveD2L_reg_reg_sse_rule, c)
        DFA_PRODUCTION__SET_VALID(EBCXREGL, MoveD2L_reg_reg_sse_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGXD) &&
        (
#line 12226 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+95;
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, MoveD2L_reg_stack_sse_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c+200) {
        DFA_PRODUCTION__SET_VALID(EREGL, loadSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c+200) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, loadSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c+200) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, loadSSL_rule, c+200)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) &&
        (
#line 12215 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+125;
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, MoveD2L_reg_stack_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c+200) {
        DFA_PRODUCTION__SET_VALID(EREGL, loadSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c+200) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, loadSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c+200) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, loadSSL_rule, c+200)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], STACKSLOTD) ) {
      unsigned int c = _kids[0]->_cost[STACKSLOTD]+250;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, MoveD2L_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, MoveD2L_stack_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, MoveD2L_stack_reg_rule, c)
      }
    }
}
void  State::_sub_Op_MulD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD];
        DFA_PRODUCTION__SET_VALID(_MULD_REGD_REGD, _MulD_regD_regD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADD_MEMORY_) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 10355 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE<=1 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_LOADD_MEMORY_]+_kids[1]->_cost[REGD]+200;
        DFA_PRODUCTION__SET_VALID(REGD, mulD_reg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR1, mulD_reg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR2, mulD_reg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, mulD_reg_mem_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], _LOADD_MEMORY_) &&
        (
#line 10355 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE<=1 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[_LOADD_MEMORY_]+200;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, mulD_reg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR1) || _cost[REGDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR1, mulD_reg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR2) || _cost[REGDPR2] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR2, mulD_reg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGNOTDPR1) || _cost[REGNOTDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, mulD_reg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], IMMD) &&
        (
#line 10342 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE<=1 && _kids[1]->_leaf->getd() != 0.0 && _kids[1]->_leaf->getd() != 1.0 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[IMMD]+200;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, mulD_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR1) || _cost[REGDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR1, mulD_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR2) || _cost[REGDPR2] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR2, mulD_reg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGNOTDPR1) || _cost[REGNOTDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, mulD_reg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGDPR1) && STATE__VALID_CHILD(_kids[1], REGNOTDPR1) &&
        (
#line 10323 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE<=1 && Compile::current()->has_method() && Compile::current()->method()->is_strict() 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGDPR1]+_kids[1]->_cost[REGNOTDPR1]+1;
      if (STATE__NOT_YET_VALID(REGDPR1) || _cost[REGDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR1, strictfp_mulD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, strictfp_mulD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR2) || _cost[REGDPR2] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR2, strictfp_mulD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGNOTDPR1) || _cost[REGNOTDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, strictfp_mulD_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 10303 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, mulD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR1) || _cost[REGDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR1, mulD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR2) || _cost[REGDPR2] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR2, mulD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGNOTDPR1) || _cost[REGNOTDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, mulD_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADD_MEMORY_) && STATE__VALID_CHILD(_kids[1], REGXD) &&
        (
#line 10268 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_LOADD_MEMORY_]+_kids[1]->_cost[REGXD]+100;
        DFA_PRODUCTION__SET_VALID(REGXD, mulXD_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, mulXD_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, mulXD_mem_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGXD) && STATE__VALID_CHILD(_kids[1], _LOADD_MEMORY_) &&
        (
#line 10268 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+_kids[1]->_cost[_LOADD_MEMORY_]+100;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, mulXD_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, mulXD_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, mulXD_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGXD) && STATE__VALID_CHILD(_kids[1], IMMXD) &&
        (
#line 10260 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+_kids[1]->_cost[IMMXD]+100;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, mulXD_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, mulXD_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, mulXD_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGXD) && STATE__VALID_CHILD(_kids[1], REGXD) &&
        (
#line 10252 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+_kids[1]->_cost[REGXD]+100;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, mulXD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, mulXD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, mulXD_reg_rule, c)
      }
    }
}
void  State::_sub_Op_MulF(const Node *n){
    bool Compile__current____select_24_bit_instr__ = Compile::current()->select_24_bit_instr();
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF];
        DFA_PRODUCTION__SET_VALID(_MULF_REGF_REGF, _MulF_regF_regF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], _LOADF_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[_LOADF_MEMORY_];
        DFA_PRODUCTION__SET_VALID(_MULF_REGF__LOADF_MEMORY_, _MulF_regF__LoadF_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADF_MEMORY_) && STATE__VALID_CHILD(_kids[1], REGF) ) {
      unsigned int c = _kids[0]->_cost[_LOADF_MEMORY_]+_kids[1]->_cost[REGF];
        DFA_PRODUCTION__SET_VALID(_MULF__LOADF_MEMORY__REGF, _MulF__LoadF_memory__regF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], IMMF) &&
        (
#line 11433 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && !Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[IMMF]+100;
        DFA_PRODUCTION__SET_VALID(REGF, mulF_reg_imm_rule, c)
        DFA_PRODUCTION__SET_VALID(REGFPR1, mulF_reg_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], IMMF) &&
        (
#line 11420 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[IMMF]+100;
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, mulF24_reg_imm_rule, c)
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGF, loadSSF_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, loadSSF_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], MEMORY) &&
        (
#line 11406 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[MEMORY]+100;
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, mulF24_mem_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGF, loadSSF_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, loadSSF_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADF_MEMORY_) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 11393 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && !Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_LOADF_MEMORY_]+_kids[1]->_cost[REGF]+100;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, mulF_reg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, mulF_reg_mem_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], _LOADF_MEMORY_) &&
        (
#line 11393 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && !Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[_LOADF_MEMORY_]+100;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, mulF_reg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, mulF_reg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADF_MEMORY_) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 11377 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_LOADF_MEMORY_]+_kids[1]->_cost[REGF]+100;
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, mulF24_reg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGF, loadSSF_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, loadSSF_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], _LOADF_MEMORY_) &&
        (
#line 11377 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[_LOADF_MEMORY_]+100;
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, mulF24_reg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGF, loadSSF_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, loadSSF_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 11360 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && !Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF]+100;
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c) {
        DFA_PRODUCTION__SET_VALID(REGF, mulF_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, mulF_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 11345 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF]+100;
      if (STATE__NOT_YET_VALID(STACKSLOTF) || _cost[STACKSLOTF] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, mulF24_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGF, loadSSF_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, loadSSF_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADF_MEMORY_) && STATE__VALID_CHILD(_kids[1], REGX) &&
        (
#line 11140 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_LOADF_MEMORY_]+_kids[1]->_cost[REGX]+100;
        DFA_PRODUCTION__SET_VALID(REGX, mulX_mem_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGX) && STATE__VALID_CHILD(_kids[1], _LOADF_MEMORY_) &&
        (
#line 11140 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+_kids[1]->_cost[_LOADF_MEMORY_]+100;
      if (STATE__NOT_YET_VALID(REGX) || _cost[REGX] > c) {
        DFA_PRODUCTION__SET_VALID(REGX, mulX_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGX) && STATE__VALID_CHILD(_kids[1], IMMXF) &&
        (
#line 11132 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+_kids[1]->_cost[IMMXF]+100;
      if (STATE__NOT_YET_VALID(REGX) || _cost[REGX] > c) {
        DFA_PRODUCTION__SET_VALID(REGX, mulX_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGX) && STATE__VALID_CHILD(_kids[1], REGX) &&
        (
#line 11124 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+_kids[1]->_cost[REGX]+100;
      if (STATE__NOT_YET_VALID(REGX) || _cost[REGX] > c) {
        DFA_PRODUCTION__SET_VALID(REGX, mulX_reg_rule, c)
      }
    }
}
void  State::_sub_Op_MulI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[EREGI]+350;
        DFA_PRODUCTION__SET_VALID(EREGI, mulI_0_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, mulI_0_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, mulI_0_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, mulI_0_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, mulI_0_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, mulI_0_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, mulI_0_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, mulI_0_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, mulI_0_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, mulI_0_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, mulI_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[_LOADI_MEMORY_]+350;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, mulI_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, mulI_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, mulI_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, mulI_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, mulI_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, mulI_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, mulI_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, mulI_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, mulI_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, mulI_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, mulI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI]+300;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, mulI_mem_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, mulI_mem_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, mulI_mem_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, mulI_mem_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, mulI_mem_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, mulI_mem_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, mulI_mem_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, mulI_mem_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, mulI_mem_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, mulI_mem_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, mulI_mem_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI]+300;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, mulI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, mulI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, mulI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, mulI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, mulI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, mulI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, mulI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, mulI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, mulI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, mulI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, mulI_eReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[EREGI]+300;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, mulI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, mulI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, mulI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, mulI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, mulI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, mulI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, mulI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, mulI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, mulI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, mulI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, mulI_eReg_rule, c)
      }
    }
}
void  State::_sub_Op_MulL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EADXREGL) && STATE__VALID_CHILD(_kids[1], IMML_127) ) {
      unsigned int c = _kids[0]->_cost[EADXREGL]+_kids[1]->_cost[IMML_127]+2*100+2*400;
        DFA_PRODUCTION__SET_VALID(EADXREGL, mulL_eReg_con_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGL, mulL_eReg_con_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
        DFA_PRODUCTION__SET_VALID(EBCXREGL, mulL_eReg_con_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EADXREGL) && STATE__VALID_CHILD(_kids[1], EREGL) &&
        (
#line 8744 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
is_operand_hi32_zero(n->in(1)) && is_operand_hi32_zero(n->in(2))
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EADXREGL]+_kids[1]->_cost[EREGL]+1*400;
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, mulL_eReg_hi0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, mulL_eReg_hi0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, mulL_eReg_hi0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EADXREGL) && STATE__VALID_CHILD(_kids[1], EREGL) &&
        (
#line 8723 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
is_operand_hi32_zero(n->in(2))
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EADXREGL]+_kids[1]->_cost[EREGL]+2*100+2*400;
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, mulL_eReg_rhi0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, mulL_eReg_rhi0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, mulL_eReg_rhi0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EADXREGL) && STATE__VALID_CHILD(_kids[1], EREGL) &&
        (
#line 8702 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
is_operand_hi32_zero(n->in(1))
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EADXREGL]+_kids[1]->_cost[EREGL]+2*100+2*400;
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, mulL_eReg_lhi0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, mulL_eReg_lhi0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, mulL_eReg_lhi0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EADXREGL) && STATE__VALID_CHILD(_kids[1], EREGL) ) {
      unsigned int c = _kids[0]->_cost[EADXREGL]+_kids[1]->_cost[EREGL]+4*100+3*400;
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, mulL_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, mulL_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, mulL_eReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDL__CONVI2L_NADXREGI__IMML_32BITS) && STATE__VALID_CHILD(_kids[1], _ANDL__CONVI2L_EAXREGI__IMML_32BITS) &&
        /*mask*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_ANDL__CONVI2L_NADXREGI__IMML_32BITS]+_kids[1]->_cost[_ANDL__CONVI2L_EAXREGI__IMML_32BITS]+300;
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, mulIS_eReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, mulIS_eReg_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, mulIS_eReg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ANDL__CONVI2L_EAXREGI__IMML_32BITS) && STATE__VALID_CHILD(_kids[1], _ANDL__CONVI2L_NADXREGI__IMML_32BITS) &&
        /*mask*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_ANDL__CONVI2L_EAXREGI__IMML_32BITS]+_kids[1]->_cost[_ANDL__CONVI2L_NADXREGI__IMML_32BITS]+300;
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, mulIS_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, mulIS_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, mulIS_eReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVI2L_NADXREGI_) && STATE__VALID_CHILD(_kids[1], _CONVI2L_EAXREGI_) ) {
      unsigned int c = _kids[0]->_cost[_CONVI2L_NADXREGI_]+_kids[1]->_cost[_CONVI2L_EAXREGI_]+300;
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, mulI2L_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, mulI2L_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, mulI2L_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVI2L_EAXREGI_) && STATE__VALID_CHILD(_kids[1], _CONVI2L_NADXREGI_) ) {
      unsigned int c = _kids[0]->_cost[_CONVI2L_EAXREGI_]+_kids[1]->_cost[_CONVI2L_NADXREGI_]+300;
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, mulI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, mulI2L_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, mulI2L_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EADXREGL_LOW_ONLY) && STATE__VALID_CHILD(_kids[1], _CONVI2L_NADXREGI_) ) {
      unsigned int c = _kids[0]->_cost[EADXREGL_LOW_ONLY]+_kids[1]->_cost[_CONVI2L_NADXREGI_];
        DFA_PRODUCTION__SET_VALID(_MULL_EADXREGL_LOW_ONLY__CONVI2L_NADXREGI_, _MulL_eADXRegL_low_only__ConvI2L_nadxRegI__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVI2L_NADXREGI_) && STATE__VALID_CHILD(_kids[1], EADXREGL_LOW_ONLY) ) {
      unsigned int c = _kids[0]->_cost[_CONVI2L_NADXREGI_]+_kids[1]->_cost[EADXREGL_LOW_ONLY];
        DFA_PRODUCTION__SET_VALID(_MULL__CONVI2L_NADXREGI__EADXREGL_LOW_ONLY, _MulL__ConvI2L_nadxRegI__eADXRegL_low_only_rule, c)
    }
}
void  State::_sub_Op_NegD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGXD) &&
        (
#line 10094 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+100;
        DFA_PRODUCTION__SET_VALID(REGXD, negXD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, negXD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, negXD_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGDPR1) &&
        (
#line 10084 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGDPR1]+100;
        DFA_PRODUCTION__SET_VALID(REGDPR1, negD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGD, negD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR2, negD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, negD_reg_rule, c)
    }
}
void  State::_sub_Op_NegF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGX) &&
        (
#line 11235 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+100;
        DFA_PRODUCTION__SET_VALID(REGX, negX_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGFPR1) &&
        (
#line 11225 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGFPR1]+100;
        DFA_PRODUCTION__SET_VALID(REGFPR1, negF_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGF, negF_reg_rule, c)
    }
}
void  State::_sub_Op_OrI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_NCXREGI__SUBI_IMMI_32_ECXREGI) && STATE__VALID_CHILD(_kids[1], _URSHIFTI_NCXREGI_ECXREGI) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*shift*/(_kids[0]->_kids[1]->_kids[1]->_leaf == _kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_NCXREGI__SUBI_IMMI_32_ECXREGI]+_kids[1]->_cost[_URSHIFTI_NCXREGI_ECXREGI]+100;
        DFA_PRODUCTION__SET_VALID(NCXREGI, rorI_eReg_Var_C32_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTI_NCXREGI_ECXREGI) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_NCXREGI__SUBI_IMMI_32_ECXREGI) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*shift*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTI_NCXREGI_ECXREGI]+_kids[1]->_cost[_LSHIFTI_NCXREGI__SUBI_IMMI_32_ECXREGI]+100;
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, rorI_eReg_Var_C32_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_NCXREGI__SUBI_IMMI0_ECXREGI) && STATE__VALID_CHILD(_kids[1], _URSHIFTI_NCXREGI_ECXREGI) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*shift*/(_kids[0]->_kids[1]->_kids[1]->_leaf == _kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_NCXREGI__SUBI_IMMI0_ECXREGI]+_kids[1]->_cost[_URSHIFTI_NCXREGI_ECXREGI]+100;
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, rorI_eReg_Var_C0_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTI_NCXREGI_ECXREGI) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_NCXREGI__SUBI_IMMI0_ECXREGI) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*shift*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTI_NCXREGI_ECXREGI]+_kids[1]->_cost[_LSHIFTI_NCXREGI__SUBI_IMMI0_ECXREGI]+100;
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, rorI_eReg_Var_C0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_EREGI_IMMI_M1) && STATE__VALID_CHILD(_kids[1], _URSHIFTI_EREGI_IMMI1) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_EREGI_IMMI_M1]+_kids[1]->_cost[_URSHIFTI_EREGI_IMMI1]+100;
        DFA_PRODUCTION__SET_VALID(EREGI, rorI_eReg_i1_0_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, rorI_eReg_i1_0_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, rorI_eReg_i1_0_rule, c)
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, rorI_eReg_i1_0_rule, c)
      }
        DFA_PRODUCTION__SET_VALID(EBXREGI, rorI_eReg_i1_0_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, rorI_eReg_i1_0_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, rorI_eReg_i1_0_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, rorI_eReg_i1_0_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, rorI_eReg_i1_0_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, rorI_eReg_i1_0_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, rorI_eReg_i1_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTI_EREGI_IMMI1) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_EREGI_IMMI_M1) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTI_EREGI_IMMI1]+_kids[1]->_cost[_LSHIFTI_EREGI_IMMI_M1]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, rorI_eReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, rorI_eReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, rorI_eReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, rorI_eReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, rorI_eReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, rorI_eReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, rorI_eReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, rorI_eReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, rorI_eReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, rorI_eReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, rorI_eReg_i1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTI_NCXREGI__SUBI_IMMI_32_ECXREGI) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_NCXREGI_ECXREGI) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*shift*/(_kids[0]->_kids[1]->_kids[1]->_leaf == _kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTI_NCXREGI__SUBI_IMMI_32_ECXREGI]+_kids[1]->_cost[_LSHIFTI_NCXREGI_ECXREGI]+100;
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, rolI_eReg_Var_C32_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_NCXREGI_ECXREGI) && STATE__VALID_CHILD(_kids[1], _URSHIFTI_NCXREGI__SUBI_IMMI_32_ECXREGI) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*shift*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_NCXREGI_ECXREGI]+_kids[1]->_cost[_URSHIFTI_NCXREGI__SUBI_IMMI_32_ECXREGI]+100;
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, rolI_eReg_Var_C32_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTI_NCXREGI__SUBI_IMMI0_ECXREGI) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_NCXREGI_ECXREGI) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*shift*/(_kids[0]->_kids[1]->_kids[1]->_leaf == _kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTI_NCXREGI__SUBI_IMMI0_ECXREGI]+_kids[1]->_cost[_LSHIFTI_NCXREGI_ECXREGI]+100;
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, rolI_eReg_Var_C0_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_NCXREGI_ECXREGI) && STATE__VALID_CHILD(_kids[1], _URSHIFTI_NCXREGI__SUBI_IMMI0_ECXREGI) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) && /*shift*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_kids[1]->_kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_NCXREGI_ECXREGI]+_kids[1]->_cost[_URSHIFTI_NCXREGI__SUBI_IMMI0_ECXREGI]+100;
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, rolI_eReg_Var_C0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTI_EREGI_IMMI8) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_EREGI_IMMI8) &&
        (
#line 9193 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
  0 == ((n->in(1)->in(2)->get_int() + n->in(2)->in(2)->get_int()) & 0x1f)
#line 999999
) && /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTI_EREGI_IMMI8]+_kids[1]->_cost[_LSHIFTI_EREGI_IMMI8]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, rolI_eReg_i8_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, rolI_eReg_i8_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, rolI_eReg_i8_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, rolI_eReg_i8_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, rolI_eReg_i8_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, rolI_eReg_i8_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, rolI_eReg_i8_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, rolI_eReg_i8_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, rolI_eReg_i8_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, rolI_eReg_i8_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, rolI_eReg_i8_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_EREGI_IMMI8) && STATE__VALID_CHILD(_kids[1], _URSHIFTI_EREGI_IMMI8) &&
        (
#line 9193 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
  0 == ((n->in(1)->in(2)->get_int() + n->in(2)->in(2)->get_int()) & 0x1f)
#line 999999
) && /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_EREGI_IMMI8]+_kids[1]->_cost[_URSHIFTI_EREGI_IMMI8]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, rolI_eReg_i8_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, rolI_eReg_i8_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, rolI_eReg_i8_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, rolI_eReg_i8_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, rolI_eReg_i8_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, rolI_eReg_i8_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, rolI_eReg_i8_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, rolI_eReg_i8_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, rolI_eReg_i8_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, rolI_eReg_i8_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, rolI_eReg_i8_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _URSHIFTI_EREGI_IMMI_M1) && STATE__VALID_CHILD(_kids[1], _LSHIFTI_EREGI_IMMI1) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_URSHIFTI_EREGI_IMMI_M1]+_kids[1]->_cost[_LSHIFTI_EREGI_IMMI1]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, rolI_eReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, rolI_eReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, rolI_eReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, rolI_eReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, rolI_eReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, rolI_eReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, rolI_eReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, rolI_eReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, rolI_eReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, rolI_eReg_i1_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, rolI_eReg_i1_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_EREGI_IMMI1) && STATE__VALID_CHILD(_kids[1], _URSHIFTI_EREGI_IMMI_M1) &&
        /*dst*/(_kids[0]->_kids[0]->_leaf == _kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_EREGI_IMMI1]+_kids[1]->_cost[_URSHIFTI_EREGI_IMMI_M1]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, rolI_eReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, rolI_eReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, rolI_eReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, rolI_eReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, rolI_eReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, rolI_eReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, rolI_eReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, rolI_eReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, rolI_eReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, rolI_eReg_i1_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, rolI_eReg_i1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI];
        DFA_PRODUCTION__SET_VALID(_ORI__LOADI_MEMORY__IMMI, _OrI__LoadI_memory__immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[_LOADI_MEMORY_];
        DFA_PRODUCTION__SET_VALID(_ORI_EREGI__LOADI_MEMORY_, _OrI_eRegI__LoadI_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[EREGI];
        DFA_PRODUCTION__SET_VALID(_ORI__LOADI_MEMORY__EREGI, _OrI__LoadI_memory__eRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[EREGI]+125;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, orI_eReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, orI_eReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, orI_eReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, orI_eReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, orI_eReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, orI_eReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, orI_eReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, orI_eReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, orI_eReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, orI_eReg_mem_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, orI_eReg_mem_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[_LOADI_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, orI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, orI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, orI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, orI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, orI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, orI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, orI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, orI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, orI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, orI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, orI_eReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, orI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, orI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, orI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, orI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, orI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, orI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, orI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, orI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, orI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, orI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, orI_eReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _CASTP2X_EREGP_) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[_CASTP2X_EREGP_]+_kids[1]->_cost[EREGI]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, orI_eReg_castP2X_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, orI_eReg_castP2X_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, orI_eReg_castP2X_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, orI_eReg_castP2X_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, orI_eReg_castP2X_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, orI_eReg_castP2X_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, orI_eReg_castP2X_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, orI_eReg_castP2X_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, orI_eReg_castP2X_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, orI_eReg_castP2X_0_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, orI_eReg_castP2X_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], _CASTP2X_EREGP_) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[_CASTP2X_EREGP_]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, orI_eReg_castP2X_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, orI_eReg_castP2X_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, orI_eReg_castP2X_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, orI_eReg_castP2X_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, orI_eReg_castP2X_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, orI_eReg_castP2X_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, orI_eReg_castP2X_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, orI_eReg_castP2X_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, orI_eReg_castP2X_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, orI_eReg_castP2X_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, orI_eReg_castP2X_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[EREGI]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, orI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, orI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, orI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, orI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, orI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, orI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, orI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, orI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, orI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, orI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, orI_eReg_rule, c)
      }
    }
}
void  State::_sub_Op_OrL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LOADL_LOAD_LONG_MEMORY_) && STATE__VALID_CHILD(_kids[1], EREGL) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_LOAD_LONG_MEMORY_]+_kids[1]->_cost[EREGL]+125;
        DFA_PRODUCTION__SET_VALID(EREGL, orl_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
        DFA_PRODUCTION__SET_VALID(EADXREGL, orl_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(EBCXREGL, orl_eReg_mem_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], _LOADL_LOAD_LONG_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[_LOADL_LOAD_LONG_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, orl_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, orl_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, orl_eReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], IMML) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[IMML]+100;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, orl_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, orl_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, orl_eReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], EREGL) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[EREGL]+100;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, orl_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, orl_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, orl_eReg_rule, c)
      }
    }
}
void  State::_sub_Op_PartialSubtypeCheck(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], ESIREGP) && STATE__VALID_CHILD(_kids[1], EAXREGP) ) {
      unsigned int c = _kids[0]->_cost[ESIREGP]+_kids[1]->_cost[EAXREGP];
        DFA_PRODUCTION__SET_VALID(_PARTIALSUBTYPECHECK_ESIREGP_EAXREGP, _PartialSubtypeCheck_eSIRegP_eAXRegP_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], ESIREGP) && STATE__VALID_CHILD(_kids[1], EAXREGP) ) {
      unsigned int c = _kids[0]->_cost[ESIREGP]+_kids[1]->_cost[EAXREGP]+1100;
        DFA_PRODUCTION__SET_VALID(EDIREGP, partialSubtypeCheck_rule, c)
        DFA_PRODUCTION__SET_VALID(ANYREGP, partialSubtypeCheck_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGP, partialSubtypeCheck_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(EAXREGP, partialSubtypeCheck_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, partialSubtypeCheck_rule, c+100)
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, partialSubtypeCheck_rule, c+100+100)
        DFA_PRODUCTION__SET_VALID(EBXREGP, partialSubtypeCheck_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGP, partialSubtypeCheck_rule, c)
        DFA_PRODUCTION__SET_VALID(PREGP, partialSubtypeCheck_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGP, partialSubtypeCheck_rule, c)
        DFA_PRODUCTION__SET_VALID(NABXREGP, partialSubtypeCheck_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGP, partialSubtypeCheck_rule, c)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, partialSubtypeCheck_rule, c+100)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, partialSubtypeCheck_rule, c+100)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c+100)
        DFA_PRODUCTION__SET_VALID(INDIRECT, partialSubtypeCheck_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c)
    }
}
void  State::_sub_Op_PopCountI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) &&
        (
#line 6513 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UsePopCountInstruction
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(EREGI, popCountI_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, popCountI_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, popCountI_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, popCountI_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, popCountI_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, popCountI_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, popCountI_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, popCountI_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, popCountI_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, popCountI_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, popCountI_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) &&
        (
#line 6502 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UsePopCountInstruction
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, popCountI_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, popCountI_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, popCountI_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, popCountI_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, popCountI_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, popCountI_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, popCountI_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, popCountI_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, popCountI_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, popCountI_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, popCountI_rule, c)
      }
    }
}
void  State::_sub_Op_PopCountL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LOADL_MEMORY_) &&
        (
#line 6542 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UsePopCountInstruction
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(EREGI, popCountL_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, popCountL_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, popCountL_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, popCountL_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, popCountL_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, popCountL_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, popCountL_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, popCountL_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, popCountL_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, popCountL_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, popCountL_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) &&
        (
#line 6525 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UsePopCountInstruction
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, popCountL_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, popCountL_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, popCountL_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, popCountL_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, popCountL_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, popCountL_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, popCountL_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, popCountL_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, popCountL_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, popCountL_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, popCountL_rule, c)
      }
    }
}
void  State::_sub_Op_PowD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGXD) && STATE__VALID_CHILD(_kids[1], REGXD) &&
        (
#line 10642 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+_kids[1]->_cost[REGXD]+100;
        DFA_PRODUCTION__SET_VALID(REGXD, powXD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, powXD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, powXD_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGDPR1) &&
        (
#line 10606 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGDPR1]+100;
        DFA_PRODUCTION__SET_VALID(REGDPR1, powD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGD, powD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR2, powD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, powD_reg_rule, c)
    }
}
void  State::_sub_Op_PrefetchRead(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 7377 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1 && ReadPrefetchInstr==2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+100;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, prefetchrT2_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 7366 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1 && ReadPrefetchInstr==1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, prefetchrT0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 7355 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1 && ReadPrefetchInstr==0
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, prefetchrNTA_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 7344 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && VM_Version::supports_3dnow() || ReadPrefetchInstr==3
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, prefetchr_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 7334 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && !VM_Version::supports_3dnow()
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY];
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, prefetchr0_rule, c)
      }
    }
}
void  State::_sub_Op_PrefetchWrite(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 7431 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1 && AllocatePrefetchInstr==2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+100;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, prefetchwT2_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 7420 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1 && AllocatePrefetchInstr==1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, prefetchwT0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 7409 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1 && AllocatePrefetchInstr==0
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, prefetchwNTA_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 7398 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && VM_Version::supports_3dnow() || AllocatePrefetchInstr==3
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, prefetchw_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 7388 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && !VM_Version::supports_3dnow()
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY];
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, prefetchw0_rule, c)
      }
    }
}
void  State::_sub_Op_RShiftI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_XREGI_IMMI_16) && STATE__VALID_CHILD(_kids[1], IMMI_16) &&
        /*sixteen*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_XREGI_IMMI_16]+_kids[1]->_cost[IMMI_16]+100;
        DFA_PRODUCTION__SET_VALID(EREGI, i2s_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, i2s_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, i2s_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, i2s_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, i2s_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, i2s_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, i2s_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, i2s_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, i2s_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, i2s_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, i2s_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI_XREGI_IMMI_24) && STATE__VALID_CHILD(_kids[1], IMMI_24) &&
        /*twentyfour*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI_XREGI_IMMI_24]+_kids[1]->_cost[IMMI_24]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, i2b_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, i2b_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, i2b_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, i2b_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, i2b_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, i2b_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, i2b_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, i2b_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, i2b_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, i2b_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, i2b_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], ECXREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[ECXREGI]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, sarI_eReg_CL_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, sarI_eReg_CL_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, sarI_eReg_CL_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, sarI_eReg_CL_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, sarI_eReg_CL_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, sarI_eReg_CL_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, sarI_eReg_CL_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, sarI_eReg_CL_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, sarI_eReg_CL_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, sarI_eReg_CL_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, sarI_eReg_CL_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI8];
        DFA_PRODUCTION__SET_VALID(_RSHIFTI__LOADI_MEMORY__IMMI8, _RShiftI__LoadI_memory__immI8_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, sarI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, sarI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, sarI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, sarI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, sarI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, sarI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, sarI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, sarI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, sarI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, sarI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, sarI_eReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI1) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI1];
        DFA_PRODUCTION__SET_VALID(_RSHIFTI__LOADI_MEMORY__IMMI1, _RShiftI__LoadI_memory__immI1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI1) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI1]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, sarI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, sarI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, sarI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, sarI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, sarI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, sarI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, sarI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, sarI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, sarI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, sarI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, sarI_eReg_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI__LOADI_MEMORY__IMMI_16) && STATE__VALID_CHILD(_kids[1], IMMI_16) &&
        /*sixteen*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI__LOADI_MEMORY__IMMI_16]+_kids[1]->_cost[IMMI_16]+125;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, loadI2S_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, loadI2S_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, loadI2S_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, loadI2S_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, loadI2S_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, loadI2S_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, loadI2S_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, loadI2S_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, loadI2S_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, loadI2S_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, loadI2S_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI__LOADI_MEMORY__IMMI_24) && STATE__VALID_CHILD(_kids[1], IMMI_24) &&
        /*twentyfour*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI__LOADI_MEMORY__IMMI_24]+_kids[1]->_cost[IMMI_24]+125;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, loadI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, loadI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, loadI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, loadI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, loadI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, loadI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, loadI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, loadI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, loadI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, loadI2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, loadI2B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI__LOADUS_MEMORY__IMMI_24) && STATE__VALID_CHILD(_kids[1], IMMI_24) &&
        /*twentyfour*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI__LOADUS_MEMORY__IMMI_24]+_kids[1]->_cost[IMMI_24]+125;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, loadUS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, loadUS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, loadUS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, loadUS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, loadUS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, loadUS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, loadUS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, loadUS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, loadUS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, loadUS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, loadUS2B_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _LSHIFTI__LOADS_MEMORY__IMMI_24) && STATE__VALID_CHILD(_kids[1], IMMI_24) &&
        /*twentyfour*/(_kids[0]->_kids[1]->_leaf == _kids[1]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[_LSHIFTI__LOADS_MEMORY__IMMI_24]+_kids[1]->_cost[IMMI_24]+125;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, loadS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, loadS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, loadS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, loadS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, loadS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, loadS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, loadS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, loadS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, loadS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, loadS2B_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, loadS2B_rule, c)
      }
    }
}
void  State::_sub_Op_RShiftL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], ECXREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[ECXREGI]+600;
        DFA_PRODUCTION__SET_VALID(EREGL, sarL_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
        DFA_PRODUCTION__SET_VALID(EADXREGL, sarL_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(EBCXREGL, sarL_eReg_CL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], IMMI_32_63) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[IMMI_32_63]+300;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, sarL_eReg_32_63_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, sarL_eReg_32_63_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, sarL_eReg_32_63_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], IMMI_1_31) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[IMMI_1_31]+200;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, sarL_eReg_1_31_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, sarL_eReg_1_31_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, sarL_eReg_1_31_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _MULL_EADXREGL_LOW_ONLY__CONVI2L_NADXREGI_) && STATE__VALID_CHILD(_kids[1], IMMI_32_63) ) {
      unsigned int c = _kids[0]->_cost[_MULL_EADXREGL_LOW_ONLY__CONVI2L_NADXREGI_]+_kids[1]->_cost[IMMI_32_63];
        DFA_PRODUCTION__SET_VALID(_RSHIFTL__MULL_EADXREGL_LOW_ONLY__CONVI2L_NADXREGI__IMMI_32_63, _RShiftL__MulL_eADXRegL_low_only__ConvI2L_nadxRegI__immI_32_63_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _MULL__CONVI2L_NADXREGI__EADXREGL_LOW_ONLY) && STATE__VALID_CHILD(_kids[1], IMMI_32_63) ) {
      unsigned int c = _kids[0]->_cost[_MULL__CONVI2L_NADXREGI__EADXREGL_LOW_ONLY]+_kids[1]->_cost[IMMI_32_63];
        DFA_PRODUCTION__SET_VALID(_RSHIFTL__MULL__CONVI2L_NADXREGI__EADXREGL_LOW_ONLY_IMMI_32_63, _RShiftL__MulL__ConvI2L_nadxRegI__eADXRegL_low_only_immI_32_63_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _MULL_EADXREGL_LOW_ONLY__CONVI2L_NADXREGI_) && STATE__VALID_CHILD(_kids[1], IMMI_32) ) {
      unsigned int c = _kids[0]->_cost[_MULL_EADXREGL_LOW_ONLY__CONVI2L_NADXREGI_]+_kids[1]->_cost[IMMI_32];
        DFA_PRODUCTION__SET_VALID(_RSHIFTL__MULL_EADXREGL_LOW_ONLY__CONVI2L_NADXREGI__IMMI_32, _RShiftL__MulL_eADXRegL_low_only__ConvI2L_nadxRegI__immI_32_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _MULL__CONVI2L_NADXREGI__EADXREGL_LOW_ONLY) && STATE__VALID_CHILD(_kids[1], IMMI_32) ) {
      unsigned int c = _kids[0]->_cost[_MULL__CONVI2L_NADXREGI__EADXREGL_LOW_ONLY]+_kids[1]->_cost[IMMI_32];
        DFA_PRODUCTION__SET_VALID(_RSHIFTL__MULL__CONVI2L_NADXREGI__EADXREGL_LOW_ONLY_IMMI_32, _RShiftL__MulL__ConvI2L_nadxRegI__eADXRegL_low_only_immI_32_rule, c)
    }
}
void  State::_sub_Op_Rethrow(const Node *n){
    {
      unsigned int c = 100;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, RethrowException_rule, c)
    }
}
void  State::_sub_Op_Return(const Node *n){
    {
      unsigned int c = 100;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, Ret_rule, c)
    }
}
void  State::_sub_Op_RoundDouble(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGD) &&
        (
#line 11609 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+125;
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, roundDouble_mem_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGD, loadSSD_rule, c+125)
        DFA_PRODUCTION__SET_VALID(REGDPR1, loadSSD_rule, c+125)
        DFA_PRODUCTION__SET_VALID(REGDPR2, loadSSD_rule, c+125)
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, loadSSD_rule, c+125)
    }
    if( STATE__VALID_CHILD(_kids[0], _DIVD_REGD_REGD) &&
        (
#line 10459 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE<=1 && !(Compile::current()->has_method() && Compile::current()->method()->is_strict()) 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_DIVD_REGD_REGD]+100;
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, divD_reg_round_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGD, loadSSD_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGDPR1) || _cost[REGDPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGDPR1, loadSSD_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGDPR2) || _cost[REGDPR2] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGDPR2, loadSSD_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGNOTDPR1) || _cost[REGNOTDPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, loadSSD_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ADDD_REGD_IMMD) &&
        (
#line 10188 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1 && _kids[0]->_kids[1]->_leaf->getd() != 0.0 && _kids[0]->_kids[1]->_leaf->getd() != 1.0 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_ADDD_REGD_IMMD]+200;
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, addD_reg_imm_round_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGD, loadSSD_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGDPR1) || _cost[REGDPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGDPR1, loadSSD_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGDPR2) || _cost[REGDPR2] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGDPR2, loadSSD_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGNOTDPR1) || _cost[REGNOTDPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, loadSSD_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _ADDD_REGD__LOADD_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[_ADDD_REGD__LOADD_MEMORY_];
        DFA_PRODUCTION__SET_VALID(_ROUNDDOUBLE__ADDD_REGD__LOADD_MEMORY__, _RoundDouble__AddD_regD__LoadD_memory___rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ADDD__LOADD_MEMORY__REGD) ) {
      unsigned int c = _kids[0]->_cost[_ADDD__LOADD_MEMORY__REGD];
        DFA_PRODUCTION__SET_VALID(_ROUNDDOUBLE__ADDD__LOADD_MEMORY__REGD_, _RoundDouble__AddD__LoadD_memory__regD__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _ADDD_REGD_REGD) &&
        (
#line 10119 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_ADDD_REGD_REGD]+250;
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, addD_reg_round_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGD, loadSSD_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGDPR1) || _cost[REGDPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGDPR1, loadSSD_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGDPR2) || _cost[REGDPR2] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGDPR2, loadSSD_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGNOTDPR1) || _cost[REGNOTDPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, loadSSD_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _SUBD_REGD_REGD) &&
        (
#line 10038 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE <=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_SUBD_REGD_REGD]+250;
      if (STATE__NOT_YET_VALID(STACKSLOTD) || _cost[STACKSLOTD] > c) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTD, subD_reg_round_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGD, loadSSD_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGDPR1) || _cost[REGDPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGDPR1, loadSSD_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGDPR2) || _cost[REGDPR2] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGDPR2, loadSSD_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGNOTDPR1) || _cost[REGNOTDPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, loadSSD_rule, c+125)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGDPR1) ) {
      unsigned int c = _kids[0]->_cost[REGDPR1];
        DFA_PRODUCTION__SET_VALID(_ROUNDDOUBLE_REGDPR1_, _RoundDouble_regDPR1__rule, c)
    }
}
void  State::_sub_Op_RoundFloat(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGF) &&
        (
#line 11600 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+125;
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, roundFloat_mem_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGF, loadSSF_rule, c+125)
        DFA_PRODUCTION__SET_VALID(REGFPR1, loadSSF_rule, c+125)
    }
    if( STATE__VALID_CHILD(_kids[0], REGFPR1) ) {
      unsigned int c = _kids[0]->_cost[REGFPR1];
        DFA_PRODUCTION__SET_VALID(_ROUNDFLOAT_REGFPR1_, _RoundFloat_regFPR1__rule, c)
    }
}
void  State::_sub_Op_SafePoint(const Node *n){
    {
      unsigned int c = 125;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, safePoint_poll_rule, c)
    }
}
void  State::_sub_Op_SinD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGXD) &&
        (
#line 10522 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+1800;
        DFA_PRODUCTION__SET_VALID(REGXD, sinXD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, sinXD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, sinXD_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGDPR1) &&
        (
#line 10512 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGDPR1]+1800;
        DFA_PRODUCTION__SET_VALID(REGDPR1, sinD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGD, sinD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR2, sinD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, sinD_reg_rule, c)
    }
}
void  State::_sub_Op_SqrtD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LOADD_MEMORY_) &&
        (
#line 11199 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_LOADD_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(REGXD, sqrtXD_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, sqrtXD_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, sqrtXD_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGXD) &&
        (
#line 11191 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+100;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, sqrtXD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, sqrtXD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, sqrtXD_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVF2D__LOADF_MEMORY__) ) {
      unsigned int c = _kids[0]->_cost[_CONVF2D__LOADF_MEMORY__];
        DFA_PRODUCTION__SET_VALID(_SQRTD__CONVF2D__LOADF_MEMORY___, _SqrtD__ConvF2D__LoadF_memory____rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _CONVF2D_REGX_) ) {
      unsigned int c = _kids[0]->_cost[_CONVF2D_REGX_];
        DFA_PRODUCTION__SET_VALID(_SQRTD__CONVF2D_REGX__, _SqrtD__ConvF2D_regX___rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) &&
        (
#line 10596 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+100;
        DFA_PRODUCTION__SET_VALID(REGD, sqrtD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR1, sqrtD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR2, sqrtD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, sqrtD_reg_rule, c)
    }
}
void  State::_sub_Op_StoreB(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMMI8]+150;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeImmB_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], XREGI) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[XREGI]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeB_rule, c)
      }
    }
}
void  State::_sub_Op_StoreC(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMMI16) &&
        (
#line 7569 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseStoreImmI16
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMMI16]+150;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeImmI16_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[EREGI]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeC_rule, c)
      }
    }
}
void  State::_sub_Op_StoreCM(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMMI8]+150;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeImmCM_rule, c)
    }
}
void  State::_sub_Op_StorePConditional(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _BINARY_EAXREGP_EREGP) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_BINARY_EAXREGP_EREGP]+100;
        DFA_PRODUCTION__SET_VALID(EFLAGSREG, storePConditional_rule, c)
    }
}
void  State::_sub_Op_StoreIConditional(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _BINARY_EAXREGI_EREGI) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_BINARY_EAXREGI_EREGI]+100;
        DFA_PRODUCTION__SET_VALID(EFLAGSREG, storeIConditional_rule, c)
    }
}
void  State::_sub_Op_StoreLConditional(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _BINARY_EADXREGL_EBCXREGL) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_BINARY_EADXREGL_EBCXREGL]+100;
        DFA_PRODUCTION__SET_VALID(EFLAGSREG, storeLConditional_rule, c)
    }
}
void  State::_sub_Op_StoreD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ROUNDDOUBLE__ADDD_REGD__LOADD_MEMORY__) &&
        (
#line 10148 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) && /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ROUNDDOUBLE__ADDD_REGD__LOADD_MEMORY__]+150;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, addD_mem_reg_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ROUNDDOUBLE__ADDD__LOADD_MEMORY__REGD_) &&
        (
#line 10148 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) && /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ROUNDDOUBLE__ADDD__LOADD_MEMORY__REGD_]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, addD_mem_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], REGXD) &&
        (
#line 7670 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[REGXD]+95;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeXD_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ROUNDDOUBLE_REGDPR1_) &&
        (
#line 7657 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ROUNDDOUBLE_REGDPR1_]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeD_rounded_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], REGDPR1) &&
        (
#line 7645 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[REGDPR1]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeD_rule, c)
      }
    }
}
void  State::_sub_Op_StoreF(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMMXF) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMMXF]+50;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeX_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMMF) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMMF]+50;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeF_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _CONVD2F_REGDPR1_) &&
        (
#line 7725 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_CONVD2F_REGDPR1_]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeF_Drounded_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ROUNDFLOAT_REGFPR1_) &&
        (
#line 7713 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ROUNDFLOAT_REGFPR1_]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeF_rounded_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], REGFPR1) &&
        (
#line 7701 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[REGFPR1]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeF_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], REGX) &&
        (
#line 7681 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[REGX]+95;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeX_rule, c)
      }
    }
}
void  State::_sub_Op_StoreI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _XORI__LOADI_MEMORY__IMMI) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_XORI__LOADI_MEMORY__IMMI]+125;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, xorI_mem_imm_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _XORI_EREGI__LOADI_MEMORY_) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_XORI_EREGI__LOADI_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, xorI_mem_eReg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _XORI__LOADI_MEMORY__EREGI) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_XORI__LOADI_MEMORY__EREGI]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, xorI_mem_eReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ORI__LOADI_MEMORY__IMMI) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ORI__LOADI_MEMORY__IMMI]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, orI_mem_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ORI_EREGI__LOADI_MEMORY_) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ORI_EREGI__LOADI_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, orI_mem_eReg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ORI__LOADI_MEMORY__EREGI) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ORI__LOADI_MEMORY__EREGI]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, orI_mem_eReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ANDI__LOADI_MEMORY__IMMI) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ANDI__LOADI_MEMORY__IMMI]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, andI_mem_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ANDI_EREGI__LOADI_MEMORY_) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ANDI_EREGI__LOADI_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, andI_mem_eReg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ANDI__LOADI_MEMORY__EREGI) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ANDI__LOADI_MEMORY__EREGI]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, andI_mem_eReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _RSHIFTI__LOADI_MEMORY__IMMI8) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_RSHIFTI__LOADI_MEMORY__IMMI8]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, sarI_mem_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _RSHIFTI__LOADI_MEMORY__IMMI1) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_RSHIFTI__LOADI_MEMORY__IMMI1]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, sarI_mem_1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _SUBI__LOADI_MEMORY__EREGI) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_SUBI__LOADI_MEMORY__EREGI]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, subI_mem_eReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ADDI__LOADI_MEMORY__IMMI_M1) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ADDI__LOADI_MEMORY__IMMI_M1]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, decI_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ADDI__LOADI_MEMORY__IMMI1) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ADDI__LOADI_MEMORY__IMMI1]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, incI_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ADDI__LOADI_MEMORY__IMMI) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ADDI__LOADI_MEMORY__IMMI]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, addI_mem_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ADDI_EREGI__LOADI_MEMORY_) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[1]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ADDI_EREGI__LOADI_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, addI_mem_eReg_0_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _ADDI__LOADI_MEMORY__EREGI) &&
        /*dst*/(_kids[0]->_leaf == _kids[1]->_kids[0]->_kids[0]->_leaf) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_ADDI__LOADI_MEMORY__EREGI]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, addI_mem_eReg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMMI]+150;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeImmI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], _CONVL2I_EREGL_) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[_CONVL2I_EREGL_]+100;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeL2I_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[EREGI]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeI_rule, c)
      }
    }
}
void  State::_sub_Op_StoreL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], EREGL) &&
        (
#line 7531 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2 && ((StoreLNode*)n)->require_atomic_access()
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[EREGL]+360;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeLX_reg_volatile_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], STACKSLOTL) &&
        (
#line 7518 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2 && ((StoreLNode*)n)->require_atomic_access()
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[STACKSLOTL]+380;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeLX_volatile_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], STACKSLOTL) &&
        (
#line 7505 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1 && ((StoreLNode*)n)->require_atomic_access()
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[STACKSLOTL]+400;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeL_volatile_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], LONG_MEMORY) && STATE__VALID_CHILD(_kids[1], EREGL) &&
        (
#line 7478 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
!((StoreLNode*)n)->require_atomic_access()
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[LONG_MEMORY]+_kids[1]->_cost[EREGL]+200;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeL_rule, c)
      }
    }
}
void  State::_sub_Op_StoreP(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], IMMP) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[IMMP]+150;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeImmP_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], ANYREGP) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[ANYREGP]+125;
      if (STATE__NOT_YET_VALID(UNIVERSE) || _cost[UNIVERSE] > c) {
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeP_rule, c)
      }
    }
}
void  State::_sub_Op_StrComp(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_EDIREGP_ECXREGI) && STATE__VALID_CHILD(_kids[1], _BINARY_ESIREGP_EBXREGI) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_EDIREGP_ECXREGI]+_kids[1]->_cost[_BINARY_ESIREGP_EBXREGI]+100;
        DFA_PRODUCTION__SET_VALID(EAXREGI, string_compare_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGI, string_compare_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, string_compare_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, string_compare_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, string_compare_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, string_compare_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, string_compare_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, string_compare_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, string_compare_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, string_compare_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, string_compare_rule, c)
    }
}
void  State::_sub_Op_StrEquals(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_EDIREGP_ESIREGP) && STATE__VALID_CHILD(_kids[1], ECXREGI) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_EDIREGP_ESIREGP]+_kids[1]->_cost[ECXREGI]+100;
        DFA_PRODUCTION__SET_VALID(EAXREGI, string_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGI, string_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, string_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, string_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, string_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, string_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, string_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, string_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, string_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, string_equals_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, string_equals_rule, c)
    }
}
void  State::_sub_Op_StrIndexOf(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _BINARY_EDIREGP_EDXREGI) && STATE__VALID_CHILD(_kids[1], _BINARY_ESIREGP_EAXREGI) &&
        (
#line 12498 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE42Intrinsics
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_BINARY_EDIREGP_EDXREGI]+_kids[1]->_cost[_BINARY_ESIREGP_EAXREGI]+100;
        DFA_PRODUCTION__SET_VALID(EBXREGI, string_indexof_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGI, string_indexof_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, string_indexof_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, string_indexof_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, string_indexof_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, string_indexof_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, string_indexof_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, string_indexof_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, string_indexof_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, string_indexof_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, string_indexof_rule, c)
    }
}
void  State::_sub_Op_SubD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _MULD_REGD_REGD) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 10404 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
 UseSSE<=1 
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[_MULD_REGD_REGD]+_kids[1]->_cost[REGD]+250;
        DFA_PRODUCTION__SET_VALID(REGD, subD_mulD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR1, subD_mulD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR2, subD_mulD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, subD_mulD_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGXD) && STATE__VALID_CHILD(_kids[1], _LOADD_MEMORY_) &&
        (
#line 10243 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+_kids[1]->_cost[_LOADD_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(REGXD, subXD_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, subXD_mem_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, subXD_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGXD) && STATE__VALID_CHILD(_kids[1], IMMXD) &&
        (
#line 10235 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+_kids[1]->_cost[IMMXD]+100;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, subXD_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, subXD_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, subXD_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGXD) && STATE__VALID_CHILD(_kids[1], REGXD) &&
        (
#line 10227 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+_kids[1]->_cost[REGXD]+100;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, subXD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, subXD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, subXD_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], _LOADD_MEMORY_) &&
        (
#line 10053 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE <=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[_LOADD_MEMORY_]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, subD_reg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR1) || _cost[REGDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR1, subD_reg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR2) || _cost[REGDPR2] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR2, subD_reg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGNOTDPR1) || _cost[REGNOTDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, subD_reg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD];
        DFA_PRODUCTION__SET_VALID(_SUBD_REGD_REGD, _SubD_regD_regD_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGD) && STATE__VALID_CHILD(_kids[1], REGD) &&
        (
#line 10025 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE <=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGD]+_kids[1]->_cost[REGD]+150;
      if (STATE__NOT_YET_VALID(REGD) || _cost[REGD] > c) {
        DFA_PRODUCTION__SET_VALID(REGD, subD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR1) || _cost[REGDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR1, subD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGDPR2) || _cost[REGDPR2] > c) {
        DFA_PRODUCTION__SET_VALID(REGDPR2, subD_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGNOTDPR1) || _cost[REGNOTDPR1] > c) {
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, subD_reg_rule, c)
      }
    }
}
void  State::_sub_Op_SubF(const Node *n){
    bool Compile__current____select_24_bit_instr__ = Compile::current()->select_24_bit_instr();
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF];
        DFA_PRODUCTION__SET_VALID(_SUBF_REGF_REGF, _SubF_regF_regF_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGX) && STATE__VALID_CHILD(_kids[1], _LOADF_MEMORY_) &&
        (
#line 11115 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+_kids[1]->_cost[_LOADF_MEMORY_]+100;
        DFA_PRODUCTION__SET_VALID(REGX, subX_mem_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGX) && STATE__VALID_CHILD(_kids[1], IMMXF) &&
        (
#line 11107 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+_kids[1]->_cost[IMMXF]+100;
      if (STATE__NOT_YET_VALID(REGX) || _cost[REGX] > c) {
        DFA_PRODUCTION__SET_VALID(REGX, subX_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGX) && STATE__VALID_CHILD(_kids[1], REGX) &&
        (
#line 11099 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+_kids[1]->_cost[REGX]+100;
      if (STATE__NOT_YET_VALID(REGX) || _cost[REGX] > c) {
        DFA_PRODUCTION__SET_VALID(REGX, subX_reg_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 11036 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && !Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF]+100;
        DFA_PRODUCTION__SET_VALID(REGF, subF_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGFPR1, subF_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGF) && STATE__VALID_CHILD(_kids[1], REGF) &&
        (
#line 11023 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE==0 && Compile__current____select_24_bit_instr__
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGF]+_kids[1]->_cost[REGF]+100;
        DFA_PRODUCTION__SET_VALID(STACKSLOTF, subF24_reg_rule, c)
      if (STATE__NOT_YET_VALID(REGF) || _cost[REGF] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGF, loadSSF_rule, c+125)
      }
      if (STATE__NOT_YET_VALID(REGFPR1) || _cost[REGFPR1] > c+125) {
        DFA_PRODUCTION__SET_VALID(REGFPR1, loadSSF_rule, c+125)
      }
    }
}
void  State::_sub_Op_SubI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], NCXREGI) && STATE__VALID_CHILD(_kids[1], NCXREGI) ) {
      unsigned int c = _kids[0]->_cost[NCXREGI]+_kids[1]->_cost[NCXREGI];
        DFA_PRODUCTION__SET_VALID(_SUBI_NCXREGI_NCXREGI, _SubI_ncxRegI_ncxRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI_32) && STATE__VALID_CHILD(_kids[1], ECXREGI) ) {
      unsigned int c = _kids[0]->_cost[IMMI_32]+_kids[1]->_cost[ECXREGI];
        DFA_PRODUCTION__SET_VALID(_SUBI_IMMI_32_ECXREGI, _SubI_immI_32_eCXRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI0) && STATE__VALID_CHILD(_kids[1], ECXREGI) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+_kids[1]->_cost[ECXREGI];
        DFA_PRODUCTION__SET_VALID(_SUBI_IMMI0_ECXREGI, _SubI_immI0_eCXRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI0) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+_kids[1]->_cost[EREGI]+100;
        DFA_PRODUCTION__SET_VALID(EREGI, negI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, negI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, negI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, negI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, negI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, negI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, negI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, negI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, negI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, negI_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, negI_eReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], IMMI0) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+_kids[1]->_cost[EREGI];
        DFA_PRODUCTION__SET_VALID(_SUBI_IMMI0_EREGI, _SubI_immI0_eRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[EREGI];
        DFA_PRODUCTION__SET_VALID(_SUBI__LOADI_MEMORY__EREGI, _SubI__LoadI_memory__eRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[_LOADI_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, subI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, subI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, subI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, subI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, subI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, subI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, subI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, subI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, subI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, subI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, subI_eReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, subI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, subI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, subI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, subI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, subI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, subI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, subI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, subI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, subI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, subI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, subI_eReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[EREGI]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, subI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, subI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, subI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, subI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, subI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, subI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, subI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, subI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, subI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, subI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, subI_eReg_rule, c)
      }
    }
}
void  State::_sub_Op_SubL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMML0) && STATE__VALID_CHILD(_kids[1], EREGL) ) {
      unsigned int c = _kids[0]->_cost[IMML0]+_kids[1]->_cost[EREGL]+300;
        DFA_PRODUCTION__SET_VALID(EREGL, negL_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
        DFA_PRODUCTION__SET_VALID(EADXREGL, negL_eReg_rule, c)
        DFA_PRODUCTION__SET_VALID(EBCXREGL, negL_eReg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], _LOADL_LOAD_LONG_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[_LOADL_LOAD_LONG_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, subL_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, subL_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, subL_eReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], IMML) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[IMML]+100;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, subL_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, subL_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, subL_eReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], EREGL) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[EREGL]+200;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, subL_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, subL_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, subL_eReg_rule, c)
      }
    }
}
void  State::_sub_Op_TailCall(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGP_NO_EBP) && STATE__VALID_CHILD(_kids[1], EBXREGP) ) {
      unsigned int c = _kids[0]->_cost[EREGP_NO_EBP]+_kids[1]->_cost[EBXREGP]+300;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, TailCalljmpInd_rule, c)
    }
}
void  State::_sub_Op_TailJump(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGP_NO_EBP) && STATE__VALID_CHILD(_kids[1], EAXREGP) ) {
      unsigned int c = _kids[0]->_cost[EREGP_NO_EBP]+_kids[1]->_cost[EAXREGP]+300;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, tailjmpInd_rule, c)
    }
}
void  State::_sub_Op_TanD(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], REGXD) &&
        (
#line 10563 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+100;
        DFA_PRODUCTION__SET_VALID(REGXD, tanXD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, tanXD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, tanXD_reg_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGDPR1) &&
        (
#line 10554 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE<=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGDPR1]+100;
        DFA_PRODUCTION__SET_VALID(REGDPR1, tanD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGD, tanD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGDPR2, tanD_reg_rule, c)
        DFA_PRODUCTION__SET_VALID(REGNOTDPR1, tanD_reg_rule, c)
    }
}
void  State::_sub_Op_ThreadLocal(const Node *n){
    {
      unsigned int c = 100;
        DFA_PRODUCTION__SET_VALID(EREGP, tlsLoadP_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTP, storeSSP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(ANYREGP, tlsLoadP_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGP, tlsLoadP_rule, c)
        DFA_PRODUCTION__SET_VALID(EREGP_NO_EBP, tlsLoadP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(INDIRECT_WIN95_SAFE, tlsLoadP_rule, c+100+100)
        DFA_PRODUCTION__SET_VALID(EBXREGP, tlsLoadP_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGP, tlsLoadP_rule, c)
        DFA_PRODUCTION__SET_VALID(PREGP, tlsLoadP_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGP, tlsLoadP_rule, c)
        DFA_PRODUCTION__SET_VALID(NABXREGP, tlsLoadP_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGP, tlsLoadP_rule, c)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_REGP, tlsLoadP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_INDIRECT, tlsLoadP_rule, c+100)
        DFA_PRODUCTION__SET_VALID(LOAD_LONG_MEMORY, load_long_indirect_rule, c+100)
        DFA_PRODUCTION__SET_VALID(EDIREGP, tlsLoadP_rule, c)
        DFA_PRODUCTION__SET_VALID(INDIRECT, tlsLoadP_rule, c)
        DFA_PRODUCTION__SET_VALID(MEMORY, indirect_rule, c)
        DFA_PRODUCTION__SET_VALID(LONG_MEMORY, indirect_rule, c)
    }
}
void  State::_sub_Op_URShiftI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], NCXREGI) && STATE__VALID_CHILD(_kids[1], ECXREGI) ) {
      unsigned int c = _kids[0]->_cost[NCXREGI]+_kids[1]->_cost[ECXREGI];
        DFA_PRODUCTION__SET_VALID(_URSHIFTI_NCXREGI_ECXREGI, _URShiftI_ncxRegI_eCXRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI1) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI1];
        DFA_PRODUCTION__SET_VALID(_URSHIFTI_EREGI_IMMI1, _URShiftI_eRegI_immI1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], NCXREGI) && STATE__VALID_CHILD(_kids[1], _SUBI_IMMI_32_ECXREGI) ) {
      unsigned int c = _kids[0]->_cost[NCXREGI]+_kids[1]->_cost[_SUBI_IMMI_32_ECXREGI];
        DFA_PRODUCTION__SET_VALID(_URSHIFTI_NCXREGI__SUBI_IMMI_32_ECXREGI, _URShiftI_ncxRegI__SubI_immI_32_eCXRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], NCXREGI) && STATE__VALID_CHILD(_kids[1], _SUBI_IMMI0_ECXREGI) ) {
      unsigned int c = _kids[0]->_cost[NCXREGI]+_kids[1]->_cost[_SUBI_IMMI0_ECXREGI];
        DFA_PRODUCTION__SET_VALID(_URSHIFTI_NCXREGI__SUBI_IMMI0_ECXREGI, _URShiftI_ncxRegI__SubI_immI0_eCXRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI8];
        DFA_PRODUCTION__SET_VALID(_URSHIFTI_EREGI_IMMI8, _URShiftI_eRegI_immI8_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI_M1];
        DFA_PRODUCTION__SET_VALID(_URSHIFTI_EREGI_IMMI_M1, _URShiftI_eRegI_immI_M1_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], ECXREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[ECXREGI]+100;
        DFA_PRODUCTION__SET_VALID(EREGI, shrI_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, shrI_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, shrI_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, shrI_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, shrI_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, shrI_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, shrI_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, shrI_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, shrI_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, shrI_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, shrI_eReg_CL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI8) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI8]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, shrI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, shrI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, shrI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, shrI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, shrI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, shrI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, shrI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, shrI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, shrI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, shrI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, shrI_eReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI1) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI1]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, shrI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, shrI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, shrI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, shrI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, shrI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, shrI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, shrI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, shrI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, shrI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, shrI_eReg_1_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, shrI_eReg_1_rule, c)
      }
    }
}
void  State::_sub_Op_URShiftL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], ECXREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[ECXREGI]+600;
        DFA_PRODUCTION__SET_VALID(EREGL, shrL_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
        DFA_PRODUCTION__SET_VALID(EADXREGL, shrL_eReg_CL_rule, c)
        DFA_PRODUCTION__SET_VALID(EBCXREGL, shrL_eReg_CL_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], IMMI_32_63) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[IMMI_32_63]+300;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, shrL_eReg_32_63_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, shrL_eReg_32_63_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, shrL_eReg_32_63_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], IMMI_1_31) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[IMMI_1_31]+200;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, shrL_eReg_1_31_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, shrL_eReg_1_31_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, shrL_eReg_1_31_rule, c)
      }
    }
}
void  State::_sub_Op_XorI(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[IMMI];
        DFA_PRODUCTION__SET_VALID(_XORI__LOADI_MEMORY__IMMI, _XorI__LoadI_memory__immI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[_LOADI_MEMORY_];
        DFA_PRODUCTION__SET_VALID(_XORI_EREGI__LOADI_MEMORY_, _XorI_eRegI__LoadI_memory__rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[EREGI];
        DFA_PRODUCTION__SET_VALID(_XORI__LOADI_MEMORY__EREGI, _XorI__LoadI_memory__eRegI_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], _LOADI_MEMORY_) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[_LOADI_MEMORY_]+_kids[1]->_cost[EREGI]+125;
        DFA_PRODUCTION__SET_VALID(EREGI, xorI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
        DFA_PRODUCTION__SET_VALID(XREGI, xorI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(EAXREGI, xorI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(NCXREGI, xorI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(EBXREGI, xorI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(NADXREGI, xorI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(ECXREGI, xorI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(NAXREGI, xorI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(EDXREGI, xorI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(EDIREGI, xorI_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(ESIREGI, xorI_eReg_mem_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], _LOADI_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[_LOADI_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, xorI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, xorI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, xorI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, xorI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, xorI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, xorI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, xorI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, xorI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, xorI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, xorI_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, xorI_eReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, xorI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, xorI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, xorI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, xorI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, xorI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, xorI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, xorI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, xorI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, xorI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, xorI_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, xorI_eReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], IMMI_M1) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[IMMI_M1]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, xorI_eReg_im1_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, xorI_eReg_im1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, xorI_eReg_im1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, xorI_eReg_im1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, xorI_eReg_im1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, xorI_eReg_im1_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, xorI_eReg_im1_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, xorI_eReg_im1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, xorI_eReg_im1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, xorI_eReg_im1_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, xorI_eReg_im1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) && STATE__VALID_CHILD(_kids[1], EREGI) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+_kids[1]->_cost[EREGI]+100;
      if (STATE__NOT_YET_VALID(EREGI) || _cost[EREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EREGI, xorI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTI) || _cost[STACKSLOTI] > c+100) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTI, storeSSI_rule, c+100)
      }
      if (STATE__NOT_YET_VALID(XREGI) || _cost[XREGI] > c) {
        DFA_PRODUCTION__SET_VALID(XREGI, xorI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EAXREGI) || _cost[EAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EAXREGI, xorI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NCXREGI) || _cost[NCXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NCXREGI, xorI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBXREGI) || _cost[EBXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EBXREGI, xorI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NADXREGI) || _cost[NADXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NADXREGI, xorI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ECXREGI) || _cost[ECXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ECXREGI, xorI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(NAXREGI) || _cost[NAXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(NAXREGI, xorI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDXREGI) || _cost[EDXREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDXREGI, xorI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EDIREGI) || _cost[EDIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(EDIREGI, xorI_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(ESIREGI) || _cost[ESIREGI] > c) {
        DFA_PRODUCTION__SET_VALID(ESIREGI, xorI_eReg_rule, c)
      }
    }
}
void  State::_sub_Op_XorL(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], _LOADL_LOAD_LONG_MEMORY_) && STATE__VALID_CHILD(_kids[1], EREGL) ) {
      unsigned int c = _kids[0]->_cost[_LOADL_LOAD_LONG_MEMORY_]+_kids[1]->_cost[EREGL]+125;
        DFA_PRODUCTION__SET_VALID(EREGL, xorl_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
        DFA_PRODUCTION__SET_VALID(EADXREGL, xorl_eReg_mem_0_rule, c)
        DFA_PRODUCTION__SET_VALID(EBCXREGL, xorl_eReg_mem_0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], _LOADL_LOAD_LONG_MEMORY_) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[_LOADL_LOAD_LONG_MEMORY_]+125;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, xorl_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, xorl_eReg_mem_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, xorl_eReg_mem_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], IMML) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[IMML]+100;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, xorl_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, xorl_eReg_imm_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, xorl_eReg_imm_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], IMML_M1) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[IMML_M1]+100;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, xorl_eReg_im1_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, xorl_eReg_im1_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, xorl_eReg_im1_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], EREGL) && STATE__VALID_CHILD(_kids[1], EREGL) ) {
      unsigned int c = _kids[0]->_cost[EREGL]+_kids[1]->_cost[EREGL]+100;
      if (STATE__NOT_YET_VALID(EREGL) || _cost[EREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EREGL, xorl_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(STACKSLOTL) || _cost[STACKSLOTL] > c+200) {
        DFA_PRODUCTION__SET_VALID(STACKSLOTL, storeSSL_rule, c+200)
      }
      if (STATE__NOT_YET_VALID(EADXREGL) || _cost[EADXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EADXREGL, xorl_eReg_rule, c)
      }
      if (STATE__NOT_YET_VALID(EBCXREGL) || _cost[EBCXREGL] > c) {
        DFA_PRODUCTION__SET_VALID(EBCXREGL, xorl_eReg_rule, c)
      }
    }
}
void  State::_sub_Op_Load8B(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 7061 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(REGXD, loadA8B_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, loadA8B_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, loadA8B_rule, c)
    }
}
void  State::_sub_Op_Load4C(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 7081 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(REGXD, loadA4C_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, loadA4C_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, loadA4C_rule, c)
    }
}
void  State::_sub_Op_Load4S(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 7071 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(REGXD, loadA4S_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, loadA4S_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, loadA4S_rule, c)
    }
}
void  State::_sub_Op_Load2I(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 7091 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+125;
        DFA_PRODUCTION__SET_VALID(REGXD, load2IU_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, load2IU_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, load2IU_rule, c)
    }
}
void  State::_sub_Op_Load2F(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) &&
        (
#line 7101 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+145;
        DFA_PRODUCTION__SET_VALID(REGXD, loadA2F_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, loadA2F_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, loadA2F_rule, c)
    }
}
void  State::_sub_Op_Store8B(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], REGXD) &&
        (
#line 7604 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[REGXD]+145;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeA8B_rule, c)
    }
}
void  State::_sub_Op_Store4C(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], REGXD) &&
        (
#line 7614 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[REGXD]+145;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeA4C_rule, c)
    }
}
void  State::_sub_Op_Store2I(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], REGXD) &&
        (
#line 7624 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[REGXD]+145;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeA2I_rule, c)
    }
}
void  State::_sub_Op_Store2F(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], MEMORY) && STATE__VALID_CHILD(_kids[1], REGXD) &&
        (
#line 7691 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=1
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[MEMORY]+_kids[1]->_cost[REGXD]+145;
        DFA_PRODUCTION__SET_VALID(UNIVERSE, storeA2F_rule, c)
    }
}
void  State::_sub_Op_Replicate8B(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMMI0) &&
        (
#line 12334 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+100;
        DFA_PRODUCTION__SET_VALID(REGXD, Repl8B_immI0_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, Repl8B_immI0_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, Repl8B_immI0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) &&
        (
#line 12323 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+100;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, Repl8B_eRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, Repl8B_eRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, Repl8B_eRegI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGXD) &&
        (
#line 12312 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+100;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, Repl8B_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, Repl8B_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, Repl8B_reg_rule, c)
      }
    }
}
void  State::_sub_Op_Replicate4S(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMMI0) &&
        (
#line 12362 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+100;
        DFA_PRODUCTION__SET_VALID(REGXD, Repl4S_immI0_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, Repl4S_immI0_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, Repl4S_immI0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) &&
        (
#line 12352 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+100;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, Repl4S_eRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, Repl4S_eRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, Repl4S_eRegI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGXD) &&
        (
#line 12343 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+100;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, Repl4S_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, Repl4S_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, Repl4S_reg_rule, c)
      }
    }
}
void  State::_sub_Op_Replicate4C(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMMI0) &&
        (
#line 12390 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+100;
        DFA_PRODUCTION__SET_VALID(REGXD, Repl4C_immI0_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, Repl4C_immI0_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, Repl4C_immI0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) &&
        (
#line 12380 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+100;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, Repl4C_eRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, Repl4C_eRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, Repl4C_eRegI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGXD) &&
        (
#line 12371 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+100;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, Repl4C_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, Repl4C_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, Repl4C_reg_rule, c)
      }
    }
}
void  State::_sub_Op_Replicate2I(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMMI0) &&
        (
#line 12418 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[IMMI0]+100;
        DFA_PRODUCTION__SET_VALID(REGXD, Repl2I_immI0_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, Repl2I_immI0_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, Repl2I_immI0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], EREGI) &&
        (
#line 12408 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[EREGI]+100;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, Repl2I_eRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, Repl2I_eRegI_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, Repl2I_eRegI_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGXD) &&
        (
#line 12399 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+100;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, Repl2I_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, Repl2I_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, Repl2I_reg_rule, c)
      }
    }
}
void  State::_sub_Op_Replicate2F(const Node *n){
    if( STATE__VALID_CHILD(_kids[0], IMMXF0) &&
        (
#line 12445 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[IMMXF0]+100;
        DFA_PRODUCTION__SET_VALID(REGXD, Repl2F_immXF0_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD6, Repl2F_immXF0_rule, c)
        DFA_PRODUCTION__SET_VALID(REGXD7, Repl2F_immXF0_rule, c)
    }
    if( STATE__VALID_CHILD(_kids[0], REGX) &&
        (
#line 12436 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGX]+100;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, Repl2F_regX_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, Repl2F_regX_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, Repl2F_regX_rule, c)
      }
    }
    if( STATE__VALID_CHILD(_kids[0], REGXD) &&
        (
#line 12427 "/home/bbrown/src/openjdk/openjdk6_test/hotspot/src/cpu/x86/vm/x86_32.ad"
UseSSE>=2
#line 999999
) ) {
      unsigned int c = _kids[0]->_cost[REGXD]+100;
      if (STATE__NOT_YET_VALID(REGXD) || _cost[REGXD] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD, Repl2F_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD6) || _cost[REGXD6] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD6, Repl2F_reg_rule, c)
      }
      if (STATE__NOT_YET_VALID(REGXD7) || _cost[REGXD7] > c) {
        DFA_PRODUCTION__SET_VALID(REGXD7, Repl2F_reg_rule, c)
      }
    }
}
bool State::DFA(int opcode, const Node *n) {
  switch(opcode) {
  case Op_RegI: { _sub_Op_RegI(n);
    break;
  }
  case Op_RegP: { _sub_Op_RegP(n);
    break;
  }
  case Op_RegF: { _sub_Op_RegF(n);
    break;
  }
  case Op_RegD: { _sub_Op_RegD(n);
    break;
  }
  case Op_RegL: { _sub_Op_RegL(n);
    break;
  }
  case Op_RegFlags: { _sub_Op_RegFlags(n);
    break;
  }
  case Op_AbsD: { _sub_Op_AbsD(n);
    break;
  }
  case Op_AbsF: { _sub_Op_AbsF(n);
    break;
  }
  case Op_AddD: { _sub_Op_AddD(n);
    break;
  }
  case Op_AddF: { _sub_Op_AddF(n);
    break;
  }
  case Op_AddI: { _sub_Op_AddI(n);
    break;
  }
  case Op_AddL: { _sub_Op_AddL(n);
    break;
  }
  case Op_AddP: { _sub_Op_AddP(n);
    break;
  }
  case Op_AndI: { _sub_Op_AndI(n);
    break;
  }
  case Op_AndL: { _sub_Op_AndL(n);
    break;
  }
  case Op_AryEq: { _sub_Op_AryEq(n);
    break;
  }
  case Op_AtanD: { _sub_Op_AtanD(n);
    break;
  }
  case Op_Binary: { _sub_Op_Binary(n);
    break;
  }
  case Op_Bool: { _sub_Op_Bool(n);
    break;
  }
  case Op_ReverseBytesI: { _sub_Op_ReverseBytesI(n);
    break;
  }
  case Op_ReverseBytesL: { _sub_Op_ReverseBytesL(n);
    break;
  }
  case Op_ReverseBytesUS: { _sub_Op_ReverseBytesUS(n);
    break;
  }
  case Op_ReverseBytesS: { _sub_Op_ReverseBytesS(n);
    break;
  }
  case Op_CallDynamicJava: { _sub_Op_CallDynamicJava(n);
    break;
  }
  case Op_CallLeaf: { _sub_Op_CallLeaf(n);
    break;
  }
  case Op_CallLeafNoFP: { _sub_Op_CallLeafNoFP(n);
    break;
  }
  case Op_CallRuntime: { _sub_Op_CallRuntime(n);
    break;
  }
  case Op_CallStaticJava: { _sub_Op_CallStaticJava(n);
    break;
  }
  case Op_CastII: { _sub_Op_CastII(n);
    break;
  }
  case Op_CastX2P: { _sub_Op_CastX2P(n);
    break;
  }
  case Op_CastP2X: { _sub_Op_CastP2X(n);
    break;
  }
  case Op_CastPP: { _sub_Op_CastPP(n);
    break;
  }
  case Op_CheckCastPP: { _sub_Op_CheckCastPP(n);
    break;
  }
  case Op_ClearArray: { _sub_Op_ClearArray(n);
    break;
  }
  case Op_CMoveD: { _sub_Op_CMoveD(n);
    break;
  }
  case Op_CMoveF: { _sub_Op_CMoveF(n);
    break;
  }
  case Op_CMoveI: { _sub_Op_CMoveI(n);
    break;
  }
  case Op_CMoveL: { _sub_Op_CMoveL(n);
    break;
  }
  case Op_CMoveP: { _sub_Op_CMoveP(n);
    break;
  }
  case Op_CmpD: { _sub_Op_CmpD(n);
    break;
  }
  case Op_CmpD3: { _sub_Op_CmpD3(n);
    break;
  }
  case Op_CmpF: { _sub_Op_CmpF(n);
    break;
  }
  case Op_CmpF3: { _sub_Op_CmpF3(n);
    break;
  }
  case Op_CmpI: { _sub_Op_CmpI(n);
    break;
  }
  case Op_CmpL: { _sub_Op_CmpL(n);
    break;
  }
  case Op_CmpL3: { _sub_Op_CmpL3(n);
    break;
  }
  case Op_CmpLTMask: { _sub_Op_CmpLTMask(n);
    break;
  }
  case Op_CmpP: { _sub_Op_CmpP(n);
    break;
  }
  case Op_CmpU: { _sub_Op_CmpU(n);
    break;
  }
  case Op_CompareAndSwapI: { _sub_Op_CompareAndSwapI(n);
    break;
  }
  case Op_CompareAndSwapL: { _sub_Op_CompareAndSwapL(n);
    break;
  }
  case Op_CompareAndSwapP: { _sub_Op_CompareAndSwapP(n);
    break;
  }
  case Op_ConD: { _sub_Op_ConD(n);
    break;
  }
  case Op_ConF: { _sub_Op_ConF(n);
    break;
  }
  case Op_ConI: { _sub_Op_ConI(n);
    break;
  }
  case Op_ConL: { _sub_Op_ConL(n);
    break;
  }
  case Op_ConP: { _sub_Op_ConP(n);
    break;
  }
  case Op_Conv2B: { _sub_Op_Conv2B(n);
    break;
  }
  case Op_ConvD2F: { _sub_Op_ConvD2F(n);
    break;
  }
  case Op_ConvD2I: { _sub_Op_ConvD2I(n);
    break;
  }
  case Op_ConvD2L: { _sub_Op_ConvD2L(n);
    break;
  }
  case Op_ConvF2D: { _sub_Op_ConvF2D(n);
    break;
  }
  case Op_ConvF2I: { _sub_Op_ConvF2I(n);
    break;
  }
  case Op_ConvF2L: { _sub_Op_ConvF2L(n);
    break;
  }
  case Op_ConvI2D: { _sub_Op_ConvI2D(n);
    break;
  }
  case Op_ConvI2F: { _sub_Op_ConvI2F(n);
    break;
  }
  case Op_ConvI2L: { _sub_Op_ConvI2L(n);
    break;
  }
  case Op_ConvL2D: { _sub_Op_ConvL2D(n);
    break;
  }
  case Op_ConvL2F: { _sub_Op_ConvL2F(n);
    break;
  }
  case Op_ConvL2I: { _sub_Op_ConvL2I(n);
    break;
  }
  case Op_CosD: { _sub_Op_CosD(n);
    break;
  }
  case Op_CountedLoopEnd: { _sub_Op_CountedLoopEnd(n);
    break;
  }
  case Op_CountLeadingZerosI: { _sub_Op_CountLeadingZerosI(n);
    break;
  }
  case Op_CountLeadingZerosL: { _sub_Op_CountLeadingZerosL(n);
    break;
  }
  case Op_CountTrailingZerosI: { _sub_Op_CountTrailingZerosI(n);
    break;
  }
  case Op_CountTrailingZerosL: { _sub_Op_CountTrailingZerosL(n);
    break;
  }
  case Op_CreateEx: { _sub_Op_CreateEx(n);
    break;
  }
  case Op_DivD: { _sub_Op_DivD(n);
    break;
  }
  case Op_DivF: { _sub_Op_DivF(n);
    break;
  }
  case Op_DivI: { _sub_Op_DivI(n);
    break;
  }
  case Op_DivL: { _sub_Op_DivL(n);
    break;
  }
  case Op_DivModI: { _sub_Op_DivModI(n);
    break;
  }
  case Op_ExpD: { _sub_Op_ExpD(n);
    break;
  }
  case Op_FastLock: { _sub_Op_FastLock(n);
    break;
  }
  case Op_FastUnlock: { _sub_Op_FastUnlock(n);
    break;
  }
  case Op_Goto: { _sub_Op_Goto(n);
    break;
  }
  case Op_Halt: { _sub_Op_Halt(n);
    break;
  }
  case Op_If: { _sub_Op_If(n);
    break;
  }
  case Op_Jump: { _sub_Op_Jump(n);
    break;
  }
  case Op_LShiftI: { _sub_Op_LShiftI(n);
    break;
  }
  case Op_LShiftL: { _sub_Op_LShiftL(n);
    break;
  }
  case Op_LoadB: { _sub_Op_LoadB(n);
    break;
  }
  case Op_LoadUB: { _sub_Op_LoadUB(n);
    break;
  }
  case Op_LoadUS: { _sub_Op_LoadUS(n);
    break;
  }
  case Op_LoadD: { _sub_Op_LoadD(n);
    break;
  }
  case Op_LoadF: { _sub_Op_LoadF(n);
    break;
  }
  case Op_LoadI: { _sub_Op_LoadI(n);
    break;
  }
  case Op_LoadUI2L: { _sub_Op_LoadUI2L(n);
    break;
  }
  case Op_LoadKlass: { _sub_Op_LoadKlass(n);
    break;
  }
  case Op_LoadL: { _sub_Op_LoadL(n);
    break;
  }
  case Op_LoadPLocked: { _sub_Op_LoadPLocked(n);
    break;
  }
  case Op_LoadLLocked: { _sub_Op_LoadLLocked(n);
    break;
  }
  case Op_LoadP: { _sub_Op_LoadP(n);
    break;
  }
  case Op_LoadRange: { _sub_Op_LoadRange(n);
    break;
  }
  case Op_LoadS: { _sub_Op_LoadS(n);
    break;
  }
  case Op_LogD: { _sub_Op_LogD(n);
    break;
  }
  case Op_Log10D: { _sub_Op_Log10D(n);
    break;
  }
  case Op_MaxI: { _sub_Op_MaxI(n);
    break;
  }
  case Op_MemBarAcquire: { _sub_Op_MemBarAcquire(n);
    break;
  }
  case Op_MemBarRelease: { _sub_Op_MemBarRelease(n);
    break;
  }
  case Op_MemBarVolatile: { _sub_Op_MemBarVolatile(n);
    break;
  }
  case Op_MinI: { _sub_Op_MinI(n);
    break;
  }
  case Op_ModD: { _sub_Op_ModD(n);
    break;
  }
  case Op_ModF: { _sub_Op_ModF(n);
    break;
  }
  case Op_ModI: { _sub_Op_ModI(n);
    break;
  }
  case Op_ModL: { _sub_Op_ModL(n);
    break;
  }
  case Op_MoveI2F: { _sub_Op_MoveI2F(n);
    break;
  }
  case Op_MoveF2I: { _sub_Op_MoveF2I(n);
    break;
  }
  case Op_MoveL2D: { _sub_Op_MoveL2D(n);
    break;
  }
  case Op_MoveD2L: { _sub_Op_MoveD2L(n);
    break;
  }
  case Op_MulD: { _sub_Op_MulD(n);
    break;
  }
  case Op_MulF: { _sub_Op_MulF(n);
    break;
  }
  case Op_MulI: { _sub_Op_MulI(n);
    break;
  }
  case Op_MulL: { _sub_Op_MulL(n);
    break;
  }
  case Op_NegD: { _sub_Op_NegD(n);
    break;
  }
  case Op_NegF: { _sub_Op_NegF(n);
    break;
  }
  case Op_OrI: { _sub_Op_OrI(n);
    break;
  }
  case Op_OrL: { _sub_Op_OrL(n);
    break;
  }
  case Op_PartialSubtypeCheck: { _sub_Op_PartialSubtypeCheck(n);
    break;
  }
  case Op_PopCountI: { _sub_Op_PopCountI(n);
    break;
  }
  case Op_PopCountL: { _sub_Op_PopCountL(n);
    break;
  }
  case Op_PowD: { _sub_Op_PowD(n);
    break;
  }
  case Op_PrefetchRead: { _sub_Op_PrefetchRead(n);
    break;
  }
  case Op_PrefetchWrite: { _sub_Op_PrefetchWrite(n);
    break;
  }
  case Op_RShiftI: { _sub_Op_RShiftI(n);
    break;
  }
  case Op_RShiftL: { _sub_Op_RShiftL(n);
    break;
  }
  case Op_Rethrow: { _sub_Op_Rethrow(n);
    break;
  }
  case Op_Return: { _sub_Op_Return(n);
    break;
  }
  case Op_RoundDouble: { _sub_Op_RoundDouble(n);
    break;
  }
  case Op_RoundFloat: { _sub_Op_RoundFloat(n);
    break;
  }
  case Op_SafePoint: { _sub_Op_SafePoint(n);
    break;
  }
  case Op_SinD: { _sub_Op_SinD(n);
    break;
  }
  case Op_SqrtD: { _sub_Op_SqrtD(n);
    break;
  }
  case Op_StoreB: { _sub_Op_StoreB(n);
    break;
  }
  case Op_StoreC: { _sub_Op_StoreC(n);
    break;
  }
  case Op_StoreCM: { _sub_Op_StoreCM(n);
    break;
  }
  case Op_StorePConditional: { _sub_Op_StorePConditional(n);
    break;
  }
  case Op_StoreIConditional: { _sub_Op_StoreIConditional(n);
    break;
  }
  case Op_StoreLConditional: { _sub_Op_StoreLConditional(n);
    break;
  }
  case Op_StoreD: { _sub_Op_StoreD(n);
    break;
  }
  case Op_StoreF: { _sub_Op_StoreF(n);
    break;
  }
  case Op_StoreI: { _sub_Op_StoreI(n);
    break;
  }
  case Op_StoreL: { _sub_Op_StoreL(n);
    break;
  }
  case Op_StoreP: { _sub_Op_StoreP(n);
    break;
  }
  case Op_StrComp: { _sub_Op_StrComp(n);
    break;
  }
  case Op_StrEquals: { _sub_Op_StrEquals(n);
    break;
  }
  case Op_StrIndexOf: { _sub_Op_StrIndexOf(n);
    break;
  }
  case Op_SubD: { _sub_Op_SubD(n);
    break;
  }
  case Op_SubF: { _sub_Op_SubF(n);
    break;
  }
  case Op_SubI: { _sub_Op_SubI(n);
    break;
  }
  case Op_SubL: { _sub_Op_SubL(n);
    break;
  }
  case Op_TailCall: { _sub_Op_TailCall(n);
    break;
  }
  case Op_TailJump: { _sub_Op_TailJump(n);
    break;
  }
  case Op_TanD: { _sub_Op_TanD(n);
    break;
  }
  case Op_ThreadLocal: { _sub_Op_ThreadLocal(n);
    break;
  }
  case Op_URShiftI: { _sub_Op_URShiftI(n);
    break;
  }
  case Op_URShiftL: { _sub_Op_URShiftL(n);
    break;
  }
  case Op_XorI: { _sub_Op_XorI(n);
    break;
  }
  case Op_XorL: { _sub_Op_XorL(n);
    break;
  }
  case Op_Load8B: { _sub_Op_Load8B(n);
    break;
  }
  case Op_Load4C: { _sub_Op_Load4C(n);
    break;
  }
  case Op_Load4S: { _sub_Op_Load4S(n);
    break;
  }
  case Op_Load2I: { _sub_Op_Load2I(n);
    break;
  }
  case Op_Load2F: { _sub_Op_Load2F(n);
    break;
  }
  case Op_Store8B: { _sub_Op_Store8B(n);
    break;
  }
  case Op_Store4C: { _sub_Op_Store4C(n);
    break;
  }
  case Op_Store2I: { _sub_Op_Store2I(n);
    break;
  }
  case Op_Store2F: { _sub_Op_Store2F(n);
    break;
  }
  case Op_Replicate8B: { _sub_Op_Replicate8B(n);
    break;
  }
  case Op_Replicate4S: { _sub_Op_Replicate4S(n);
    break;
  }
  case Op_Replicate4C: { _sub_Op_Replicate4C(n);
    break;
  }
  case Op_Replicate2I: { _sub_Op_Replicate2I(n);
    break;
  }
  case Op_Replicate2F: { _sub_Op_Replicate2F(n);
    break;
  }
  
  default:
    tty->print("Default case invoked for: \n");
    tty->print("   opcode  = %d, \"%s\"\n", opcode, NodeClassNames[opcode]);
    return false;
  }
  return true;
}
